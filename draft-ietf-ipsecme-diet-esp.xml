<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.22 (Ruby 3.0.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC2119 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC8174 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC4303 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4303.xml">
<!ENTITY RFC4301 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4301.xml">
<!ENTITY RFC8724 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8724.xml">
<!ENTITY RFC7296 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7296.xml">
<!ENTITY I-D.ietf-ipsecme-ikev2-diet-esp-extension SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-ipsecme-ikev2-diet-esp-extension.xml">
<!ENTITY RFC8750 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8750.xml">
<!ENTITY RFC6437 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6437.xml">
<!ENTITY RFC6864 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6864.xml">
<!ENTITY RFC8221 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8221.xml">
<!ENTITY RFC9333 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9333.xml">
<!ENTITY I-D.ietf-schc-architecture SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-schc-architecture.xml">
<!ENTITY RFC8376 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8376.xml">
<!ENTITY I-D.mglt-ipsecme-dscp-np SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.mglt-ipsecme-dscp-np.xml">
<!ENTITY RFC4302 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4302.xml">
<!ENTITY RFC6438 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6438.xml">
]>


<rfc ipr="trust200902" docName="draft-ietf-ipsecme-diet-esp-04" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="EHCP">ESP Header Compression Profile</title>

    <author initials="D." surname="Migault" fullname="Daniel Migault">
      <organization>Ericsson</organization>
      <address>
        <email>daniel.migault@ericsson.com</email>
      </address>
    </author>
    <author initials="M." surname="Hatami" fullname="Maryam Hatami">
      <organization>Concordia University</organization>
      <address>
        <email>maryam.hatami@mail.concordia.ca</email>
      </address>
    </author>
    <author initials="S." surname="Céspedes" fullname="Sandra Céspedes">
      <organization>Concordia University</organization>
      <address>
        <email>sandra.cespedes@concordia.ca</email>
      </address>
    </author>
    <author initials="W." surname="Atwood" fullname="J. William Atwood">
      <organization>Concordia University</organization>
      <address>
        <email>william.atwood@concordia.ca</email>
      </address>
    </author>
    <author initials="D." surname="Liu" fullname="Daiying Liu">
      <organization>Ericsson</organization>
      <address>
        <email>harold.liu@ericsson.com</email>
      </address>
    </author>
    <author initials="T." surname="Guggemos" fullname="Tobias Guggemos">
      <organization>LMU</organization>
      <address>
        <email>guggemos@nm.ifi.lmu.de</email>
      </address>
    </author>
    <author initials="C." surname="Bormann" fullname="Carsten Bormann">
      <organization>Universitaet Bremen TZI</organization>
      <address>
        <email>cabo@tzi.org</email>
      </address>
    </author>
    <author initials="D." surname="Schinazi" fullname="David Schinazi">
      <organization>Google LLC</organization>
      <address>
        <email>dschinazi.ietf@gmail.com</email>
      </address>
    </author>

    <date year="2025" month="January" day="29"/>

    <area>Security</area>
    <workgroup>IPsecme</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 66?>

<t>This document specifies Diet-ESP, a compression mechanisms for control information in IPsec/ESP communications. The compression is expressed through the Static Context Header Compression architecture.</t>



    </abstract>



  </front>

  <middle>


<?line 74?>

<section anchor="requirements-notation"><name>Requirements notation</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.
<?line -6?></t>

</section>
<section anchor="introduction"><name>Introduction</name>

<t>The Encapsulating Security Payload (ESP) <xref target="RFC4303"/> protocol is part of the IPsec <xref target="RFC4301"/> suite of protocols and can provide confidentiality, data origin authentication, integrity, anti-replay, and traffic flow confidentiality. The set of services ESP provides depends on the Security Association (SA) parameters negotiated between devices.</t>

<t>An ESP packet is composed of the ESP Header, the ESP Payload, the ESP Trailer, and the Integrity Check Value (ICV). ESP has two modes of operation: Transport and Tunnel. In Transport mode, the ESP Payload consists of the payload of the original IP packet; the ESP Header is inserted after the original IP packet header. In Tunnel mode, commonly used for VPNs, the ESP Header is placed after an outer IP header and before the inner IP packet headers of the original datagram. This ensures both the original IP headers and payload are protected. Consequently, the ESP Payload field contains either the payload from the original IP packet or the fully-encapsulated IP packet, in transport mode or tunnel mode, respectively.</t>

<t>The ESP Trailer, placed at the end of the encrypted payload, includes fields such as Padding and Pad Length to ensure proper alignment, and Next Header to indicate the protocol following the ESP header. The ICV, calculated over the ESP Header, ESP Payload, and ESP Trailer, is appended after the ESP Trailer to ensure packet integrity. For a simplified overview of ESP, readers are referred to Minimal ESP <xref target="RFC9333"/>.</t>

<t>While ESP is effective in securing traffic, compression can reduce packet sizes, enhancing performance in networks with limited bandwidth. In such environments, reducing the size of transmitted packets is essential to improve efficiency. This document defines the Diet-ESP, a compression/decompression (C/D) mechanism for IPsec/ESP <xref target="RFC4301"/> / <xref target="RFC4303"/> packet headers (including IP, ESP, UDP, TCP... ) and the ESP trailer. The C/D is expressed through the Static Context Header Compression and Fragmentation (SCHC) framework <xref target="RFC8724"/><xref target="I-D.ietf-schc-architecture"/>. The structure of the ESP packet to be compressed is shown in Figure <xref target="fig-esp"/>.</t>

<figure title="Top-Level Format of an ESP Packet" anchor="fig-esp"><artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ----
|               Security Parameters Index (SPI)                 | ^Auth.
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |Cove-
|                      Sequence Number                          | |rage
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | ----
|                    Payload Data* (variable)                   | |   ^
~  Higher Layer Message (transport) or IP datagram (tunnel)     ~ |   |
|                                                               | |Encr.
+               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |Cove
|               |     Padding (0-255 bytes)                     | |rage*
+-+-+-+-+-+-+-+-+               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |   |
|                               |  Pad Length   | Next Header   | v   v
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ------
|         Integrity Check Value-ICV   (variable)                |
~                                                               ~
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t>This document defines the application of the SCHC Architecture for ESP Header Compression. Compression at a SCHC layer, also known as SCHC Stratum, is based on one SCHC Header Instance and one or more SCHC Payload Instances, each instance with its Set of Rules (SoR) for C/D operations <xref target="I-D.ietf-schc-architecture"/>. In the case of IPsec, the SoR and the Set of Variables (SoR) for a SCHC session can be agreed via IKEv2 <xref target="RFC7296"/> and its specific extension <xref target="I-D.ietf-ipsecme-ikev2-diet-esp-extension"/>.</t>

<t>As a result of the application of the same SoR, header values shared by the end-points do not need to be sent on the wire. At the receiver, header information is re-generated from the received compressed packet and the application of the proper SoR retrieved from the selected SCHC Instance. Diet-ESP defines C/D operations at various layers of the IPsec stack; each C/D layer is treated in this document as a SCHC Stratum <xref target="I-D.ietf-schc-architecture"/>. Specifically, Diet-ESP operates over three strata, defined as follows:</t>

<t><list style="numbers" type="1">
  <t>Inner IP Compression (IIPC): The SCHC Payload Instance used in this Stratum applies its SoR directly to the headers of the inner IP packet. For example, in the case of a UDP packet with ports determined by the SA, fields such as UDP ports and checksums are typically compressed. The compressed inner IP packet becomes the SCHC Payload of the IIPC SCHC Packet, comprising the RuleID, the Compressed Residue, and the inner packet payload. If no compression of the inner packet is possible, the No Compression rule is used and the uncompressed IP packet is placed in the Compressed Residue. The resulting IIPC SCHC Packet MAY contain a SCHC Header generated with the SoR defined in the SCHC Header Instance. The SCHC Header is fully elided if its fields are well-known, in which case, the SoR at the receiving IIPC SCHC Header Instance will serve to recreate the SCHC Header.</t>
  <t>Clear Text ESP Compression (CTEC): This Stratum containes a SCHC Payload Instance with the SoR used to compress the fields of the ESP Clear Text Packet, right before being encrypted. The compressed ESP Clear Text Packet becomes the SCHC Payload of the CTEC SCHC Packet, comprising the RuleID, the Compressed Residue, and the IIPC SCHC Packet. The resulting CTEC SCHC Packet MAY contain a SCHC Header generated with the SoR defined in the SCHC Header Instance. The SCHC header is fully elided if its fields are well-known, in which case, the SoR at the receiving CTEC SCHC Header Instance will serve to recreate the SCHC Header.</t>
  <t>Encrypted ESP Compression (EEC): This Stratum contains a SCHC Payload Instance with the SoR to compress the ESP packet header that remains visible after encryption. The compressed Encrypted ESP Packet becomes the SCHC Payload of the EEC SCHC Packet, comprising the RuleID, the Compressed Residue, and the CTEC SCHC Packet. The resulting EEC SCHC Packet may contain a SCHC Header generated with the SoR defined in the SCHC Header Instance. The SCHC header is fully elided if its fields are well-known, in which case, the SoR at the receiving EEC SCHC Header Instance will serve to recreate the SCHC Header.</t>
</list></t>

<t>Note that the descriptions of the three SCHC Strata provided in this document meet the general purpose of ESP. It is possible that in some deployments, the SCHC instances from different SCHC Strata can be merged. Typically, a specific implementation may merge the compression of IIPC and CTEC layers.</t>

<t>The Rules of type C/D describe the behavior of each header field in the ESP header.A SCHC Session manager provides the management of SCHC Instances with a definition of how the SoR and the SoV are initialized from the SA (i.e., RuleID, SCHC MAX_PACKET_SIZE, new SCHC Compression/Decompression Actions (CDA), and fragmentation). The appendix provides illustrative examples of applications of Diet-ESP implemented with the OpenSCHC <xref target="OpenSCHC"/>.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<dl>
  <dt>ESP Header Compression:</dt>
  <dd>
    <t>A method to reduce the size of ESP headers and trailer using predefined compression rules and contexts to improve efficiency.</t>
  </dd>
  <dt>ESP Trailer:</dt>
  <dd>
    <t>A set of fields added at the end of the ESP payload, including Padding, Pad Length, and Next Header, used to ensure alignment and indicate the next protocol.</t>
  </dd>
  <dt>SCHC Stratum:</dt>
  <dd>
    <t>Refers to the specific layer where SCHC operates with the Set of Rules of a SCHC instance. In this document, each SCHC Stratum covers different parts of the ESP packet structure for compression and decompression purposes.</t>
  </dd>
  <dt>Inner IP C/D (IIPC):</dt>
  <dd>
    <t>Expressed via the SCHC framework, IIPC compresses/decompresses the inner IP packet headers.</t>
  </dd>
  <dt>Clear Text ESP C/D (CTEC):</dt>
  <dd>
    <t>Expressed via the SCHC framework, CTEC compresses/decompresses all fields that will later be encrypted by ESP, which include the ESP Data and ESP Trailer.</t>
  </dd>
  <dt>Encrypted ESP C/D (EEC):</dt>
  <dd>
    <t>Expressed via the SCHC framework, EEC compresses/decompresses ESP fields that will not be encrypted by ESP.</t>
  </dd>
  <dt>Security Parameters Index (SPI):</dt>
  <dd>
    <t>As defined in <xref section="4.1" sectionFormat="comma" target="RFC4301"/>.</t>
  </dd>
  <dt>Sequence Number (SN):</dt>
  <dd>
    <t>As defined in <xref section="2.2" sectionFormat="comma" target="RFC4303"/>.</t>
  </dd>
  <dt>Static Context Header Compression (SCHC):</dt>
  <dd>
    <t>A framework for header compression designed for LPWANs, as defined in <xref target="RFC8724"/>.</t>
  </dd>
  <dt>Static Context Header Compression Rules (SCHC Rules):</dt>
  <dd>
    <t>As defined in  <xref target="I-D.ietf-schc-architecture"/></t>
  </dd>
  <dt>RuleID:</dt>
  <dd>
    <t>A unique identifier for each Rule part of the Set of Rules.</t>
  </dd>
  <dt>SCHC Parameters:</dt>
  <dd>
    <t>A set of predefined values used for SCHC compression and decompression, ensuring byte alignment and proper packet formatting based on the SCHC profile.</t>
  </dd>
  <dt>SCHC MAX_PACKET_SIZE:</dt>
  <dd>
    <t>The maximum size of a SCHC-compressed packet that can be transmitted without fragmentation.</t>
  </dd>
  <dt>Traffic Selector (TS):</dt>
  <dd>
    <t>A set of parameters (e.g., IP address range, port range, and protocol) used to define which traffic should be protected by a specific Security Association (SA).</t>
  </dd>
</dl>

<t>It is assumed that the reader is familiar with other SCHC terminology defined in <xref target="RFC8376"/>, <xref target="RFC8724"/>, and <xref target="I-D.ietf-schc-architecture"/>.</t>

</section>
<section anchor="sec-schc-ipsec-integration"><name>Diet-ESP Integration into the IPsec Stack</name>

<t>The main principle of Diet-ESP is to avoid sending information that has already been shared by the ESP peers. Different profiles and technologies, such as those defined by <xref target="RFC4301"/> and <xref target="RFC4303"/>, ensure that ESP can be tailored to various network requirements and security policies. However, ESP is not optimized for bandwidth efficiency because it has been designed as a general-purpose protocol. Diet-ESP aims to improve bandwidth efficiency through compression using the SCHC architecture. The compression will benefit ESP communications over constrained environments.</t>

<t><xref target="fig-arch"/> illustrates the integration of Diet-ESP into the IPsec stack, detailing the different layers and components involved in the compression and decompression processes. The diagram depicts two entities, each representing an endpoint of a communication session protected with IPsec.</t>

<t>Compression rules are derived from Security Association (SA) parameters negotiated through IKEv2 <xref target="RFC7296"/>, such as Traffic Selectors (TS) and IPsec mode, as well as additional parameters explicitly defined in this document as Attributes for Rules Generation (AfRG) (see <xref target="sec-afrg"/>). While TS and IPsec mode serve as inputs for compression, they are not traditionally categorized as AfRG. This document introduces the concept of AfRG to unify these inputs and define the compression process. To facilitate complete negotiation, any remaining AfRG parameters requiring explicit agreement are addressed through the IKEv2 extension <xref target="I-D.ietf-ipsecme-ikev2-diet-esp-extension"/>.</t>

<t>Upon establishing the SA, Diet-ESP uses the AfRGs listed in <xref target="tab-ehc-ctx-esp"/> for derivation of the SoR applicable to the SCHC Instance of a given Stratum. The reference column in <xref target="tab-ehc-ctx-esp"/> indicates the source where the parameter value is defined. The C/D column specifies in which of the SCHC Strata the parameter is being used.</t>

<t>Diet-ESP defines three SCHC Strata for compression: Inner IP Compression (IIPC), Clear Text ESP Compression (CTEC), and Encrypted ESP Compression (EEC). The compression operations for each stratum are described in <xref target="sec-iipc"/>, <xref target="sec-ctec"/>, and <xref target="sec-eec"/>.</t>

<t>This document limits the scope of the compression to the inner IP packet headers and upper layer header fields, such as port numbers and checksums, of specific transport protocols like UDP, UDP-Lite, TCP, and SCTP. Further and more specific compression profiles may be defined in the future to cover compression of headers of additional upper layer protocols.</t>

<t>At the receiver endpoint, the decompression of the inbound packet follows a reverse process. First, the Encrypted ESP C/D (EEC) decompresses the encrypted ESP header fields. After the ESP packet is decrypted, the Clear Text ESP C/D (CTEC) decompresses the Clear Text fields of the ESP packet.</t>

<t>Note that implementations MAY differ from the architectural description but it is assumed that the outputs will be the same.</t>

<figure title="SCHC Integration into the IPsec Stack. Packets are described for IPsec in tunnel mode. C designates the Compressed header for the fields inside. IIP refers to the Inner IP packet, EH refers to the ESP Header, and ET refers to the ESP Trailer. The labels “SCHC (IIPC: Compress Inner IP),” “SCHC (CTEC: Compress Trailer),” and “SCHC (EEC: Compress ESP Header)” are added to indicate that different SCHC instances are applied at the IIPC, CTEC, and EEC layers, respectively." anchor="fig-arch"><artwork align="center"><![CDATA[
                 +----------------------------------------+ 
                 | Diet-ESP Compression Session Manager |
                 |   - Security Association               |
                 |   - Additional Parameters              |
                 +----------------------------------------+    
                                 |        
Endpoint                         |                 Endpoint
                                 |
+-----------------+              |                +-----------------+
| Inner IP packet |              |                | Inner IP packet |
+-----------------+              |                +-----------------+
| SCHC(IIP + UDP  |              |                | SCHC(IIP + UDP  |
| or ...)         |+--------IIPC layer-----------+|  or ...)        |
+-----------------+          C {IIP}              +-----------------+
| ESP             |              |                | ESP             |
| (Encapsulation) |              |                | (unwrapping)    |
+-----------------+              |                +-----------------+
| SCHC            |              v                |  SCHC           |
| (ESP Clear Text |                               | (ESP Clear Text |       
|  Packet)        |+--------- CTEC layer --------+|  Packet)        |
+-----------------+      EH, C {C {IIP}, ET}      +-----------------+
| ESP             |              |                | ESP             |
| (Encryption)    |              |                | (decryption)    |
+-----------------+              v                +-----------------+ 
| SCHC(ESP Header)|+--------- EEC layer ---------+| SCHC(ESP Header)|    
+-----------------+  IP, C {EH, C {C {IIP},  ET}} +-----------------+
| IPv6 + ESP      |                               | IPv6 + ESP      |    
+-----------------+                               +-----------------+
|  L2             |                               |  L2             |
+-----------------+                               +-----------------+
]]></artwork></figure>

<section anchor="schc-parameters-for-diet-esp"><name>SCHC Parameters for Diet-ESP</name>

<t>The SCHC Payload section of a compressed SCHC packet is always in the form:</t>

<figure title="Diet-ESP Compressed Header Format" anchor="tab-diet-esp-compressed-header-format"><artwork align="center"><![CDATA[
0 1 2 3 4 5 6 7
+-+-+-+-+-+-+-+---------...----------+~~~~~~~~~+---------------+
|   RuleID    | Compression Residue  | Payload | SCHC padding  | 
+-+-+-+-+-+-+-+---------...----------+~~~~~~~~~+---------------+
|-------- Compressed Header ---------|         |-- as needed --|
]]></artwork></figure>

<t>The RuleID is a unique identifier for each SCHC rule. It is included in packets to ensure the receiver applies the correct decompression rule, maintaining consistency in packet processing. Note that the Rule ID does not need to be explicitly agreed upon and can be defined independently by each party. The RuleID in Diet-ESP is expressed as 1 byte.</t>

<t>Other variables required for the C/D in Diet-ESP are the following:</t>

<dl>
  <dt>Maximum Packet Size:</dt>
  <dd>
    <t>MAX_PACKET_SIZE is determined by the specific IPsec ESP configuration and the underlying transport, but it is typically aligned with the network’s MTU. The size constraints are optimized based on the available link capacity and negotiated parameters between endpoints.</t>
  </dd>
  <dt>SCHC Padding:</dt>
  <dd>
    <t>Padding in SCHC is used to align data to a specific boundary (typically byte-aligned or 8-bit aligned) to meet the requirements of the underlying link layer protocol or encryption algorithm. Padding bits are often zero or follow a pattern but do not contain significant data. In Diet-ESP, the SCHC padding is added in the CTEC strata to align the packet for encryption.</t>
  </dd>
</dl>

<t>In Diet-ESP, the SCHC padding is added in the CTEC strata to align the packet for encryption. However, after SCHC padding, additional ESP padding may be applied before encryption to align the packet with the required block size specified by the encryption algorithm.
The resulting IP/ESP packet size is variable. In some networks, the packet will require fragmentation before transmission over the wire. Fragmentation is out of the scope of this document since it is dependent on the layer 2 technology.</t>

<t><xref target="tab-diet-esp-compressed-pck"/> illustrates how the final compressed packet looks when using SCHC compression for ESP headers in the Diet-ESP profile.</t>

<figure title="Diet-ESP Compressed Packet Format with SCHC" anchor="tab-diet-esp-compressed-pck"><artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                  EEC SCHC Header (EEC Stratum)                |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ----
|                 CTEC SCHC Header (CTEC Stratum)               | ^
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |
|                 IIPC SCHC Header (IIPC Stratum)                | |
+---------------------------------------------------------------+ En-
|               Inner IP Payload Data* (variable)               | cry-
~                                                               ~ pted
|                                                               | |  
+---------------------------------------------------------------+ |
|                       SCHC CTEC Padding                       | v
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ----
|                                                               |
|                             ICV                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

</section>
<section anchor="set-of-rules-sor-for-diet-esp"><name>Set of Rules (SoR) for Diet-ESP</name>

<t>SCHC SoR are predefined sets of instructions that specify how to compress and decompress the header fields of an ESP packet. A rule in the SoR is identified by its RuleID. The rule describes all the header fields required for a certain transformation (e.g., compression, decompression, fragmentation, reassembly, etc). Each field is identified by a Field ID (FID). Fields may include a Direction Indicator (DI), which in Diet-ESP is set to Up for an outbound SA and Down for an inbound SA. Each field also contains a Field Position parameter that is set to 1, unless specified otherwise.</t>

<t>The identification of a particular SoR will use IPsec-related IDs. Outbound packets MAY use the Traffic Selector to identify the SoR for compression. Inbound packets MAY use the SPI in the ESP header to identify the SoR for decompression.</t>

</section>
<section anchor="sec-afrg"><name>Attributes for Rules Generation</name>

<t>The list of attributes for the Rules Generation (AfRG) is shown in <xref target="tab-ehc-ctx-esp"/>. These attributes are used to express the various compressions that operate at the IIPC, CTEC, and EEC layers.</t>

<t>As outlined in <xref target="sec-schc-ipsec-integration"/>, this specification does not detail the process by which the AfRG are established between peers. Instead, such negotiations are addressed in <xref target="I-D.ietf-ipsecme-ikev2-diet-esp-extension"/>. However, the AfRG can be classified into two distinct categories. The first category encompasses AfRG that are negotiated through a specific IKEv2 extension tailored for the negotiation of AfRG linked to a particular profile, the Diet-ESP profile in this context. The AfRG referenced in <xref target="tab-ehc-ctx-esp"/> in this category are: the DSCP Compression/Decompression Action (CDA) dscp_cda, the ECN CDA ecn_cda, the Flow Label CDA flow_label_cda, the ESP alignment alignment, the ESP SPI Least Significant Bits (LSB) esp_spi_lsb, and the ESP Sequence Number LSB esp_sn_lsb.</t>

<t>The second category pertains to AfRG that are negotiated through IKEv2 exchanges or extensions that are not specifically designed for compression purposes. This category includes AfRG associated with TS, as identified in <xref target="tab-ehc-ctx-esp"/>, which are the TS IP Version ts_ip_version, the TS IP Source Start ts_ip_src_start, the TS IP Source End ts_ip_src_end, the TS IP Destination Start ts_ip_dst_start, the TS IP Destination End ts_ip_dst_end, the TS Protocol ts_proto, the TS Port Source Start ts_port_src_start, the TS Port Source End ts_port_src_end, the TS Port Destination Start ts_port_dst_start, and the  TS Port Destination End ts_port_dst_end. These AfRG are derived from the Traffic Selectors established through TSi/TSr payloads during the IKEv2 CREATE_CHILD_SA exchange, as described in <xref section="3.13" sectionFormat="comma" target="RFC7296"/>. The AfRG IPsec Mode designated as ipsec_mode in <xref target="tab-ehc-ctx-esp"/> is determined by the presence or absence of the USE_TRANSPORT_MODE Notify Payload during the CREATE_CHILD_SA exchange, as detailed in <xref section="1.3.1" sectionFormat="comma" target="RFC7296"/>. The AfRG Tunnel IP designated as tunnel_ip in <xref target="tab-ehc-ctx-esp"/> is obtained from the IP address of the IKE messages exchanged during the CREATE_CHILD_SA process, as noted in <xref section="1.1.3" sectionFormat="comma" target="RFC7296"/>. The AfRGs designated as ESP Encryption Algorythm esp_encr and ESP Security Parameter Index (SPI) esp_spi in <xref target="tab-ehc-ctx-esp"/> are established through the SAi2/SAr2 payloads during the CREATE_CHILD_SA exchange, while the AfRG designated as ESP Sequence Number esp_sn in <xref target="tab-ehc-ctx-esp"/> is initialized upon the creation of the Child SA and incremented for each subsequent ESP message.</t>

<t>The ability to derive the SoR for the IIPC from the agreed Traffic Selectors is indicated by the variable iipc_profile.</t>

<texttable title="Set of Variables to establish Diet-ESP SCHC sessions in Diet-ESP" anchor="tab-ehc-ctx-esp">
      <ttcol align='left'>Variable</ttcol>
      <ttcol align='left'>Possible Values</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <ttcol align='left'>Stratum</ttcol>
      <c>iipc_profile</c>
      <c>"iipc_diet-esp", "iipc_uncompress"</c>
      <c>ThisRFC</c>
      <c>N/A</c>
      <c>dscp_cda</c>
      <c>"uncompress", "lower", "sa"</c>
      <c>ThisRFC</c>
      <c>IIPC</c>
      <c>ecn_cda</c>
      <c>"uncompress", "lower"</c>
      <c>ThisRFC</c>
      <c>IIPC</c>
      <c>flow_label_cda</c>
      <c>"uncompress", "lower", "generated", "zero"</c>
      <c>ThisRFC</c>
      <c>IIPC</c>
      <c>ts_ip_version</c>
      <c>"IPv4-only", "IPv6-only"</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_ip_src_start</c>
      <c>IPv4 or IPv6 address</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_ip_src_end</c>
      <c>IPv4 or IPv6 address</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_ip_dst_start</c>
      <c>IPv4 or IPv6 address</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_ip_dst_end</c>
      <c>IPv4 or IPv6 address</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_proto</c>
      <c>TCP, UDP, UDP-Lite, SCTP, ANY, ...</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_port_src_start</c>
      <c>Port number</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_port_src_end</c>
      <c>Port number</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_port_dst_start</c>
      <c>Port number</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_port_dst_end</c>
      <c>Port number</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>dscp_list</c>
      <c>list of DSCP numbers</c>
      <c>RFCYYYY</c>
      <c>IIPC</c>
      <c>alignment</c>
      <c>"8 bit", "16 bit", "32 bit", "64 bit"</c>
      <c>ThisRFC</c>
      <c>CTEC</c>
      <c>ipsec_mode</c>
      <c>"Tunnel", "Transport"</c>
      <c>RFC4301</c>
      <c>CTEC</c>
      <c>tunnel_ip</c>
      <c>IPv4 or IPv6 address</c>
      <c>RFC4301</c>
      <c>CTEC</c>
      <c>esp_encr</c>
      <c>ESP Encryption Algorithm</c>
      <c>RFC4301</c>
      <c>CTEC</c>
      <c>esp_spi</c>
      <c>ESP SPI</c>
      <c>RFC4301</c>
      <c>EEC</c>
      <c>esp_spi_lsb</c>
      <c>0-32</c>
      <c>ThisRFC</c>
      <c>EEC</c>
      <c>esp_sn</c>
      <c>ESP Sequence Number</c>
      <c>RFC4301</c>
      <c>EEC</c>
      <c>esp_sn_lsb</c>
      <c>0-32</c>
      <c>ThisRFC</c>
      <c>EEC</c>
</texttable>

<t>Any variable starting with "ts_" is associated with the Traffic Selectors (TSi/TSr) of the SA. 
The notation is introduced by this specification but the definitions of the variables are in <xref target="RFC4301"/> and <xref target="RFC7296"/>.</t>

<t>The Traffic Selectors may result in a quite complex expression, and this specification restricts that complexity. 
This specification restricts the resulting TSi/TSr to a single type of IP address (IPv4 or IPv6), a single protocol (e.g., UDP, TCP, or ANY), a single port range for source and destination. This specification presumes that the Traffic Selectors can be articulated as a result of CREATE_CHILD_SA with only one Traffic Selector <xref section="3.13.1" sectionFormat="comma" target="RFC7296"/> in both TSi and TSr payloads (as described in <xref section="3.13" sectionFormat="comma" target="RFC7296"/>). The TS Type MUST be either TS_IPV4_ADDR_RANGE or TS_IPV6_ADDR_RANGE.</t>

<t>Let the resulting Trafic Selectors TSi/TSr be expressed via the Traffic Selector structure defined in <xref section="3.13.1" sectionFormat="comma" target="RFC7296"/>. We designate the local TS the TS - either TSi or TSr - sent by the local peer. Conversely we designate as remote TS the TS - either TSi or TSr - sent by the remote peer.</t>

<t>The details of each parameter are the following:</t>

<dl>
  <dt>iipc_profile:</dt>
  <dd>
    <t>designates the behavior of the IIPC layer. When set to "iipc_uncompress" IIPC is not performed. This specification describes IIPC that corresponds to the "iipc_diet-esp" profile.</t>
  </dd>
  <dt>flow_label_cda:</dt>
  <dd>
    <t>indicates the Flow Label CDA, that is how the Flow Label field of the inner IPv6 packet or the Identification field of the inner IPv4 packet is compressed / decompressed - See <xref target="sec-cda"/> for more information. In a nutshell, "uncompress" indicates that Flow Label (resp. Identification) are not compressed. "lower" indicates the value is read from the outer IP header - eventually with some adaptations when inner IP packet and outer IP packets have different versions. "generated" indicates that the field is generated by the receiving party. In that case, the decompressed value may take a different value compared to its original value. "zero" indicates the field is set to zero.</t>
  </dd>
  <dt>dscp_cda:</dt>
  <dd>
    <t>indicates the DSCP CDA, that is how the DSCP values of the inner IP packet are compressed / decompressed - See <xref target="sec-cda"/> for more information. In a nutshell, "uncompress" indicates that DSCP are not compressed. "lower" indicates the value is read from the outer IP header - eventually with some adaptations when inner IP packet and outer IP packets have different versions.  "sa" indicates, compression is performed according to the DSCP values agreed by the SA (dscp_list).</t>
  </dd>
  <dt>ecn_cda:</dt>
  <dd>
    <t>indicates ECN CDA, that is how the ECN values of the inner IP packet are compressed / decompressed - See <xref target="sec-cda"/> for more information. In a nutshell, "uncompress" indicates that DSCP are not compressed. "lower" indicates the value is read from the outer IP header - eventually with some adaptations when inner IP packet and outer IP packets have different versions.</t>
  </dd>
  <dt>ts_ip_version:</dt>
  <dd>
    <t>designates the TS IP version. Its value is set  to "IPv4-only" when only IPv4 IP addresses are considered and to "IPv6-only" when only IPv6 addresses are considered.
Practically, when IKEv2 is used, it means that the agreed TSi or TSr results only in a mutually exclusive combination of TS_IPV4_ADDR_RANGE or TS_IPV6_ADDR_RANGE payloads. If TS Type of the resulting TSi/TSr is set to TS_IPV4_ADDR_RANGE, ts_ip_version takes the value "IPv4-only". Respectively, if TS Type is set to TS_IPV6_ADDR_RANGE, ts_ip_version is set to "IPv6-only".</t>
  </dd>
  <dt>ts_ip_src_start:</dt>
  <dd>
    <t>designates the TS IP Source Start, that is the starting value range of source IP addresses of the inner packet and has the same meaning as the Starting Address field of the local TS.</t>
  </dd>
  <dt>ts_ip_src_end:</dt>
  <dd>
    <t>designates TS IP Source End that is the high end value range of source IP addresses of the inner packet and has the same meaning as the Ending Address field of the local TS.</t>
  </dd>
  <dt>ts_ip_dst_start:</dt>
  <dd>
    <t>designates the TS IP Destination Start, that is the starting value range of destination IP addresses of the inner packet and has the same meaning as the Starting Address field of the remote TS.</t>
  </dd>
  <dt>ts_ip_dst_end:</dt>
  <dd>
    <t>designates the TS IP Destination End, that is the high end value range of destination IP addresses of the inner packet and has the same meaning as the Ending Address field of the remote TS.</t>
  </dd>
  <dt>ts_proto:</dt>
  <dd>
    <t>designates the TS Protocol, that is the Protocol ID of the resulting TSi/TSr. This profile considers the specific protocol values "TCP", "UDP", "UDP-Lite", "SCTP" and "ANY". The representation of "ANY" is given in <xref section="4.4.4.2" sectionFormat="comma" target="RFC4301"/>.</t>
  </dd>
  <dt>ts_port_src_start:</dt>
  <dd>
    <t>designates the TS Port Source Start, that is the the starting value of the source port range of the inner packet and has the same meaning as the Start Port field of the local TS.</t>
  </dd>
  <dt>ts_port_src_end:</dt>
  <dd>
    <t>designates the TS Port Source End, that is the high end value range of the source port range of the inner packet and has the same meaning as the End Port field of the local TS.</t>
  </dd>
  <dt>ts_port_dst_start:</dt>
  <dd>
    <t>designates TS Port Destination Start, that is the starting value of the destination port range of the inner packet and has the same meaning as the Start Port field of the remote TS.</t>
  </dd>
  <dt>ts_port_dst_end:</dt>
  <dd>
    <t>designates TS Port Destination End, that is the high end value range of the destination port range of the inner packet and has the same meaning as the End Port field of the remote TS.</t>
  </dd>
</dl>

<t>IP addresses and ports are defined as a range and compressed using the Least Significant Bits (LSB).
For a range defined by start and end values, msb( start, end ) is defined as the function that returns the Most Significant Bits (MSB) that remains unchanged while the value evolves between start and end.
Similarly, lsb( start, end ) is defined as the function that returns the LSB that changes while the value evolves between start and end. 
Finally, len( x ) is defined as the function that returns the number of bits of the bit array x.</t>

<dl>
  <dt>dscp_list:</dt>
  <dd>
    <t>designates the list of DSCP values associated to the inner traffic - see for example <xref target="I-D.mglt-ipsecme-dscp-np"/>. These are not Traffic Selectors, but the compression mandates that the packets take one of these listed DSCP values.</t>
  </dd>
  <dt>alignment:</dt>
  <dd>
    <t>designates the ESP alignment as defined by <xref target="RFC4303"/>.</t>
  </dd>
  <dt>ipsec_mode:</dt>
  <dd>
    <t>designates the IPsec Mode defined in <xref target="RFC4301"/>. In this document, the possible values are "tunnel" for the Tunnel mode and "transport" for the Transport mode.</t>
  </dd>
  <dt>tunnel_ip:</dt>
  <dd>
    <t>designates the Tunnel IP address of the tunnel defined in <xref target="RFC4301"/>.
This field is only applicable when the Tunnel mode is used.
That IP address can be an IPv4 or IPv6 address.</t>
  </dd>
  <dt>esp_encr:</dt>
  <dd>
    <t>designates the ESP Encryption Algorithm - also designated as Transform 1 in <xref section="3.3.2" sectionFormat="comma" target="RFC7296"/>. The algorithm is needed to determine whether the ESP Payload Data needs to be aligned to some predefined block size and if the ESP Pad Length and Padding fields can be compressed.  For the purpose of compression it is RECOMMENDED to use algorithms that already compressed their IV <xref target="RFC8750"/>.</t>
  </dd>
  <dt>esp_spi:</dt>
  <dd>
    <t>designates the Security Parameter Index defined in <xref target="RFC4301"/>.</t>
  </dd>
  <dt>esp_spi_lsb:</dt>
  <dd>
    <t>designates the LSB to be considered for the compressed SPI. A value of 32 for esp_spi_lsb will leave the SPI unchanged.</t>
  </dd>
  <dt>esp_sn:</dt>
  <dd>
    <t>designates the ESP Sequence Number (SN) field defined in <xref target="RFC4301"/>.</t>
  </dd>
  <dt>esp_sn_lsb:</dt>
  <dd>
    <t>designates the LSB to be considered for the compressed SN. It works similarly to ESP SPI LSB (see esp_spi_lsb).</t>
  </dd>
</dl>

<section anchor="sec-cda"><name>Compression/Decompression Actions in Diet-ESP</name>

<t>In addition to the Compression/Decompression Actions (CDAs) defined in <xref section="7.4" sectionFormat="comma" target="RFC8724"/>, this specification uses the CDAs presented in <xref target="tab-cda"/>. These CDAs are either a refinement of the compute- * CDA or the result of a combined CDA.</t>

<texttable title="EHCP ESP related parameter" anchor="tab-cda">
      <ttcol align='left'>Action</ttcol>
      <ttcol align='left'>Compression</ttcol>
      <ttcol align='left'>Decompression</ttcol>
      <c>lower</c>
      <c>elided</c>
      <c>Get from lower layer</c>
      <c>generated (Flow Label)</c>
      <c>elided</c>
      <c>Compute flow label</c>
      <c>checksum</c>
      <c>elided</c>
      <c>Compute checksum</c>
      <c>ESP padding</c>
      <c>elided</c>
      <c>Compute padding</c>
      <c>hop limit</c>
      <c>elided</c>
      <c>Get from lower layer</c>
      <c>SCHC padding</c>
      <c>send</c>
      <c>Compute padding</c>
</texttable>

<dl>
  <dt>lower:</dt>
  <dd>
    <t>is only used in a Tunnel Mode and indicates that the fields of the inner IP packet header are generated from the corresponding fields of the Tunnel IP header fields. This CDA can be used for the DSCP, ECN, and IPv6 Flow Label (resp. IPv4 identification) fields.</t>
  </dd>
  <dt>generated:</dt>
  <dd>
    <t>indicates that a brand new Flow Label/Identification field is generated following <xref target="RFC6437"/>, <xref target="RFC6864"/>.</t>
  </dd>
  <dt>checksum:</dt>
  <dd>
    <t>indicates that a checksum is computed accordingly. Typically, the checksum CDA has a different implementation for IPv4, UDP, TCP,...</t>
  </dd>
  <dt>ESP padding:</dt>
  <dd>
    <t>indicates that the ESP padding bytes are generated accordingly.</t>
  </dd>
  <dt>hop limit:</dt>
  <dd>
    <t>indicates that the hop limit is derived from the outer IPv6 header.</t>
  </dd>
  <dt>SCHC padding:</dt>
  <dd>
    <t>indicates that the SCHC padding bits are generated accordingly.</t>
  </dd>
</dl>

</section>
</section>
</section>
<section anchor="schc-compression-for-ipsec-in-tunnel-mode"><name>SCHC Compression for IPsec in Tunnel mode</name>

<section anchor="sec-iipc"><name>Inner IP Compression (IIPC)</name>

<t>When iipc_profile is set to "iipc_uncompress", the packet is uncompressed. 
When iipc_profile is set to "iipc_diet-esp", IIPC proceeds to the compression of the inner IP Packet composed of an IP Header and an IP Payload.
The compression of the inner IP Payload is described in <xref target="sec-payload"/>.<br />
The IP Header is compressed when ipsec_mode is set to "Tunnel" and left uncompressed otherwise. ts_ip_version determines how the IPv6 Header (resp. the IPv4 header) is compressed - see <xref target="sec-inner-ip6"/> (resp. <xref target="sec-inner-ip4"/>).</t>

<section anchor="sec-payload"><name>Inner IP Payload Compression</name>

<t>The compression only affects UDP, UDP-Lite, TCP or SCTP packets and the type of packet is determined by the IP header.</t>

<t>For UDP, UDP-Lite, TCP and SCTP packets, source ports, destination ports, and checksums are compressed. 
For source port (resp. destination port) only the least significant bits are sent. FL is set to 16 bits,  TV is set to msb( ts_port_src_start, ts_port_src_end ) ( resp. ts_port_dst_start, ts_port_dst_end ), MO is set to "MSB" and CDA to "LSB". 
The checksum is elided, FL is set to 16 bits, TV is not set, MO is set to "ignore" and CDA is set to "checksum". 
This may result in decompressing a zero-checksum UDP packet with a valid checksum, but this has no impact as a valid checksum is universally accepted.</t>

<t>For UDP or UDP-Lite the length field is elided. FL is set to 16, TV is not set, MO is set to "ignore".</t>

</section>
<section anchor="sec-inner-ip6"><name>Inner IPv6 Header Compression</name>

<t>The version field is elided, FL is set to 3, TV is set to ts_ipversion, MO is set to "equal" and CDA is set to "not-sent".</t>

<t>Traffic Class is composed of the 6 bit DSCP and 2 bit ECN.
The compression of DSCP and ECN are defined independently.</t>

<t>DSCP values are compressed according to the dscp_cda value:</t>

<t><list style="symbols">
  <t>If dscp_cda is set to "uncompress", the DSCP values are included in the inner IP header. FL is set to 6 bits, TV is not set, MO is set to "ignore", CDA is set to "sent-value".</t>
  <t>If dscp_cda is set to "lower", the DSCP field is elided and its value is copied from the Tunnel IP header. FL is set to 6 bits, TV is not set, MO is set to "ignore", CDA is set to "lower".</t>
  <t>If dscp_cda is set to "sa", DSCP is compressed according to the DSCP values of the SA. If dscp_list contains a single element, the DSCP is elided, FL is set to 6 bits, TV is set to dscp_list[0], MO is set to "equal" and CDA is set to "not-sent". If dscp_list contains more than one DSCP value, FL is set to 6 bits, TV is set to dscp_list, MO is set to "match-mapping" and the CDA is set to "mapping-sent". 
For ECN, FL is set to 2 bits, TV is not set, MO is set to ignore and CDA is set to "value-sent".</t>
</list></t>

<t>ECN values are compressed according to the ecn_cda value:</t>

<t><list style="symbols">
  <t>If ecn_cda is set to "uncompress", the ECN field is included in the inner IP header. FL is set to 2 bits, TV is not set, MO is set to "ignore", CDA is set to "sent-value".</t>
  <t>If ecn_cda is set to "lower", the ECN value is elided and the ECN value is copied in the outer IP header. FL is set to 2 bits, TV is not set, MO is set to "ignore", CDA is set to "lower".</t>
</list></t>

<t>Flow label is compressed according to the flow_label_cda value:</t>

<t><list style="symbols">
  <t>If flow_label_cda is set to "uncompress", the Flow label is included in the IPv6 Header. FL is set to 20 bits, TV is not set, MO is set to "ignore", and CDA is set to "sent-value".</t>
  <t>If flow_label_cda is set to "lower", the Flow Label is elided and read from the outer IP Header (See <xref target="sec-cda"/>). FL is set to 20 bits, TV is not set, MO is set to "ignore", and CDA is set to "lower". If the outer IP header is an IPv4 header, only the 16 LSB of the Flow Label are inserted into the IPv4 Header. At the decompression, the 4 MSB of the Flow Label are set to 0.</t>
  <t>If flow_label_cda is set to "generated", the Flow Label is elided and the Flow Label is then re-generated at the decompression (See <xref target="sec-cda"/>). The resulting Flow Label differs from the initial value. FL is set to 20, TV is not set, MO is set to "ignore" and CDA is set to "generated".</t>
  <t>If flow_label_cda is set to "zero", the Flow Label is elided and set to 0 at decompression. A 0 value indicates no flow label is present. Fl is set to 20 bits, TV is set to 0, MO is set to "equal" and CDA is set to "not-sent".</t>
</list></t>

<t>Payload Length is elided and determined from the Tunnel IP Header Payload Length as well as the decompressed Payload. FL is set to 16 bits, TV is not set, MO is set to "ignore", CDA is set to "lower".</t>

<t>Next Header is compressed according to ts_proto:</t>

<t><list style="symbols">
  <t>If ts_proto is the single value 0, Next Header is not compressed. FL is set to 8 bits, TV is not set, MO is set to "ignore", CDA is set to "sent-value".</t>
  <t>If ts_proto is a single non zero value, Next Header is compressed. FL is set to 8 bits, TV is set to ts_proto, MO is set to "equal" and CDA is set to "not-sent".</t>
</list></t>

<t>The IPv6 Hop Limit is read from the Tunnel IP Header Hop Limit. FL is set to 8 bits, TV is not set, MO is set to "ignore" and CDA is set to "lower."</t>

<t>The source and destination IPv6 addresses are compressed using MSB. 
In both cases, FL is set to 128, TV is respectively set to  msb(ts_ip_src_start, ts_ip_src_ed) or msb(ts_ip_dst_start, ts_ip_dst_end), the MO is set to "MSB," and the CDA is set to "LSB."</t>

</section>
<section anchor="sec-inner-ip4"><name>Inner IPv4 Header Compression</name>

<t>The fields Version, DSCP, ECN, Source Address and Destination Address are compressed as described for IPv6 in <xref target="sec-inner-ip6"/>.
The field Total Length (16 bits) is compressed similarly to the IPv6 field Payload Length. The field Identification (16 bits) is compressed similarly to the IPv6 field Flow Label. If the tunnel IP Header is an IPv6 Header, the Identification is placed as the LSB of the IPv6 Header and the 4 remaining MSB are set to 0.  The field Time to Live is compressed similarly to the IPv6 Hop Limit field. The Protocol field is compressed similarly to the last IPv6 Next Header field.</t>

<t>The Internet Header Length (IHL) is uncompressed, FL is set to 4 bits, TV is not set, MO is set to ignore and CDA is set to "value-sent".</t>

<t>The IPv4 Header checksum is elided.
FL is set to 16, TV is omitted, MO is set to "ignore," and CDA is set to "checksum."</t>

</section>
</section>
<section anchor="sec-byte-align"><name>ESP Payload Data Byte Alignment</name>

<t>SCHC operates on bits, and the compression performed by SCHC may result in a bit payload that is not aligned to a byte (8 bits) boundary. Protocols such as ESP expect payloads to be aligned to byte boundaries (8-bit alignment).
To ensure this, we apply a padding by appending the SCHC_padding bits and the SCHC_padding_len. SCHC_padding_len is encoded over 3 bits to encode the number of bits that will compose the SCHC_padding field. As a result SCHC_padding field has between 0 and 7 bits coded over the SCHC_padding_len. The two fields are between 3 and 10 bits, so if the complementing bits are less than or equal to 2 bits, the padding will result in adding an extra byte.</t>

<t>When the iipc_profile is set to "iipc_uncompress" there is no ESP Payload Data Byte alignment. When iipc_profile is set to "iipc_diet-esp" ESP Payload Data Byte Alignment is performed over the Compressed Inner IP packet. This ensures that in both transport and tunnel mode, the Payload Data later encrypted by ESP result in an integer number of bytes.</t>

</section>
<section anchor="sec-ctec"><name>Clear Text ESP Compression (CTEC)</name>

<t>Once the Inner IP Packet has undergone compression as outlined in <xref target="sec-iipc"/>, followed by the ESP Byte Alignment detailed in <xref target="sec-byte-align"/>, the resulting compressed inner packet comprises a specific number of bytes. To construct the Clear Text ESP Packet, it is necessary to ascertain the ESP Payload Data, the Next Header, the Pad Length, and the Padding fields.</t>

<t>In transport mode, the IP header of the inner packet remains uncompressed during the IIPC phase, and the ESP Payload Data is derived from the inner packet. Conversely, in tunnel mode, the Payload Data encompasses the entirety of the inner packet.</t>

<t>In transport mode, the Next Header field is obtained from either the inner IP Header or the Security Association, as specified in <xref target="sec-inner-ip4"/> or <xref target="sec-inner-ip6"/>. In tunnel mode, the Next Header is elided, as it is determined by ts_ip_version. FL is set to 8 bit, TV is set to IPv4 or IPv6 depending on ts_ip_version, MO is set to "equal" and CDA is set to "not-sent".</t>

<t>The ESP Pad Length and Padding fields are omitted only when ESP alignment has been selected to "8bit" and esp_encr does not necessitate a specific block size alignment, or if that block size is one byte. This is represented by setting FL to (Pad Length + 1) * 8 bits, leaving TV unset, configuring MO to "ignore," and designating CDA as padding. The ESP Padding and Pad Length may vary from their decompressed counterparts. However, since the IPsec process removes the padding, these variations do not affect packet processing. When esp_encr requires a specific block size, the ESP Pad Length and Padding fields remain uncompressed.</t>

</section>
<section anchor="sec-eec"><name>Encrypted ESP Compression (EEC)</name>

<t>SPI is compressed to its LSB.
FL is set to 32 bits, TV is not set, MO is set to "MSB( 4 - esp_spi_lsb)" and CDA is set to "LSB".</t>

<t>SN is compressed to their LSB, similarly to the SPI. 
FL is set to 32 bits, TV is not set, MO is set to "MSB( 4 - esp_sn_lsb)" and CDA is set to "LSB".</t>

</section>
</section>
<section anchor="schc-compression-for-ipsec-in-transport-mode"><name>SCHC Compression for IPsec in Transport mode</name>

<t>The transport mode mostly differs from the Tunnel mode in that the IP header of the packet is not encrypted. As a result, the IP Payload is compressed as described in <xref target="sec-payload"/>. The IP header is not compressed. The byte alignment of the Compressed Payload is performed as described in <xref target="sec-byte-align"/>. The Clear Text ESP Compression is performed as described in <xref target="sec-ctec"/> except for the Next Header Field, which is compressed as described in <xref target="sec-inner-ip6"/>.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>We request the IANA to create a new registry for the IIPC Profile</t>

<figure><artwork><![CDATA[
| IIPC Profile value | Reference |
+--------------------+-----------+
| "iipc_uncompress" | ThisRFC   |
| "iipc_diet-esp"   | ThisRFC   |
]]></artwork></figure>

<t>We request IANA to create the following registries for the "diet-esp" IIPC Profile.</t>

<figure><artwork><![CDATA[
| Flow Label CDA Value | Reference |
+----------------------+-----------+
| "uncompress"         | ThisRFC   |
| "generated"          | ThisRFC   |
| "lower"              | ThisRFC   |
| "zero"               | ThisRFC   |
]]></artwork></figure>

<figure><artwork><![CDATA[
| DSCP CDA Value       | Reference |
+----------------------+-----------+
| "uncompress"         | ThisRFC   |
| "lower"              | ThisRFC   |
| "sa"                 | ThisRFC   |
]]></artwork></figure>

<figure><artwork><![CDATA[
| ECN CDA Value       | Reference |
+----------------------+-----------+
| "uncompress"         | ThisRFC   |
| "lower"              | ThisRFC   |
]]></artwork></figure>

<figure><artwork><![CDATA[
| Alignment            | Reference |
+----------------------+-----------+
| "8 bit"              | ThisRFC   |
| "16 bit"             | ThisRFC   |
| "32 bit"             | ThisRFC   |
| "64 bit"             | ThisRFC   |
]]></artwork></figure>

<figure><artwork><![CDATA[
| IPsec mode Value     | Reference |
+----------------------+-----------+
| "Tunnel"             | ThisRFC   |
| "Transport"          | ThisRFC   |
]]></artwork></figure>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>The security considerations encompass those outlined in ESP <xref target="RFC4303"/> as well as those pertaining to SCHC <xref target="RFC8724"/>.</t>

<t>When employing ESP <xref target="RFC4303"/> in Tunnel Mode, the complete inner IP packet is safeguarded against man-in-the-middle attacks through cryptographic means, rendering it virtually impossible for an attacker to alter any fields associated with either the inner IP header or the inner IP payload. This level of protection is achieved by configuring the Flow Label CDA Value to "uncompress," the DSCP CDA Value to either "uncompress" or "sa," and the ECN CDA Value to "uncompress."</t>

<t>However, this protection is compromised if the Flow Label CDA Value, DSCP CDA Value, or ECN CDA Values are set to "lower." In such cases, the values from the inner packet for the respective fields will be derived from the outer IP header, leaving these fields unprotected. It is important to note that even the Authentication Header <xref target="RFC4302"/> does not provide protection for these fields. When associated with a CDA value of "lower," the level of protection is akin to that provided in Transport mode. This vulnerability could be exploited by an attacker within an untrusted domain, potentially disrupting load balancing strategies that rely on the Flow Label <xref target="RFC6438"/><xref target="RFC6437"/>. More broadly, when the Flow Label CDA Value is set to "lower," the relevant Flow Label Security Considerations from <xref target="RFC6437"/> apply. Additionally, an attacker may manipulate the DSCP values to diminish the priority of specific packets, resulting in packets from the same flow having varying priorities, traversing different paths, and introducing additional latency to applications, thereby facilitating DDoS attacks. Consequently, these fields remain unprotected and are susceptible to modification during transmission, which may also be regarded as an acceptable risk.</t>

<t>When the Flow Label CDA Value is designated as "generated" or "zero," an attacker is unable to exploit the Flow Label field in any manner. The inner packet received is anticipated to possess a Flow Label distinct from that of the original encapsulated packet. However, the Flow Label is assigned by the receiving gateway. When the value is set to "zero," it is known, whereas when it is designated as "generated," it must be produced in accordance with the specifications outlined in <xref target="RFC6437"/>.</t>

<t>The DSCP CDA Value is assigned as "sa" when DSCP values are linked to Security Associations (SAs), but it should not be utilized when all DSCP values are encompassed within a single SA. In such instances, "uncompress" is recommended.</t>

<t>The encryption algorithm must adhere to the guidelines provided in <xref target="RFC8221"/> to guarantee contemporary cryptographic protection.</t>

<t>The least significant bits (LSB) of the ESP Security Parameter Index (SPI) determine the number of bits allocated to the SPI. An acceptable quantity of LSB must ensure that the peer possesses a sufficient number of SPIs, which is contingent upon the implementation of the SA lookup employed. If a peer relies solely on the SPI fields for SA lookup, then the LSB must be sufficiently large to satisfy the condition MAX_SPI &lt;= 2**LSB. The SPI may assume various LSB values; however, the operator must be cognizant that if multiple LSB values are permissible for each type of SA lookup, then multiple SA lookups and signature verifications may be required. It is advisable for a peer to ascertain the LSB associated with an incoming packet in a deterministic manner.</t>

<t>The ESP SN LSB must be established in a manner that allows the receiving peer to clearly ascertain the sequence number of the IPsec packet. If this requirement is not met, it will lead to an invalid signature verification, resulting in the rejection of the packet. Furthermore, the LSB should have the capacity to accommodate the maximum number of packets that may be in transit simultaneously. This approach will guarantee that the last packet received is correctly linked to the corresponding sequence number.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

<t>We would like to thank Laurent Toutain for his guidance on SCHC. Robert Moskowitz for inspiring the name "Diet-ESP" from Diet-HIP. The authors would like to acknowledge the support from Mitacs through the Mitacs Accelerate program.</t>

</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">

&RFC2119;
&RFC8174;
&RFC4303;
&RFC4301;
&RFC8724;
&RFC7296;
&I-D.ietf-ipsecme-ikev2-diet-esp-extension;
&RFC8750;
&RFC6437;
&RFC6864;
&RFC8221;


    </references>

    <references title='Informative References' anchor="sec-informative-references">

<reference anchor="OpenSCHC" target="https://github.com/openschc">
  <front>
    <title>OpenSCHC a Python open-source implementation of SCHC (Static Context Header Compression)</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
&RFC9333;
&I-D.ietf-schc-architecture;
&RFC8376;
&I-D.mglt-ipsecme-dscp-np;
&RFC4302;
&RFC6438;


    </references>

</references>


<?line 646?>

<section anchor="appendix"><name>Appendix</name>

<t>This appendix provides the details of the SCHC rules defined for Diet-ESP compression, alongside an explanation and an example outcome.</t>

<section anchor="json-representation-of-schc-rules-for-diet-esp-header-compression"><name>JSON Representation of SCHC Rules for Diet-ESP Header Compression</name>

<t>The JSON file defines a set of rules within the SCHC_Context that are used for compressing and decompressing ESP headers. Each rule has a RuleID, a Description, and a set of Fields. Each field specifies how a particular part of the packet should be handled during compression or decompression. Note that the RuleID can be set by the user in any numeric order.
The rules include all the compression_levels, including IIPC, CTEC, and EEC as defined in the Terminology section.</t>

<section anchor="transport-mode"><name>Transport mode:</name>

<t>In Transport Mode, since the IP header remains uncompressed, only the UDP payload and ESP fields are compressed. The new IANA-defined CDAs are applied as follows: "checksum" is used for the UDP checksum, meaning it is recalculated at decompression rather than transmitted. "compute-length" eliminates the UDP Length field, as it can be inferred from the payload size. "padding" ensures ESP padding aligns with 8-bit boundaries. "not-sent" is applied to the IPv6 and ESP Next Header fields because their values are predictable. The UDP Source and Destination Ports use "LSB" compression, reducing overhead by sending only the least significant bits. The ESP SPI and Sequence Number are compressed similarly using "LSB" with an MSB mask. Since the IP header is retained, the Source and Destination IPv6 Addresses are fully transmitted using "sent-value". 
~~~json
[
  {
  "ipsec_mode": "Transport",
  "ts_ip_version": "IPv6-only",
  "compressed_fields": [
    {
      "FID": "IPv6.SourceAddress",
      "FL": 128,
      "TV": "2001:db8::1001",
      "MO": "equal",
      "CDA": "sent-value"
    },
    {
      "FID": "IPv6.DestinationAddress",
      "FL": 128,
      "TV": "2001:db8::2002",
      "MO": "equal",
      "CDA": "sent-value"
    },
    {
      "FID": "IPv6.NextHeader",
      "FL": 8,
      "TV": 17,
      "MO": "equal",
      "CDA": "not-sent"
    },
    {
      "FID": "UDP.SourcePort",
      "FL": 16,
      "TV": 1234,
      "MO": "MSB",
      "CDA": "LSB"
    },
    {
      "FID": "UDP.DestinationPort",
      "FL": 16,
      "TV": 5678,
      "MO": "MSB",
      "CDA": "LSB"
    },
    {
      "FID": "UDP.Length",
      "FL": 16,
      "TV": null,
      "MO": "ignore",
      "CDA": "compute-length"
    },
    {
      "FID": "UDP.Checksum",
      "FL": 16,
      "TV": null,
      "MO": "ignore",
      "CDA": "checksum"
    },
    {
      "FID": "ESP.SPI",
      "FL": 32,
      "TV": null,
      "MO": "MSB(4 - esp_spi_lsb)",
      "CDA": "LSB"
    },
    {
      "FID": "ESP.SequenceNumber",
      "FL": 32,
      "TV": null,
      "MO": "MSB(4 - esp_sn_lsb)",
      "CDA": "LSB"
    },
    {
      "FID": "ESP.Padding",
      "FL": 8,
      "TV": null,
      "MO": "ignore",
      "CDA": "padding"
    },
    {
      "FID": "ESP.NextHeader",
      "FL": 8,
      "TV": 17,
      "MO": "equal",
      "CDA": "not-sent"
    }</t>

<t>]
  }
    ]
~~~
### Tunnel mode:
In Tunnel Mode, the full inner IP packet is compressed before encryption, making it more efficient for VPN scenarios. The "iipc_diet-esp" profile is used to indicate compression of the inner packet. The IPv6 Source and Destination Addresses are compressed using "MSB", sending only the variable parts while keeping the most significant bits. UDP Source and Destination Ports are compressed with "LSB", reducing their size. "compute-length" removes the UDP Length field, and "checksum" omits the UDP checksum, which is recalculated at decompression. ESP SPI and Sequence Number are compressed using "LSB" with an MSB mask. The "not-sent" CDA is used for Next Header fields in both IPv6 and ESP, as their values are predictable. 
~~~json
{
  "compressed": [
    {
      "FID": "IPv6.SourceAddress",
      "FL": 128,
      "TV": "2001:db8::1234",
      "MO": "MSB",
      "CDA": "LSB"
    },
    {
      "FID": "IPv6.DestinationAddress",
      "FL": 128,
      "TV": "2001:db8::5678",
      "MO": "MSB",
      "CDA": "LSB"
    },
    {
      "FID": "IPv6.NextHeader",
      "FL": 8,
      "TV": 17,
      "MO": "equal",
      "CDA": "not-sent"
    },
    {
      "FID": "UDP.SourcePort",
      "FL": 16,
      "TV": 5001,
      "MO": "MSB",
      "CDA": "LSB"
    },
    {
      "FID": "UDP.DestinationPort",
      "FL": 16,
      "TV": 4500,
      "MO": "MSB",
      "CDA": "LSB"
    },
    {
      "FID": "UDP.Length",
      "FL": 16,
      "TV": null,
      "MO": "ignore",
      "CDA": "compute-length"
    },
    {
      "FID": "UDP.Checksum",
      "FL": 16,
      "TV": null,
      "MO": "ignore",
      "CDA": "compute-checksum"
    },
    {
      "FID": "ESP.SPI",
      "FL": 32,
      "TV": null,
      "MO": "MSB(4 - esp_spi_lsb)",
      "CDA": "LSB"
    },
    {
      "FID": "ESP.SequenceNumber",
      "FL": 32,
      "TV": null,
      "MO": "MSB(4 - esp_sn_lsb)",
      "CDA": "LSB"
    },
    {
      "FID": "ESP.Padding",
      "FL": 8,
      "TV": null,
      "MO": "ignore",
      "CDA": "padding"
    }
  ]
}</t>

<t>~~~</t>

</section>
</section>
<section anchor="example-outcome"><name>Example Outcome</name>

<section anchor="input-packet"><name>Input Packet</name>

<t>The following packet undergoes processing based on the SCHC Diet-ESP profile:</t>

<t><list style="symbols">
  <t><strong>IPv6 Header</strong>:
  <list style="symbols">
      <t><spanx style="verb">Source Address</spanx>: <spanx style="verb">2001:db8::1000</spanx></t>
      <t><spanx style="verb">Destination Address</spanx>: <spanx style="verb">ff02::5678</spanx></t>
      <t>Other attributes include <spanx style="verb">Payload Length: 18</spanx>, <spanx style="verb">Next Header: UDP</spanx>, and <spanx style="verb">Hop Limit: 64</spanx>.</t>
    </list></t>
  <t><strong>UDP Header</strong>:
  <list style="symbols">
      <t><spanx style="verb">Source Port</spanx>: <spanx style="verb">123</spanx></t>
      <t><spanx style="verb">Destination Port</spanx>: <spanx style="verb">4567</spanx></t>
      <t><spanx style="verb">Length</spanx>: <spanx style="verb">18</spanx></t>
      <t><spanx style="verb">Checksum</spanx>: <spanx style="verb">0x6bc9</spanx></t>
    </list></t>
  <t><strong>Payload</strong>:
  <list style="symbols">
      <t>10 bytes sample Data: <spanx style="verb">b'U\xe2(\x88\xbf\xf9\xd91\x08\xc5'</spanx></t>
    </list></t>
</list></t>

</section>
<section anchor="compression-process"><name>Compression Process</name>

<t><list style="numbers" type="1">
  <t><strong>UDP Header Compression</strong>:
  <list style="symbols">
      <t>Initial size: <spanx style="verb">8 bytes</spanx>.</t>
      <t>Compressed using the UDP-specific rules from the Diet-ESP profile.</t>
      <t>Ports are encoded as LSB fields, reducing the size to <spanx style="verb">2 bytes</spanx>.</t>
    </list></t>
  <t><strong>IPv6 Header Compression</strong>:
  <list style="symbols">
      <t>Initial size: <spanx style="verb">40 bytes</spanx>.</t>
      <t>Source and destination addresses are compressed using value-sent rules based on matching prefixes.</t>
      <t>Final compressed size: <spanx style="verb">17 bytes</spanx>.</t>
    </list></t>
  <t><strong>ESP Header Compression</strong>:
  <list style="symbols">
      <t>Initial size: <spanx style="verb">12 bytes</spanx>.</t>
      <t>SPI is not transmitted (<spanx style="verb">not-sent</spanx> CDA), and SEQ is compressed using the LSB technique.</t>
      <t>Final compressed size: <spanx style="verb">2 bytes</spanx>.</t>
    </list></t>
  <t><strong>ESP Clear Text Compression</strong>:  <list style="symbols">
      <t>The ESP.NXT field (Next Header) is compressed using the match-mapping CDA:
Rule: The ESP.NXT value is matched to a single value (41 for the IPv6 Next Header).
CDA: mapping-sent is used to send only the mapped index.</t>
    </list></t>
  <t><strong>Payload Handling</strong>:
  <list style="symbols">
      <t>The payload is not compressed. Further compression may be possible with additional SCHC rules.</t>
    </list></t>
</list></t>

</section>
<section anchor="decompression-process"><name>Decompression Process</name>

<t>The decompression reverses the steps:</t>

<t><list style="numbers" type="1">
  <t><strong>ESP Header Reconstruction</strong>:
  <list style="symbols">
      <t>SPI is restored using the fixed value from the rule (TV=5).</t>
      <t>SEQ is reconstructed from the LSB field.</t>
    </list></t>
  <t><strong>ESP Clear Text Reconstruction</strong>:  <list style="symbols">
      <t>The ESP.NXT field is restored using the mapping-sent rule, where the value 41 (Next Header for IPv6) is retrieved from the mapping.</t>
    </list></t>
  <t><strong>UDP Header Reconstruction</strong>:
  <list style="symbols">
      <t>Ports are restored using the compressed LSB values.</t>
      <t>Length and checksum fields are calculated using compute-length and compute-checksum CDA.</t>
    </list></t>
  <t><strong>IPv6 Header Reconstruction</strong>:
  <list style="symbols">
      <t>Prefixes are restored using the value-sent fields in the rule.</t>
    </list></t>
  <t><strong>Payload Restoration</strong>:
  <list style="symbols">
      <t>The payload is directly restored, as it was not compressed.</t>
    </list></t>
</list></t>

</section>
<section anchor="final-output-packet"><name>Final Output Packet</name>

<t>After reconstruction, the packet is identical to the original input:</t>

<t><list style="symbols">
  <t><strong>IPv6 Header</strong>:
  <list style="symbols">
      <t><spanx style="verb">Source Address</spanx>: <spanx style="verb">2001:db8::1000</spanx></t>
      <t><spanx style="verb">Destination Address</spanx>: <spanx style="verb">ff02::5678</spanx></t>
      <t><spanx style="verb">Payload Length</spanx>: <spanx style="verb">18</spanx></t>
      <t><spanx style="verb">Next Header</spanx>: <spanx style="verb">UDP</spanx></t>
      <t><spanx style="verb">Hop Limit</spanx>: <spanx style="verb">64</spanx>.</t>
    </list></t>
  <t><strong>UDP Header</strong>:
  <list style="symbols">
      <t><spanx style="verb">Source Port</spanx>: <spanx style="verb">123</spanx></t>
      <t><spanx style="verb">Destination Port</spanx>: <spanx style="verb">4567</spanx></t>
      <t><spanx style="verb">Length</spanx>: <spanx style="verb">18</spanx></t>
      <t><spanx style="verb">Checksum</spanx>: <spanx style="verb">0x6bc9</spanx>.</t>
    </list></t>
  <t><strong>Payload</strong>:
  <list style="symbols">
      <t>Data: <spanx style="verb">b'U\xe2(\x88\xbf\xf9\xd91\x08\xc5'</spanx>.</t>
    </list></t>
</list></t>

<t>This example demonstrates the efficiency and accuracy of the Diet-ESP profile when applied to compress and decompress network packets.</t>

<t><list style="symbols">
  <t><strong>Efficiency</strong>: The SCHC rules reduce packet overhead:
  <list style="symbols">
      <t>The UDP header is compressed from <spanx style="verb">8 bytes</spanx> to <spanx style="verb">2 bytes</spanx>.</t>
      <t>The IPv6 header is reduced from <spanx style="verb">40 bytes</spanx> to <spanx style="verb">17 bytes</spanx>.</t>
      <t>The ESP header size is decreased from <spanx style="verb">12 bytes</spanx> to <spanx style="verb">2 bytes</spanx>.</t>
      <t>The ESP.NXT field is eliminated from transmission (<spanx style="verb">1 byte</spanx> reduction).</t>
    </list>
These reductions are particularly beneficial in constrained environments such as Low-Power Wide-Area Networks (LPWANs).</t>
  <t><strong>Accuracy</strong>: The decompression process fully reconstructs the original packet, ensuring no loss of information.</t>
  <t><strong>Applicability</strong>: By leveraging these rules, the Diet-ESP profile addresses the challenges of transmitting data efficiently in constrained networks, optimizing bandwidth utilization while retaining compatibility with standard protocols.</t>
</list></t>

</section>
<section anchor="github-repository-diet-esp-schc-implementation"><name>GitHub Repository: Diet-ESP SCHC Implementation</name>

<t>The source code for the implementation of the Diet-ESP profile, including the compression and decompression logic using the SCHC rules, is available on GitHub. Access the code at the following link:</t>

<t>GitHub Repository: <eref target="https://github.com/mglt/pyesp/tree/master/examples/draft-diet-esp.py">Diet-ESP SCHC Implementation</eref></t>

<t>This repository contains the rule definitions, examples, and source code for implementing and testing the Diet-ESP profile. Refer to the README file for setup instructions and usage guidelines.</t>

</section>
</section>
</section>


  </back>

<!-- ##markdown-source:
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
ZYRk6gbCDqL/Dz3HHOBT7QAA

-->

</rfc>

