<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.8 (Ruby 3.0.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC2119 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC8174 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC4303 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4303.xml">
<!ENTITY RFC4301 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4301.xml">
<!ENTITY RFC8724 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8724.xml">
<!ENTITY RFC7296 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7296.xml">
<!ENTITY I-D.ietf-ipsecme-ikev2-diet-esp-extension SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-ipsecme-ikev2-diet-esp-extension.xml">
<!ENTITY RFC8750 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8750.xml">
<!ENTITY RFC6437 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6437.xml">
<!ENTITY RFC6864 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6864.xml">
<!ENTITY RFC8221 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8221.xml">
<!ENTITY RFC9333 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9333.xml">
<!ENTITY I-D.ietf-schc-architecture SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-schc-architecture.xml">
<!ENTITY RFC8376 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8376.xml">
<!ENTITY I-D.mglt-ipsecme-dscp-np SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.mglt-ipsecme-dscp-np.xml">
<!ENTITY RFC4302 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4302.xml">
<!ENTITY RFC6438 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6438.xml">
]>


<rfc ipr="trust200902" docName="draft-ietf-ipsecme-diet-esp-04" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="EHCP">ESP Header Compression Profile</title>

    <author initials="D." surname="Migault" fullname="Daniel Migault">
      <organization>Ericsson</organization>
      <address>
        <email>daniel.migault@ericsson.com</email>
      </address>
    </author>
    <author initials="M." surname="Hatami" fullname="Maryam Hatami">
      <organization>Concordia University</organization>
      <address>
        <email>maryam.hatami@mail.concordia.ca</email>
      </address>
    </author>
    <author initials="S." surname="Céspedes" fullname="Sandra Céspedes">
      <organization>Concordia University</organization>
      <address>
        <email>sandra.cespedes@concordia.ca</email>
      </address>
    </author>
    <author initials="W." surname="Atwood" fullname="J. William Atwood">
      <organization>Concordia University</organization>
      <address>
        <email>william.atwood@concordia.ca</email>
      </address>
    </author>
    <author initials="D." surname="Liu" fullname="Daiying Liu">
      <organization>Ericsson</organization>
      <address>
        <email>harold.liu@ericsson.com</email>
      </address>
    </author>
    <author initials="T." surname="Guggemos" fullname="Tobias Guggemos">
      <organization>LMU</organization>
      <address>
        <email>guggemos@nm.ifi.lmu.de</email>
      </address>
    </author>
    <author initials="C." surname="Bormann" fullname="Carsten Bormann">
      <organization>Universitaet Bremen TZI</organization>
      <address>
        <email>cabo@tzi.org</email>
      </address>
    </author>
    <author initials="D." surname="Schinazi" fullname="David Schinazi">
      <organization>Google LLC</organization>
      <address>
        <email>dschinazi.ietf@gmail.com</email>
      </address>
    </author>

    <date year="2025" month="January" day="23"/>

    <area>Security</area>
    <workgroup>IPsecme</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 66?>

<t>The document specifies Diet-ESP, an ESP Header Compression Profile (EHCP) that compresses IPsec/ESP communications using Static Context Header Compression (SCHC).</t>



    </abstract>



  </front>

  <middle>


<?line 73?>

<section anchor="requirements-notation"><name>Requirements notation</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.
<?line -6?></t>

</section>
<section anchor="introduction"><name>Introduction</name>

<t>The Encapsulating Security Payload (ESP) <xref target="RFC4303"/> protocol is part of the IPsec <xref target="RFC4301"/> suite of protocols and can provide confidentiality, data origin authentication, integrity, anti-replay, and traffic flow confidentiality. The set of services ESP provides depends on the Security Association (SA) parameters negotiated between devices.</t>

<t>An ESP packet is composed of the ESP Header, the ESP Payload, the ESP Trailer, and the Integrity Check Value (ICV). ESP has two modes of operation: Transport and Tunnel. In Transport mode, the ESP Payload consists of the payload of the original IP packet; the ESP Header is inserted after the original IP packet header. In Tunnel mode, commonly used for VPNs, the ESP Header is placed after an outer IP header and before the inner IP packet headers of the original datagram. This ensures both the original IP headers and payload are protected. Consequently, the ESP Payload field contains either the payload from the original IP packet or the fully-encapsulated IP packet, in transport mode or tunnel mode, respectively.</t>

<t>The ESP Trailer, placed at the end of the encrypted payload, includes fields such as Padding and Pad Length to ensure proper alignment, and Next Header to indicate the protocol following the ESP header. The ICV, calculated over the ESP Header, ESP Payload, and ESP Trailer, is appended after the ESP Trailer to ensure packet integrity. For a simplified overview of ESP, readers are referred to Minimal ESP <xref target="RFC9333"/>.</t>

<t>While ESP is effective in securing traffic, further optimization can reduce packet sizes, enhancing performance in networks with limited bandwidth. In such environments, reducing the size of transmitted packets is essential to improve efficiency. This document defines the ESP Header Compression Profile (EHCP), namely Diet-ESP, for compression/decompression (C/D) of IPsec/ESP <xref target="RFC4301"/> / <xref target="RFC4303"/> packets using the Static Context Header Compression and Fragmentation (SCHC) framework <xref target="RFC8724"/>. The structure of Diet-ESP is shown in <xref target="fig-esp"/>. Compression with SCHC is based on the use of a Set of Rules (SoR) used in a SCHC instance for C/D operations <xref target="I-D.ietf-schc-architecture"/>. One or more SoR constitute the SCHC Context. In the case of IPsec, the Context can be agreed via IKEv2 <xref target="RFC7296"/> and its specific extension <xref target="I-D.ietf-ipsecme-ikev2-diet-esp-extension"/>.</t>

<t>As a result of the application of the same SoR, header values shared by the end-points do not need to be sent on the wire. At the receiver, header information is re-generated from the received compressed packet and the application of the proper SoR retrieved from the Context.</t>

<figure title="Top-Level Format of an ESP Packet" anchor="fig-esp"><artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ----
|               Security Parameters Index (SPI)                 | ^Int.
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |Cov-
|                      Sequence Number                          | |ered
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | ----
|                    Payload Data* (variable)                   | |   ^
~                                                               ~ |   |
|                                                               | |Conf.
+               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |Cov-
|               |     Padding (0-255 bytes)                     | |ered*
+-+-+-+-+-+-+-+-+               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |   |
|                               |  Pad Length   | Next Header   | v   v
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ------
|         Integrity Check Value-ICV   (variable)                |
~                                                               ~
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<t>This document defines the ESP Header Compression profile (EHCP) Architecture with the application of SCHC at various layers of the IPsec stack---also called SCHC strata---as defined below:</t>

<t><list style="numbers">
  <t>Inner IP Compression (IIPC): The SoR used in this SCHC stratum apply directly to the headers of the inner IP packet. For example, in the case of a UDP packet with ports determined by the SA, fields such as UDP ports and checksums are typically compressed. If no compression of the inner packet is possible, the resulting SCHC packet contains the uncompressed IP packet, as per <xref section="7.2" sectionFormat="comma" target="RFC8724"/>.</t>
  <t>Clear Text ESP Compression (CTEC): This SCHC stratum contains SoR that compress the fields of the ESP Payload, right before being encrypted, as the encapsulated traffic in tunnel mode.</t>
  <t>Encrypted ESP Compression (EEC): This SCHC stratum contains SoR that compress the ESP fields that remain visible after encryption, that is, the ESP Header.</t>
</list></t>

<t>Note that the descriptions of the three SCHC strata provided in this document meet the general purpose of ESP. It is possible that in some deployments, the SCHC instances from different SCHC layers can be merged. Typically, a specific implementation may merge the compression of IIPC and CTEC layers.</t>

<t>Each SoR indicates the ESP header fields to be matched by the rules. The SCHC instances define how the SCHC Context is initialized from the SA and generate the corresponding SCHC rules (i.e., RuleID, SCHC MAX_PACKET_SIZE, new SCHC Compression/Decompression Actions (CDA), and fragmentation). The appendix provides illustrative examples of applications of EHCP implemented with the OpenSCHC <xref target="OpenSCHC"/>.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<dl>
  <dt>ESP Header Compression Profile (EHCP):</dt>
  <dd>
    <t>A method to reduce the size of ESP headers using predefined compression rules and contexts to improve efficiency.</t>
  </dd>
  <dt>ESP Trailer:</dt>
  <dd>
    <t>A set of fields added at the end of the ESP payload, including Padding, Pad Length, and Next Header, used to ensure alignment and indicate the next protocol.</t>
  </dd>
  <dt>SCHC Stratum:</dt>
  <dd>
    <t>Refers to the specific layer in the ESP packet structure where the Set of Rules of a SCHC instance are applied for compression and decompression.</t>
  </dd>
  <dt>Inner IP C/D (IIPC):</dt>
  <dd>
    <t>Expressed via the SCHC framework, IIPC compresses/decompresses the inner IP packet headers.</t>
  </dd>
  <dt>Clear Text ESP C/D (CTEC):</dt>
  <dd>
    <t>Expressed via the SCHC framework, CTEC compresses/decompresses all fields that will later be encrypted by ESP, which include the ESP Data and ESP Trailer.</t>
  </dd>
  <dt>Encrypted ESP C/D (EEC):</dt>
  <dd>
    <t>Expressed via the SCHC framework, EEC compresses/decompresses ESP fields that will not be encrypted by ESP.</t>
  </dd>
  <dt>Security Parameters Index (SPI):</dt>
  <dd>
    <t>As defined in <xref section="4.1" sectionFormat="comma" target="RFC4301"/>.</t>
  </dd>
  <dt>Sequence Number (SN):</dt>
  <dd>
    <t>As defined in <xref section="2.2" sectionFormat="comma" target="RFC4303"/>.</t>
  </dd>
  <dt>Static Context Header Compression (SCHC):</dt>
  <dd>
    <t>A framework for header compression designed for LPWANs, as defined in <xref target="RFC8724"/>.</t>
  </dd>
  <dt>Static Context Header Compression Rules (SCHC Rules):</dt>
  <dd>
    <t>As defined in <xref target="RFC8724"/>, Section 5.</t>
  </dd>
  <dt>RuleID:</dt>
  <dd>
    <t>A unique identifier for each SCHC rule, as defined in <xref target="RFC8724"/>, Section 5.1.</t>
  </dd>
  <dt>SCHC Context:</dt>
  <dd>
    <t>The set of rules shared between communicating entities, as defined in <xref target="RFC8724"/>, Section 5.3.</t>
  </dd>
  <dt>SCHC Parameters:</dt>
  <dd>
    <t>A set of predefined values used for SCHC compression and decompression, ensuring byte alignment and proper packet formatting based on the SCHC profile.</t>
  </dd>
  <dt>SCHC MAX_PACKET_SIZE:</dt>
  <dd>
    <t>The maximum size of a SCHC-compressed packet that can be transmitted without fragmentation.</t>
  </dd>
  <dt>Traffic Selector (TS):</dt>
  <dd>
    <t>A set of parameters (e.g., IP address range, port range, and protocol) used to define which traffic should be protected by a specific Security Association (SA).</t>
  </dd>
</dl>

<t>It is assumed that the reader is familiar with other SCHC terminology defined in <xref target="RFC8376"/>, <xref target="RFC8724"/>, and <xref target="I-D.ietf-schc-architecture"/>.</t>

</section>
<section anchor="sec-schc-ipsec-integration"><name>SCHC Integration into the IPsec Stack</name>

<t>The main principle of the ESP Header Compression Profile (EHCP) is to avoid sending information that has already been shared by the peers. Different profiles and technologies, such as those defined by <xref target="RFC4301"/> and <xref target="RFC4303"/>, ensure that ESP can be tailored to various network requirements and security policies. However, ESP is not optimized for bandwidth efficiency because it has been designed as a general-purpose protocol. EHCP aims to address this by leveraging a profile, expressed via the SCHC architecture, to optimize the ESP header sizes for better efficiency in constrained environments.</t>

<t><xref target="fig-arch"/> illustrates the integration of SCHC into the IPsec stack, detailing the different layers and components involved in the compression and decompression processes. The diagram is divided into two entities, each representing an endpoint of a communication link.</t>

<t>Compression rules are derived from Security Association (SA) parameters negotiated through IKEv2 <xref target="RFC7296"/>, such as Traffic Selectors (TS) and IPsec mode, as well as additional parameters explicitly defined in this document as Attributes for Rules Generation (AfRG) (see <xref target="sec-afrg"/>). While TS and IPsec mode serve as inputs for compression, they are not traditionally categorized as AfRG. This document introduces the concept of AfRG to unify these inputs and define the compression process. To facilitate complete negotiation, any remaining AfRG parameters requiring explicit agreement are addressed through the IKEv2 extension <xref target="I-D.ietf-ipsecme-ikev2-diet-esp-extension"/>.</t>

<t>Upon establishing the SA, Diet-ESP uses the AfRGs listed in <xref target="tab-ehc-ctx-esp"/> for derivation of the SoR applicable to each SCHC stratum. The collection of rules are then used for the SCHC Context initialization. The reference column in <xref target="tab-ehc-ctx-esp"/> indicates the source where the parameter value is defined. The C/D column specifies in which of the SCHC strata the parameter is being used.</t>

<t>EHCP defines three SCHC strata for compression: Inner IP Compression (IIPC), Clear Text ESP Compression (CTEC), and Encrypted ESP Compression (EEC). The compression operations for each stratum are described in <xref target="sec-iipc"/>, <xref target="sec-ctec"/>, and <xref target="sec-eec"/>.</t>

<t>EHCP essentially limits the scope of the compression to the inner IP headers and specific fields such as ports and checksums of transports like UDP, UDP-Lite, TCP, SCTP.  Further and more specific compression profiles may be defined in the future to cover compression of headers of different upper layer protocols.</t>

<t>At the receiver endpoint, the decompression of the inbound packet follows a reverse process. First, the Encrypted ESP C/D (EEC) decompresses the encrypted ESP header fields. After the ESP packet is decrypted, the Clear Text ESP C/D (CTEC) decompresses the Clear Text fields of the ESP packet.</t>

<t>Note that implementations MAY differ from the architectural description but it is assumed that the outputs will be the same.</t>

<figure title="SCHC Integration into the IPsec Stack. Packets are described for IPsec in tunnel mode. C designates the Compressed header for the fields inside. IIP refers to the Inner IP packet, EH refers to the ESP Header, and ET refers to the ESP Trailer. The labels “SCHC (IIPC: Compress Inner IP),” “SCHC (CTEC: Compress Trailer),” and “SCHC (EEC: Compress ESP Header)” are added to indicate that different SCHC instances are applied at the IIPC, CTEC, and EEC layers, respectively." anchor="fig-arch"><artwork align="center"><![CDATA[
                 +--------------------------------+ 
                 | ESP Header Compression Context |
                 |   - Security Association       |
                 |   - Additional Parameters      |
                 +--------------------------------+    
                                 |        
Endpoint                         |                 Endpoint
                                 |
+-----------------+              |                +-----------------+
| Inner IP packet |              |                | Inner IP packet |
+-----------------+              |                +-----------------+
| SCHC(IIP + UDP  |              |                | SCHC(IIP + UDP  |
| or ...)         |+--------IIPC layer-----------+|  or ...)        |
+-----------------+          C {IIP}              +-----------------+
| ESP             |              |                | ESP             |
| (Encapsulation) |              |                | (unwrapping)    |
+-----------------+              |                +-----------------+
| SCHC            |              v                |  SCHC           |
| (ESP Payload)   |+--------- CTEC layer --------+| (ESP Payload)   |
+-----------------+      EH, C {C {IIP}, ET}      +-----------------+
| ESP             |              |                | ESP             |
| (Encryption)    |              |                | (decryption)    |
+-----------------+              v                +-----------------+ 
| SCHC(ESP Header)|+--------- EEC layer ---------+| SCHC(ESP Header)|    
+-----------------+  IP, C {EH, C {C {IIP},  ET}} +-----------------+
| IPv6 + ESP      |                               | IPv6 + ESP      |    
+-----------------+                               +-----------------+
|  L2             |                               |  L2             |
+-----------------+                               +-----------------+
]]></artwork></figure>

<section anchor="schc-parameters-for-diet-esp"><name>SCHC Parameters for Diet-ESP</name>

<t>A SCHC compressed packet is always in the form:</t>

<figure title="Diet-ESP Compressed Header Format" anchor="tab-diet-esp-compressed-header-format"><artwork align="center"><![CDATA[
0 1 2 3 4 5 6 7
+-+-+-+-+-+-+-+---------...----------+~~~~~~~~~+---------------+
|   RuleID    | Compression Residue  | Payload | SCHC padding  | 
+-+-+-+-+-+-+-+---------...----------+~~~~~~~~~+---------------+
|-------- Compressed Header ---------|         |-- as needed --|
]]></artwork></figure>

<t>The SCHC Profile for Diet-ESP is defined as follows:</t>

<dl>
  <dt>RuleID:</dt>
  <dd>
    <t>The RuleID is a unique identifier for each SCHC rule. It is included in packets to ensure the receiver applies the correct decompression rule, maintaining consistency in packet processing. Note that the Rule ID does not need to be explicitly agreed upon and can be defined independently by each party. The RuleID in Diet-ESP is expressed as 1 byte.</t>
  </dd>
  <dt>Maximum Packet Size:</dt>
  <dd>
    <t>MAX_PACKET_SIZE is determined by the specific IPsec ESP configuration and the underlying transport, but it is typically aligned with the network’s MTU. The size constraints are optimized based on the available link capacity and negotiated parameters between endpoints.</t>
  </dd>
  <dt>SCHC Padding:</dt>
  <dd>
    <t>Padding in SCHC is used to align data to a specific boundary (typically byte-aligned or 8-bit aligned) to meet the requirements of the underlying link layer protocol or encryption algorithm. Padding bits are often zero or follow a pattern but do not contain significant data. In Diet-ESP, the SCHC padding is added in the CTEC strata to align the packet for encryption.</t>
  </dd>
</dl>

<t>The resulting IP/ESP packet size is variable. In some networks, the packet will require fragmentation before transmission over the wire. Fragmentation is out of the scope of this document since it is dependent on the layer 2 technology.</t>

<t><xref target="tab-diet-esp-compressed-pck"/> illustrates how the final compressed packet looks when using SCHC compression for ESP headers in the Diet-ESP profile.</t>

<figure title="Diet-ESP Compressed Packet Format with SCHC" anchor="tab-diet-esp-compressed-pck"><artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                  SCHC EEC Header (EEC stratum)                |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ----
|                 SCHC CTEC Header (CTEC stratum)               | ^
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |
|                 SCHC IIP Header (IIPC stratum)                | |
+---------------------------------------------------------------+ En-
|               Inner IP Payload Data* (variable)               | cry-
~                                                               ~ pted
|                                                               | |  
+---------------------------------------------------------------+ |
|                       SCHC CTEC Padding                       | v
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ----
|                                                               |
|                             ICV                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

</section>
<section anchor="set-of-rules-sor-for-diet-esp"><name>Set of Rules (SoR) for Diet-ESP</name>

<t>SCHC SoR are predefined sets of instructions that specify how to compress and decompress the header fields of an ESP packet. The identification of a particular SoR will follow the specification in <xref target="I-D.ietf-schc-architecture"/>.</t>

<t>Similarly to the SA, Rules are directional and the Direction Indicator (DI) is set to Up for outbound SA and Down for inbound SA. Each Rule also contains a Field Position parameter that is set to 1, unless specified otherwise.</t>

</section>
<section anchor="sec-afrg"><name>Attributes for Rules Generation</name>

<t>The list of attributes for the Rules Generation (AfRG) is shown in <xref target="tab-ehc-ctx-esp"/>. These attributes are used to express the various compressions that operate at the IIPC, CTEC, and EEC layers.</t>

<t>As outlined in <xref target="sec-schc-ipsec-integration"/>, this specification does not detail the process by which the AfRG are established between peers. Instead, such negotiations are addressed in <xref target="I-D.ietf-ipsecme-ikev2-diet-esp-extension"/>. However, the AfRG can be classified into two distinct categories. The first category encompasses AfRG that are negotiated through a specific IKEv2 extension tailored for the negotiation of AfRG linked to a particular profile, the Diet-ESP profile in this context. The AfRG referenced in <xref target="tab-ehc-ctx-esp"/> in this category are: the DSCP Compression/Decompression Action (CDA) dscp_cda, the ECN CDA ecn_cda, the Flow Label CDA flow_label_cda, the ESP alignment alignment, the ESP SPI Least Significant Bits (LSB) esp_spi_lsb, and the ESP Sequence Number LSB esp_sn_lsb.</t>

<t>The second category pertains to AfRG that are negotiated through IKEv2 exchanges or extensions that are not specifically designed for compression purposes. This category includes AfRG associated with TS, as identified in <xref target="tab-ehc-ctx-esp"/>, which are the TS IP Version ts_ip_version, the TS IP Source Start ts_ip_src_start, the TS IP Source End ts_ip_src_end, the TS IP Destination Start ts_ip_dst_start, the TS IP Destination End ts_ip_dst_end, the TS Protocol ts_proto, the TS Port Source Start ts_port_src_start, the TS Port Source End ts_port_src_end, the TS Port Destination Start ts_port_dst_start, and the  TS Port Destination End ts_port_dst_end. These AfRG are derived from the Traffic Selectors established through TSi/TSr payloads during the IKEv2 CREATE_CHILD_SA exchange, as described in <xref section="3.13" sectionFormat="comma" target="RFC7296"/>. The AfRG IPsec Mode designated as ipsec_mode in <xref target="tab-ehc-ctx-esp"/> is determined by the presence or absence of the USE_TRANSPORT_MODE Notify Payload during the CREATE_CHILD_SA exchange, as detailed in <xref section="1.3.1" sectionFormat="comma" target="RFC7296"/>. The AfRG Tunnel IP designated as tunnel_ip in <xref target="tab-ehc-ctx-esp"/> is obtained from the IP address of the IKE messages exchanged during the CREATE_CHILD_SA process, as noted in <xref section="1.1.3" sectionFormat="comma" target="RFC7296"/>. The AfRGs designated as ESP Encryption Algorythm esp_encr and ESP Security Parameter Index (SPI) esp_spi in <xref target="tab-ehc-ctx-esp"/> are established through the SAi2/SAr2 payloads during the CREATE_CHILD_SA exchange, while the AfRG designated as ESP Sequence Number esp_sn in <xref target="tab-ehc-ctx-esp"/> is initialized upon the creation of the Child SA and incremented for each subsequent ESP message.</t>

<t>The ability to derive the EHCP Context for the IIPC from the agreed Traffic Selectors is indicated by the variable iipc_profile.</t>

<texttable title="EHCP related parameters" anchor="tab-ehc-ctx-esp">
      <ttcol align='left'>EHC Context</ttcol>
      <ttcol align='left'>Possible Values</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <ttcol align='left'>C / D</ttcol>
      <c>iipc_profile</c>
      <c>"iipc_diet-esp", "iipc_uncompress"</c>
      <c>ThisRFC</c>
      <c>N/A</c>
      <c>dscp_cda</c>
      <c>"uncompress", "lower", "sa"</c>
      <c>ThisRFC</c>
      <c>IIPC</c>
      <c>ecn_cda</c>
      <c>"uncompress", "lower"</c>
      <c>ThisRFC</c>
      <c>IIPC</c>
      <c>flow_label_cda</c>
      <c>"uncompress", "lower", "generated", "zero"</c>
      <c>ThisRFC</c>
      <c>IIPC</c>
      <c>ts_ip_version</c>
      <c>"IPv4-only", "IPv6-only"</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_ip_src_start</c>
      <c>IPv4 or IPv6 address</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_ip_src_end</c>
      <c>IPv4 or IPv6 address</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_ip_dst_start</c>
      <c>IPv4 or IPv6 address</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_ip_dst_end</c>
      <c>IPv4 or IPv6 address</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_proto</c>
      <c>TCP, UDP, UDP-Lite, SCTP, ANY, ...</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_port_src_start</c>
      <c>Port number</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_port_src_end</c>
      <c>Port number</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_port_dst_start</c>
      <c>Port number</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_port_dst_end</c>
      <c>Port number</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>dscp_list</c>
      <c>list of DSCP numbers</c>
      <c>RFCYYYY</c>
      <c>IIPC</c>
      <c>alignment</c>
      <c>"8 bit", "16 bit", "32 bit", "64 bit"</c>
      <c>ThisRFC</c>
      <c>CTEC</c>
      <c>ipsec_mode</c>
      <c>"Tunnel", "Transport"</c>
      <c>RFC4301</c>
      <c>CTEC</c>
      <c>tunnel_ip</c>
      <c>IPv4 or IPv6 address</c>
      <c>RFC4301</c>
      <c>CTEC</c>
      <c>esp_encr</c>
      <c>ESP Encryption Algorithm</c>
      <c>RFC4301</c>
      <c>CTEC</c>
      <c>esp_spi</c>
      <c>ESP SPI</c>
      <c>RFC4301</c>
      <c>EEC</c>
      <c>esp_spi_lsb</c>
      <c>0-32</c>
      <c>ThisRFC</c>
      <c>EEC</c>
      <c>esp_sn</c>
      <c>ESP Sequence Number</c>
      <c>RFC4301</c>
      <c>EEC</c>
      <c>esp_sn_lsb</c>
      <c>0-32</c>
      <c>ThisRFC</c>
      <c>EEC</c>
</texttable>

<t>Any parameter starting with "ts_" is associated with the Traffic Selectors (TSi/TSr) of the SA. 
The notation is introduced by this specification but the definitions of the parameters are in <xref target="RFC4301"/> and <xref target="RFC7296"/>.</t>

<t>The Traffic Selectors may result in a quite complex expression, and this specification restricts that complexity. 
This specification restricts the resulting TSi/TSr to a single type of IP address (IPv4 or IPv6), a single protocol (e.g., UDP, TCP, or ANY), a single port range for source and destination. This specification presumes that the Traffic Selectors can be articulated as a result of CREATE_CHILD_SA with only one Traffic Selector <xref section="3.13.1" sectionFormat="comma" target="RFC7296"/> in both TSi and TSr payloads (as described in <xref section="3.13" sectionFormat="comma" target="RFC7296"/>). The TS Type MUST be either TS_IPV4_ADDR_RANGE or TS_IPV6_ADDR_RANGE.</t>

<t>Let the resulting Trafic Selectors TSi/TSr be expressed via the Traffic Selector structure defined in <xref section="3.13.1" sectionFormat="comma" target="RFC7296"/>. We designate the local TS the TS - either TSi or TSr - sent by the local peer. Conversely we designate as remote TS the TS - either TSi or TSr - sent by the remote peer.</t>

<t>The details of each parameter are the following:</t>

<dl>
  <dt>iipc_profile:</dt>
  <dd>
    <t>designates the profile used by IIPC. When set to "iipc_uncompress" IIPC is not performed. This specification describes IIPC that corresponds to the "iipc_diet-esp" profile.</t>
  </dd>
  <dt>flow_label_cda:</dt>
  <dd>
    <t>indicates the Flow Label CDA, that is how the Flow Label field of the inner IPv6 packet or the Identification field of the inner IPv4 packet is compressed / decompressed - See <xref target="sec-cda"/> for more information. In a nutshell, "uncompress" indicates that Flow Label (resp. Identification) are not compressed. "lower" indicates the value is read from the outer IP header - eventually with some adaptations when inner IP packet and outer IP packets have different versions. "generated" indicates that the field is generated by the receiving party. In that case, the decompressed value may take a different value compared to its original value. "zero" indicates the field is set to zero.</t>
  </dd>
  <dt>dscp_cda:</dt>
  <dd>
    <t>indicates the DSCP CDA, that is how the DSCP values of the inner IP packet are compressed / decompressed - See <xref target="sec-cda"/> for more information. In a nutshell, "uncompress" indicates that DSCP are not compressed. "lower" indicates the value is read from the outer IP header - eventually with some adaptations when inner IP packet and outer IP packets have different versions.  "sa" indicates, compression is performed according to the DSCP values agreed by the SA (dscp_list).</t>
  </dd>
  <dt>ecn_cda:</dt>
  <dd>
    <t>indicates ECN CDA, that is how the ECN values of the inner IP packet are compressed / decompressed - See <xref target="sec-cda"/> for more information. In a nutshell, "uncompress" indicates that DSCP are not compressed. "lower" indicates the value is read from the outer IP header - eventually with some adaptations when inner IP packet and outer IP packets have different versions.</t>
  </dd>
  <dt>ts_ip_version:</dt>
  <dd>
    <t>designates the TS IP version. Its value is set  to "IPv4-only" when only IPv4 IP addresses are considered and to "IPv6-only" when only IPv6 addresses are considered.
Practically, when IKEv2 is used, it means that the agreed TSi or TSr results only in a mutually exclusive combination of TS_IPV4_ADDR_RANGE or TS_IPV6_ADDR_RANGE payloads. If TS Type of the resulting TSi/TSr is set to TS_IPV4_ADDR_RANGE, ts_ip_version takes the value "IPv4-only". Respectively, if TS Type is set to TS_IPV6_ADDR_RANGE, ts_ip_version is set to "IPv6-only".</t>
  </dd>
  <dt>ts_ip_src_start:</dt>
  <dd>
    <t>designates the TS IP Source Start, that is the starting value range of source IP addresses of the inner packet and has the same meaning as the Starting Address field of the local TS.</t>
  </dd>
  <dt>ts_ip_src_end:</dt>
  <dd>
    <t>designates TS IP Source End that is the high end value range of source IP addresses of the inner packet and has the same meaning as the Ending Address field of the local TS.</t>
  </dd>
  <dt>ts_ip_dst_start:</dt>
  <dd>
    <t>designates the TS IP Destination Start, that is the starting value range of destination IP addresses of the inner packet and has the same meaning as the Starting Address field of the remote TS.</t>
  </dd>
  <dt>ts_ip_dst_end:</dt>
  <dd>
    <t>designates the TS IP Destination End, that is the high end value range of destination IP addresses of the inner packet and has the same meaning as the Ending Address field of the remote TS.</t>
  </dd>
  <dt>ts_proto:</dt>
  <dd>
    <t>designates the TS Protocol, that is the Protocol ID of the resulting TSi/TSr. This profile considers the specific protocol values "TCP", "UDP", "UDP-Lite", "SCTP" and "ANY". The representation of "ANY" is given in <xref section="4.4.4.2" sectionFormat="comma" target="RFC4301"/>.</t>
  </dd>
  <dt>ts_port_src_start:</dt>
  <dd>
    <t>designates the TS Port Source Start, that is the the starting value of the source port range of the inner packet and has the same meaning as the Start Port field of the local TS.</t>
  </dd>
  <dt>ts_port_src_end:</dt>
  <dd>
    <t>designates the TS Port Source End, that is the high end value range of the source port range of the inner packet and has the same meaning as the End Port field of the local TS.</t>
  </dd>
  <dt>ts_port_dst_start:</dt>
  <dd>
    <t>designates TS Port Destination Start, that is the starting value of the destination port range of the inner packet and has the same meaning as the Start Port field of the remote TS.</t>
  </dd>
  <dt>ts_port_dst_end:</dt>
  <dd>
    <t>designates TS Port Destination End, that is the high end value range of the destination port range of the inner packet and has the same meaning as the End Port field of the remote TS.</t>
  </dd>
</dl>

<t>IP addresses and ports are defined as a range and compressed using the Least Significant Bits (LSB).
For a range defined by start and end values, msb( start, end ) is defined as the function that returns the Most Significant Bits (MSB) that remains unchanged while the value evolves between start and end.
Similarly, lsb( start, end ) is defined as the function that returns the LSB that changes while the value evolves between start and end. 
Finally, len( x ) is defined as the function that returns the number of bits of the bit array x.</t>

<dl>
  <dt>dscp_list:</dt>
  <dd>
    <t>designates the list of DSCP values associated to the inner traffic - see for example <xref target="I-D.mglt-ipsecme-dscp-np"/>. These are not Traffic Selectors, but the compression mandates that the packets take one of these listed DSCP values.</t>
  </dd>
  <dt>alignment:</dt>
  <dd>
    <t>designates the ESP alignment as defined by <xref target="RFC4303"/>.</t>
  </dd>
  <dt>ipsec_mode:</dt>
  <dd>
    <t>designates the IPsec Mode defined in <xref target="RFC4301"/>. In this document, the possible values are "tunnel" for the Tunnel mode and "transport" for the Transport mode.</t>
  </dd>
  <dt>tunnel_ip:</dt>
  <dd>
    <t>designates the Tunnel IP address of the tunnel defined in <xref target="RFC4301"/>.
This field is only applicable when the Tunnel mode is used.
That IP address can be an IPv4 or IPv6 address.</t>
  </dd>
  <dt>esp_encr:</dt>
  <dd>
    <t>designates the ESP Encryption Algorithm - also designated as Transform 1 in <xref section="3.3.2" sectionFormat="comma" target="RFC7296"/>. The algorithm is needed to determine whether the ESP Payload Data needs to be aligned to some predefined block size and if the ESP Pad Length and Padding fields can be compressed.  For the purpose of compression it is RECOMMENDED to use algorithms that already compressed their IV <xref target="RFC8750"/>.</t>
  </dd>
  <dt>esp_spi:</dt>
  <dd>
    <t>designates the Security Parameter Index defined in <xref target="RFC4301"/>.</t>
  </dd>
  <dt>esp_spi_lsb:</dt>
  <dd>
    <t>designates the LSB to be considered for the compressed SPI. A value of 32 for esp_spi_lsb will leave the SPI unchanged.</t>
  </dd>
  <dt>esp_sn:</dt>
  <dd>
    <t>designates the ESP Sequence Number (SN) field defined in <xref target="RFC4301"/>.</t>
  </dd>
  <dt>esp_sn_lsb:</dt>
  <dd>
    <t>designates the LSB to be considered for the compressed SN. It works similarly to ESP SPI LSB (see esp_spi_lsb).</t>
  </dd>
</dl>

<section anchor="sec-cda"><name>Compression/Decompression Actions in Diet-ESP</name>

<t>In addition to the Compression/Decompression Actions (CDAs) defined in <xref section="7.4" sectionFormat="comma" target="RFC8724"/>, this specification uses the CDAs presented in <xref target="tab-cda"/>. These CDAs are either a refinement of the compute- * CDA or the result of a combined CDA.</t>

<texttable title="EHCP ESP related parameter" anchor="tab-cda">
      <ttcol align='left'>Action</ttcol>
      <ttcol align='left'>Compression</ttcol>
      <ttcol align='left'>Decompression</ttcol>
      <c>lower</c>
      <c>elided</c>
      <c>Get from lower layer</c>
      <c>generated (Flow Label)</c>
      <c>elided</c>
      <c>Compute flow label</c>
      <c>checksum</c>
      <c>elided</c>
      <c>Compute checksum</c>
      <c>ESP padding</c>
      <c>elided</c>
      <c>Compute padding</c>
      <c>hop limit</c>
      <c>elided</c>
      <c>Get from lower layer</c>
      <c>SCHC padding</c>
      <c>send</c>
      <c>Compute padding</c>
</texttable>

<dl>
  <dt>lower:</dt>
  <dd>
    <t>is only used in a Tunnel Mode and indicates that the fields of the inner IP packet header are generated from the corresponding fields of the Tunnel IP header fields. This CDA can be used for the DSCP, ECN, and IPv6 Flow Label (resp. IPv4 identification) fields.</t>
  </dd>
  <dt>generated:</dt>
  <dd>
    <t>indicates that a brand new Flow Label/Identification field is generated following <xref target="RFC6437"/>, <xref target="RFC6864"/>.</t>
  </dd>
  <dt>checksum:</dt>
  <dd>
    <t>indicates that a checksum is computed accordingly. Typically, the checksum CDA has a different implementation for IPv4, UDP, TCP,...</t>
  </dd>
  <dt>ESP padding:</dt>
  <dd>
    <t>indicates that the ESP padding bytes are generated accordingly.</t>
  </dd>
  <dt>hop limit:</dt>
  <dd>
    <t>indicates that the hop limit is derived from the outer IPv6 header.</t>
  </dd>
  <dt>SCHC padding:</dt>
  <dd>
    <t>indicates that the SCHC padding bits are generated accordingly.</t>
  </dd>
</dl>

</section>
</section>
</section>
<section anchor="schc-compression-for-ipsec-in-tunnel-mode"><name>SCHC Compression for IPsec in Tunnel mode</name>

<section anchor="sec-iipc"><name>Inner IP Compression (IIPC)</name>

<t>When iipc_profile is set to "iipc_uncompress", the packet is uncompressed. 
When iipc_profile is set to "iipc_diet-esp", IIPC proceeds to the compression of the inner IP Packet composed of an IP Header and an IP Payload.
The compression of the inner IP Payload is described in <xref target="sec-payload"/>.<br />
The IP Header is compressed when ipsec_mode is set to "Tunnel" and left uncompressed otherwise. ts_ip_version determines how the IPv6 Header (resp. the IPv4 header) is compressed - see <xref target="sec-inner-ip6"/> (resp. <xref target="sec-inner-ip4"/>).</t>

<section anchor="sec-payload"><name>Inner IP Payload Compression</name>

<t>The compression only affects UDP, UDP-Lite, TCP or SCTP packets and the type of packet is determined by the IP header.</t>

<t>For UDP, UDP-Lite, TCP and SCTP packets, source ports, destination ports, and checksums are compressed. 
For source port (resp. destination port) only the least significant bits are sent. FL is set to 16 bits,  TV is set to msb( ts_port_src_start, ts_port_src_end ) ( resp. ts_port_dst_start, ts_port_dst_end ), MO is set to "MSB" and CDA to "LSB". 
The checksum is elided, FL is set to 16 bits, TV is not set, MO is set to "ignore" and CDA is set to "checksum". 
This may result in decompressing a zero-checksum UDP packet with a valid checksum, but this has no impact as a valid checksum is universally accepted.</t>

<t>For UDP or UDP-Lite the length field is elided. FL is set to 16, TV is not set, MO is set to "ignore".</t>

</section>
<section anchor="sec-inner-ip6"><name>Inner IPv6 Header Compression</name>

<t>The version field is elided, FL is set to 3, TV is set to ts_ipversion, MO is set to "equal" and CDA is set to "not-sent".</t>

<t>Traffic Class is composed of the 6 bit DSCP and 2 bit ECN.
The compression of DSCP and ECN are defined independently.</t>

<t>DSCP values are compressed according to the dscp_cda value:</t>

<t><list style="symbols">
  <t>If dscp_cda is set to "uncompress", the DSCP values are included in the inner IP header. FL is set to 6 bits, TV is not set, MO is set to "ignore", CDA is set to "sent-value".</t>
  <t>If dscp_cda is set to "lower", the DSCP field is elided and its value is copied from the Tunnel IP header. FL is set to 6 bits, TV is not set, MO is set to "ignore", CDA is set to "lower".</t>
  <t>If dscp_cda is set to "sa", DSCP is compressed according to the DSCP values of the SA. If dscp_list contains a single element, the DSCP is elided, FL is set to 6 bits, TV is set to dscp_list[0], MO is set to "equal" and CDA is set to "not-sent". If dscp_list contains more than one DSCP value, FL is set to 6 bits, TV is set to dscp_list, MO is set to "match-mapping" and the CDA is set to "mapping-sent". 
For ECN, FL is set to 2 bits, TV is not set, MO is set to ignore and CDA is set to "value-sent".</t>
</list></t>

<t>ECN values are compressed according to the ecn_cda value:</t>

<t><list style="symbols">
  <t>If ecn_cda is set to "uncompress", the ECN field is included in the inner IP header. FL is set to 2 bits, TV is not set, MO is set to "ignore", CDA is set to "sent-value".</t>
  <t>If ecn_cda is set to "lower", the ECN value is elided and the ECN value is copied in the outer IP header. FL is set to 2 bits, TV is not set, MO is set to "ignore", CDA is set to "lower".</t>
</list></t>

<t>Flow label is compressed according to the flow_label_cda value:</t>

<t><list style="symbols">
  <t>If flow_label_cda is set to "uncompress", the Flow label is included in the IPv6 Header. FL is set to 20 bits, TV is not set, MO is set to "ignore", and CDA is set to "sent-value".</t>
  <t>If flow_label_cda is set to "lower", the Flow Label is elided and read from the outer IP Header (See <xref target="sec-cda"/>). FL is set to 20 bits, TV is not set, MO is set to "ignore", and CDA is set to "lower". If the outer IP header is an IPv4 header, only the 16 LSB of the Flow Label are inserted into the IPv4 Header. At the decompression, the 4 MSB of the Flow Label are set to 0.</t>
  <t>If flow_label_cda is set to "generated", the Flow Label is elided and the Flow Label is then re-generated at the decompression (See <xref target="sec-cda"/>). The resulting Flow Label differs from the initial value. FL is set to 20, TV is not set, MO is set to "ignore" and CDA is set to "generated".</t>
  <t>If flow_label_cda is set to "zero", the Flow Label is elided and set to 0 at decompression. A 0 value indicates no flow label is present. Fl is set to 20 bits, TV is set to 0, MO is set to "equal" and CDA is set to "not-sent".</t>
</list></t>

<t>Payload Length is elided and determined from the Tunnel IP Header Payload Length as well as the decompressed Payload. FL is set to 16 bits, TV is not set, MO is set to "ignore", CDA is set to "lower".</t>

<t>Next Header is compressed according to ts_proto:</t>

<t><list style="symbols">
  <t>If ts_proto is the single value 0, Next Header is not compressed. FL is set to 8 bits, TV is not set, MO is set to "ignore", CDA is set to "sent-value".</t>
  <t>If ts_proto is a single non zero value, Next Header is compressed. FL is set to 8 bits, TV is set to ts_proto, MO is set to "equal" and CDA is set to "not-sent".</t>
</list></t>

<t>The IPv6 Hop Limit is read from the Tunnel IP Header Hop Limit. FL is set to 8 bits, TV is not set, MO is set to "ignore" and CDA is set to "lower."</t>

<t>The source and destination IPv6 addresses are compressed using MSB. 
In both cases, FL is set to 128, TV is respectively set to  msb(ts_ip_src_start, ts_ip_src_ed) or msb(ts_ip_dst_start, ts_ip_dst_end), the MO is set to "MSB," and the CDA is set to "LSB."</t>

</section>
<section anchor="sec-inner-ip4"><name>Inner IPv4 Header Compression</name>

<t>The fields Version, DSCP, ECN, Source Address and Destination Address are compressed as described for IPv6 in <xref target="sec-inner-ip6"/>.
The field Total Length (16 bits) is compressed similarly to the IPv6 field Payload Length. The field Identification (16 bits) is compressed similarly to the IPv6 field Flow Label. If the tunnel IP Header is an IPv6 Header, the Identification is placed as the LSB of the IPv6 Header and the 4 remaining MSB are set to 0.  The field Time to Live is compressed similarly to the IPv6 Hop Limit field. The Protocol field is compressed similarly to the last IPv6 Next Header field.</t>

<t>The Internet Header Length (IHL) is uncompressed, FL is set to 4 bits, TV is not set, MO is set to ignore and CDA is set to "value-sent".</t>

<t>The IPv4 Header checksum is elided.
FL is set to 16, TV is omitted, MO is set to "ignore," and CDA is set to "checksum."</t>

</section>
</section>
<section anchor="sec-byte-align"><name>ESP Payload Data Byte Alignment</name>

<t>SCHC operates on bits, and the compression performed by SCHC may result in a bit payload that is not aligned to a byte (8 bits) boundary. Protocols such as ESP expect payloads to be aligned to byte boundaries (8-bit alignment).
To ensure this, we apply a padding by appending the SCHC_padding bits and the SCHC_padding_len. SCHC_padding_len is encoded over 3 bits to encode the number of bits that will compose the SCHC_padding field. As a result SCHC_padding field has between 0 and 7 bits coded over the SCHC_padding_len. The two fields are between 3 and 10 bits, so if the complementing bits are less than or equal to 2 bits, the padding will result in adding an extra byte.</t>

<t>When the iipc_profile is set to "iipc_uncompress" there is no ESP Payload Data Byte alignment. When iipc_profile is set to "iipc_diet-esp" ESP Payload Data Byte Alignment is performed over the Compressed Inner IP packet. This ensures that in both transport and tunnel mode, the Payload Data later encrypted by ESP result in an integer number of bytes.</t>

</section>
<section anchor="sec-ctec"><name>Clear Text ESP Compression (CTEC)</name>

<t>Once the Inner IP Packet has undergone compression as outlined in <xref target="sec-iipc"/>, followed by the ESP Byte Alignment detailed in <xref target="sec-byte-align"/>, the resulting compressed inner packet comprises a specific number of bytes. To construct the Clear Text ESP Packet, it is necessary to ascertain the ESP Payload Data, the Next Header, the Pad Length, and the Padding fields.</t>

<t>In transport mode, the IP header of the inner packet remains uncompressed during the IIPC phase, and the ESP Payload Data is derived from the inner packet. Conversely, in tunnel mode, the Payload Data encompasses the entirety of the inner packet.</t>

<t>In transport mode, the Next Header field is obtained from either the inner IP Header or the Security Association, as specified in <xref target="sec-inner-ip4"/> or <xref target="sec-inner-ip6"/>. In tunnel mode, the Next Header is elided, as it is determined by ts_ip_version. FL is set to 8 bit, TV is set to IPv4 or IPv6 depending on ts_ip_version, MO is set to "equal" and CDA is set to "not-sent".</t>

<t>The ESP Pad Length and Padding fields are omitted only when ESP alignment has been selected to "8bit" and esp_encr does not necessitate a specific block size alignment, or if that block size is one byte. This is represented by setting FL to (Pad Length + 1) * 8 bits, leaving TV unset, configuring MO to "ignore," and designating CDA as padding. The ESP Padding and Pad Length may vary from their decompressed counterparts. However, since the IPsec process removes the padding, these variations do not affect packet processing. When esp_encr requires a specific block size, the ESP Pad Length and Padding fields remain uncompressed.</t>

</section>
<section anchor="sec-eec"><name>Encrypted ESP Compression (EEC)</name>

<t>SPI is compressed to its LSB.
FL is set to 32 bits, TV is not set, MO is set to "MSB( 4 - esp_spi_lsb)" and CDA is set to "LSB".</t>

<t>SN is compressed to their LSB, similarly to the SPI. 
FL is set to 32 bits, TV is not set, MO is set to "MSB( 4 - esp_sn_lsb)" and CDA is set to "LSB".</t>

</section>
</section>
<section anchor="schc-compression-for-ipsec-in-transport-mode"><name>SCHC Compression for IPsec in Transport mode</name>

<t>The transport mode mostly differs from the Tunnel mode in that the IP header of the packet is not encrypted. As a result, the IP Payload is compressed as described in <xref target="sec-payload"/>. The IP header is not compressed. The byte alignment of the Compressed Payload is performed as described in <xref target="sec-byte-align"/>. The Clear Text ESP Compression is performed as described in <xref target="sec-ctec"/> except for the Next Header Field, which is compressed as described in <xref target="sec-inner-ip6"/>.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>We request the IANA to create a new registry for the IIPC Profile</t>

<figure><artwork><![CDATA[
| IIPC Profile value | Reference |
+--------------------+-----------+
| "iipc_uncompress" | ThisRFC   |
| "iipc_diet-esp"   | ThisRFC   |
]]></artwork></figure>

<t>We request IANA to create the following registries for the "diet-esp" IIPC Profile.</t>

<figure><artwork><![CDATA[
| Flow Label CDA Value | Reference |
+----------------------+-----------+
| "uncompress"         | ThisRFC   |
| "generated"          | ThisRFC   |
| "lower"              | ThisRFC   |
| "zero"               | ThisRFC   |
]]></artwork></figure>

<figure><artwork><![CDATA[
| DSCP CDA Value       | Reference |
+----------------------+-----------+
| "uncompress"         | ThisRFC   |
| "lower"              | ThisRFC   |
| "sa"                 | ThisRFC   |
]]></artwork></figure>

<figure><artwork><![CDATA[
| ECN CDA Value       | Reference |
+----------------------+-----------+
| "uncompress"         | ThisRFC   |
| "lower"              | ThisRFC   |
]]></artwork></figure>

<figure><artwork><![CDATA[
| Alignment            | Reference |
+----------------------+-----------+
| "8 bit"              | ThisRFC   |
| "16 bit"             | ThisRFC   |
| "32 bit"             | ThisRFC   |
| "64 bit"             | ThisRFC   |
]]></artwork></figure>

<figure><artwork><![CDATA[
| IPsec mode Value     | Reference |
+----------------------+-----------+
| "Tunnel"             | ThisRFC   |
| "Transport"          | ThisRFC   |
]]></artwork></figure>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>The security considerations encompass those outlined in ESP <xref target="RFC4303"/> as well as those pertaining to SCHC <xref target="RFC8724"/>.</t>

<t>When employing ESP <xref target="RFC4303"/> in Tunnel Mode, the complete inner IP packet is safeguarded against man-in-the-middle attacks through cryptographic means, rendering it virtually impossible for an attacker to alter any fields associated with either the inner IP header or the inner IP payload. This level of protection is achieved by configuring the Flow Label CDA Value to "uncompress," the DSCP CDA Value to either "uncompress" or "sa," and the ECN CDA Value to "uncompress."</t>

<t>However, this protection is compromised if the Flow Label CAD Value, DSCP CAD Value, or ECN CDA Values are set to "lower." In such cases, the values from the inner packet for the respective fields will be derived from the outer IP header, leaving these fields unprotected. It is important to note that even the Authentication Header <xref target="RFC4302"/> does not provide protection for these fields. When associated with a CDA value of "lower," the level of protection is akin to that provided in Transport mode. This vulnerability could be exploited by an attacker within an untrusted domain, potentially disrupting load balancing strategies that rely on the Flow Label <xref target="RFC6438"/><xref target="RFC6437"/>. More broadly, when the Flow Label CAD Value is set to "lower," the relevant Flow Label Security Considerations from <xref target="RFC6437"/> apply. Additionally, an attacker may manipulate the DSCP values to diminish the priority of specific packets, resulting in packets from the same flow having varying priorities, traversing different paths, and introducing additional latency to applications, thereby facilitating DDoS attacks. Consequently, these fields remain unprotected and are susceptible to modification during transmission, which may also be regarded as an acceptable risk.</t>

<t>When the Flow Label CDA Value is designated as "generated" or "zero," an attacker is unable to exploit the Flow Label field in any manner. The inner packet received is anticipated to possess a Flow Label distinct from that of the original encapsulated packet. However, the Flow Label is assigned by the receiving gateway. When the value is set to "zero," it is known, whereas when it is designated as "generated," it must be produced in accordance with the specifications outlined in <xref target="RFC6437"/>.</t>

<t>The DSCP CDA Value is assigned as "sa" when DSCP values are linked to Security Associations (SAs), but it should not be utilized when all DSCP values are encompassed within a single SA. In such instances, "uncompress" is recommended.</t>

<t>The encryption algorithm must adhere to the guidelines provided in <xref target="RFC8221"/> to guarantee contemporary cryptographic protection.</t>

<t>The least significant bits (LSB) of the ESP Security Parameter Index (SPI) determine the number of bits allocated to the SPI. An acceptable quantity of LSB must ensure that the peer possesses a sufficient number of SPIs, which is contingent upon the implementation of the SA lookup employed. If a peer relies solely on the SPI fields for SA lookup, then the LSB must be sufficiently large to satisfy the condition MAX_SPI &lt;= 2**LSB. The SPI may assume various LSB values; however, the operator must be cognizant that if multiple LSB values are permissible for each type of SA lookup, then multiple SA lookups and signature verifications may be required. It is advisable for a peer to ascertain the LSB associated with an incoming packet in a deterministic manner.</t>

<t>The ESP SN LSB must be established in a manner that allows the receiving peer to clearly ascertain the sequence number of the IPsec packet. If this requirement is not met, it will lead to an invalid signature verification, resulting in the rejection of the packet. Furthermore, the LSB should have the capacity to accommodate the maximum number of packets that may be in transit simultaneously. This approach will guarantee that the last packet received is correctly linked to the corresponding sequence number.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

<t>We would like to thank Laurent Toutain for his guidance on SCHC. Robert Moskowitz for inspiring the name "Diet-ESP" from Diet-HIP. The authors would like to acknowledge the support from Mitacs through the Mitacs Accelerate program.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">

&RFC2119;
&RFC8174;
&RFC4303;
&RFC4301;
&RFC8724;
&RFC7296;
&I-D.ietf-ipsecme-ikev2-diet-esp-extension;
&RFC8750;
&RFC6437;
&RFC6864;
&RFC8221;


    </references>

    <references title='Informative References' anchor="sec-informative-references">

<reference anchor="OpenSCHC" target="https://github.com/openschc">
  <front>
    <title>OpenSCHC a Python open-source implementation of SCHC (Static Context Header Compression)</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
&RFC9333;
&I-D.ietf-schc-architecture;
&RFC8376;
&I-D.mglt-ipsecme-dscp-np;
&RFC4302;
&RFC6438;


    </references>


<?line 648?>

<section anchor="appendix"><name>Appendix</name>

<t>This appendix provides the details of the SCHC rules defined for Diet-ESP compression, alongside an explanation and an example outcome.</t>

<section anchor="json-representation-of-schc-rules-for-diet-esp-header-compression"><name>JSON Representation of SCHC Rules for Diet-ESP Header Compression</name>

<t>The JSON file defines a set of rules within the SCHC_Context that are used for compressing and decompressing ESP headers. Each rule has a RuleID, a Description, and a set of Fields. Each field specifies how a particular part of the packet should be handled during compression or decompression. Note that the RuleID can be set by the user in any numeric order.
The rules include all the compression_levels, including IIPC, CTEC, and EEC as defined in the Terminology section.</t>

<figure><sourcecode type="json"><![CDATA[
[
  {
    "RuleIDValue": 1,
    "RuleIDLength": 8,
    "Compression": [
      {
        "FID": "ESP.SPI",
        "TV": 5,
        "MO": "equal",
        "CDA": "not-sent"
      },
      {
        "FID": "ESP.SEQ",
        "TV": 1,
        "MO": "MSB",
        "MO.VAL": 16,
        "CDA": "LSB"
      }
    ]
  },
  {
    "RuleIDValue": 2,
    "RuleIDLength": 8,
    "Compression": [
      {
        "FID": "UDP.DEV_PORT",
        "TV": 123,
        "MO": "MSB",
        "MO.VAL": 12,
        "CDA": "LSB"
      },
      {
        "FID": "UDP.APP_PORT",
        "TV": 4567,
        "MO": "MSB",
        "MO.VAL": 12,
        "CDA": "LSB"
      },
      {
        "FID": "UDP.LEN",
        "TV": 0,
        "MO": "ignore",
        "CDA": "compute-length"
      },
      {
        "FID": "UDP.CKSUM",
        "TV": 0,
        "MO": "ignore",
        "CDA": "compute-checksum"
      }
    ]
  },
  {
    "RuleIDValue": 0,
    "RuleIDLength": 0,
    "schc_header": [
      {
        "FID": "SCHC.NXT",
        "TV": [17, 50, 41],
        "MO": "equal",
        "CDA": "not-sent"
      }
    ]
  },
  {
    "RuleIDValue": 4,
    "RuleIDLength": 8,
    "Compression": [
      {
        "FID": "IPV6.DEV_PREFIX",
        "TV": "ff02::5678",
        "MO": "equal",
        "CDA": "value-sent"
      },
      {
        "FID": "IPV6.APP_PREFIX",
        "TV": "2001:db8::1000",
        "MO": "equal",
        "CDA": "value-sent"
      }
    ]
  },
  {
    "RuleIDValue": 5,
    "RuleIDLength": 8,
    "Compression": [
      {
        "FID": "ESP.NXT",
        "TV": 41,
        "MO": "equal",
        "CDA": "not-sent"
      }
    ]
  }
]

]]></sourcecode></figure>

</section>
<section anchor="example-outcome"><name>Example Outcome</name>

<section anchor="input-packet"><name>Input Packet</name>

<t>The following packet undergoes processing based on the SCHC Diet-ESP profile:</t>

<t><list style="symbols">
  <t><strong>IPv6 Header</strong>:
  <list style="symbols">
      <t><spanx style="verb">Source Address</spanx>: <spanx style="verb">2001:db8::1000</spanx></t>
      <t><spanx style="verb">Destination Address</spanx>: <spanx style="verb">ff02::5678</spanx></t>
      <t>Other attributes include <spanx style="verb">Payload Length: 18</spanx>, <spanx style="verb">Next Header: UDP</spanx>, and <spanx style="verb">Hop Limit: 64</spanx>.</t>
    </list></t>
  <t><strong>UDP Header</strong>:
  <list style="symbols">
      <t><spanx style="verb">Source Port</spanx>: <spanx style="verb">123</spanx></t>
      <t><spanx style="verb">Destination Port</spanx>: <spanx style="verb">4567</spanx></t>
      <t><spanx style="verb">Length</spanx>: <spanx style="verb">18</spanx></t>
      <t><spanx style="verb">Checksum</spanx>: <spanx style="verb">0x6bc9</spanx></t>
    </list></t>
  <t><strong>Payload</strong>:
  <list style="symbols">
      <t>10 bytes sample Data: <spanx style="verb">b'U\xe2(\x88\xbf\xf9\xd91\x08\xc5'</spanx></t>
    </list></t>
</list></t>

</section>
<section anchor="compression-process"><name>Compression Process</name>

<t><list style="numbers">
  <t><strong>UDP Header Compression</strong>:
  <list style="symbols">
      <t>Initial size: <spanx style="verb">8 bytes</spanx>.</t>
      <t>Compressed using the UDP-specific rules from the Diet-ESP profile.</t>
      <t>Ports are encoded as LSB fields, reducing the size to <spanx style="verb">2 bytes</spanx>.</t>
    </list></t>
  <t><strong>IPv6 Header Compression</strong>:
  <list style="symbols">
      <t>Initial size: <spanx style="verb">40 bytes</spanx>.</t>
      <t>Source and destination addresses are compressed using value-sent rules based on matching prefixes.</t>
      <t>Final compressed size: <spanx style="verb">17 bytes</spanx>.</t>
    </list></t>
  <t><strong>ESP Header Compression</strong>:
  <list style="symbols">
      <t>Initial size: <spanx style="verb">12 bytes</spanx>.</t>
      <t>SPI is not transmitted (<spanx style="verb">not-sent</spanx> CDA), and SEQ is compressed using the LSB technique.</t>
      <t>Final compressed size: <spanx style="verb">2 bytes</spanx>.</t>
    </list></t>
  <t><strong>ESP Clear Text Compression</strong>:  <list style="symbols">
      <t>The ESP.NXT field (Next Header) is compressed using the match-mapping CDA:
Rule: The ESP.NXT value is matched to a single value (41 for the IPv6 Next Header).
CDA: mapping-sent is used to send only the mapped index.</t>
    </list></t>
  <t><strong>Payload Handling</strong>:
  <list style="symbols">
      <t>The payload is not compressed. Further compression may be possible with additional SCHC rules.</t>
    </list></t>
</list></t>

</section>
<section anchor="decompression-process"><name>Decompression Process</name>

<t>The decompression reverses the steps:</t>

<t><list style="numbers">
  <t><strong>ESP Header Reconstruction</strong>:
  <list style="symbols">
      <t>SPI is restored using the fixed value from the rule (TV=5).</t>
      <t>SEQ is reconstructed from the LSB field.</t>
    </list></t>
  <t><strong>ESP Clear Text Reconstruction</strong>:  <list style="symbols">
      <t>The ESP.NXT field is restored using the mapping-sent rule, where the value 41 (Next Header for IPv6) is retrieved from the mapping.</t>
    </list></t>
  <t><strong>UDP Header Reconstruction</strong>:
  <list style="symbols">
      <t>Ports are restored using the compressed LSB values.</t>
      <t>Length and checksum fields are calculated using compute-length and compute-checksum CDA.</t>
    </list></t>
  <t><strong>IPv6 Header Reconstruction</strong>:
  <list style="symbols">
      <t>Prefixes are restored using the value-sent fields in the rule.</t>
    </list></t>
  <t><strong>Payload Restoration</strong>:
  <list style="symbols">
      <t>The payload is directly restored, as it was not compressed.</t>
    </list></t>
</list></t>

</section>
<section anchor="final-output-packet"><name>Final Output Packet</name>

<t>After reconstruction, the packet is identical to the original input:</t>

<t><list style="symbols">
  <t><strong>IPv6 Header</strong>:
  <list style="symbols">
      <t><spanx style="verb">Source Address</spanx>: <spanx style="verb">2001:db8::1000</spanx></t>
      <t><spanx style="verb">Destination Address</spanx>: <spanx style="verb">ff02::5678</spanx></t>
      <t><spanx style="verb">Payload Length</spanx>: <spanx style="verb">18</spanx></t>
      <t><spanx style="verb">Next Header</spanx>: <spanx style="verb">UDP</spanx></t>
      <t><spanx style="verb">Hop Limit</spanx>: <spanx style="verb">64</spanx>.</t>
    </list></t>
  <t><strong>UDP Header</strong>:
  <list style="symbols">
      <t><spanx style="verb">Source Port</spanx>: <spanx style="verb">123</spanx></t>
      <t><spanx style="verb">Destination Port</spanx>: <spanx style="verb">4567</spanx></t>
      <t><spanx style="verb">Length</spanx>: <spanx style="verb">18</spanx></t>
      <t><spanx style="verb">Checksum</spanx>: <spanx style="verb">0x6bc9</spanx>.</t>
    </list></t>
  <t><strong>Payload</strong>:
  <list style="symbols">
      <t>Data: <spanx style="verb">b'U\xe2(\x88\xbf\xf9\xd91\x08\xc5'</spanx>.</t>
    </list></t>
</list></t>

<t>This example demonstrates the efficiency and accuracy of the Diet-ESP profile when applied to compress and decompress network packets.</t>

<t><list style="symbols">
  <t><strong>Efficiency</strong>: The SCHC rules reduce packet overhead:
  <list style="symbols">
      <t>The UDP header is compressed from <spanx style="verb">8 bytes</spanx> to <spanx style="verb">2 bytes</spanx>.</t>
      <t>The IPv6 header is reduced from <spanx style="verb">40 bytes</spanx> to <spanx style="verb">17 bytes</spanx>.</t>
      <t>The ESP header size is decreased from <spanx style="verb">12 bytes</spanx> to <spanx style="verb">2 bytes</spanx>.</t>
      <t>The ESP.NXT field is eliminated from transmission (<spanx style="verb">1 byte</spanx> reduction).</t>
    </list>
These reductions are particularly beneficial in constrained environments such as Low-Power Wide-Area Networks (LPWANs).</t>
  <t><strong>Accuracy</strong>: The decompression process fully reconstructs the original packet, ensuring no loss of information.</t>
  <t><strong>Applicability</strong>: By leveraging these rules, the Diet-ESP profile addresses the challenges of transmitting data efficiently in constrained networks, optimizing bandwidth utilization while retaining compatibility with standard protocols.</t>
</list></t>

</section>
<section anchor="github-repository-diet-esp-schc-implementation"><name>GitHub Repository: Diet-ESP SCHC Implementation</name>

<t>The source code for the implementation of the Diet-ESP profile, including the compression and decompression logic using the SCHC rules, is available on GitHub. Access the code at the following link:</t>

<t>GitHub Repository: <eref target="https://github.com/mglt/pyesp/tree/master/examples/draft-diet-esp.py">Diet-ESP SCHC Implementation</eref></t>

<t>This repository contains the rule definitions, examples, and source code for implementing and testing the Diet-ESP profile. Refer to the README file for setup instructions and usage guidelines.</t>

</section>
</section>
</section>


  </back>

<!-- ##markdown-source:
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
CEAJFmuv59MXcRyThehDBSpenHeuGEyjjzRMEGsT1iFmAGvuo5kz4ojoQ1z8
0BdFaaM41MmaTTOMUoirJZWgcFzPSucHLLSCKUxmCrU/iKKv0aNsnjpTax10
4TBumS3vHNEnv4fvT9kbvRDNiOI+Db0xWA6xTmAxwAYUYK5sNjEHSTnPvEzH
QKx9yDkwdCvAr2P4iOD2D66VATFOtLLuloy3TmEDiaFNWZx00LNsa/jTlIem
6z9u/+mz9kc3eBQsA2JgQaZbO7NPAimEh+7l68+4VuyGOVID2OS92b/I2Ug3
8UbeXWPNecm75k9zkRFAWLfxRvftU5345W1T/XDVLsUxDN1/2hZdZ6qfsEU7
oHV3qEFGsEFb72STyhSC0KaHnILeodFTa/O4ZysGaXXeagXvVi2aP2C4as7x
F053+5Pm20Gg7WVbDra7eo7a7i/fkkA0LaoHAXNbDz4hWUScSQe5UEJI4aoJ
PSungvyGFlNhqc4M+bSr06oxRT20rqGXZajzPsKrUtS+OlvaqQC9DdznHty7
OZkr8d9+2aA+VqV9R5vuALZraUZerIjTK5sparvOkrqso3ODNf18idhO+34U
UUTwPdjRCEcUBHdMDuGp8BxjnwAh+dLbmmJ2hhnmy6lWD/KZYmSk1Uzx9/gz
cLTADrFFtlnQg3PbkL/uVLiKrQNfoMosY6QwF/fG91Ws1MQ18SKbRFcdHsIi
DC8P4DXoNoyV9aby5GFPNRc0I1sVpZTRFNll6bRXwmY1Eakn8unkE2nTDJ4Y
5Vydakudz5ZbBGPafgHylnLjwYbUvOlM2+oOzg0CUYCFAjmdSOoUJhXUofK9
+0SDWTlRq/o12Q/aRWRs3OZkC1Va28q3Gtgwwi3mMC2zQW+pnAlnCmIgUGj3
71do90WhFdP7a62cOmZ0CQ3TkYNU9sxBrXkeSJuuge9Se9ntNUHWOjawAKhR
2QCHF5ayKRwitLLVYYU36po78LmSLoCFbwID/ed0blm+OfubkMrN4f/Y1Gqn
XvzRkc3ncWIDbRyhwLVE6OXed64Uw6PeP9idWY6yGV0ydIqR4OvMzO5g6oAx
ZuI5jZS/qp8cTW/UmcuTuLuIyQtL71dFal7qFT55droVmrWDTbf/cMqRYVxm
Y7TtbYNoiTWp5HtRuxlTb6WtTbZmO2Tje7wMdmhigXhr2srNH8WvISXy0Dkn
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
N20WcwouqMx2L1BGiKdueMAg+t8uxqYsgdgAAA==

-->

</rfc>

