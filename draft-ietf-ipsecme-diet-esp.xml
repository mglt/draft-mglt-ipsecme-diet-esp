<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.22 (Ruby 3.0.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC2119 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC8174 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC4303 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4303.xml">
<!ENTITY RFC4301 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4301.xml">
<!ENTITY RFC8724 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8724.xml">
<!ENTITY RFC7296 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7296.xml">
<!ENTITY I-D.ietf-ipsecme-ikev2-diet-esp-extension SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-ipsecme-ikev2-diet-esp-extension.xml">
<!ENTITY I-D.mglt-ipsecme-dscp-np SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.mglt-ipsecme-dscp-np.xml">
<!ENTITY RFC8750 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8750.xml">
<!ENTITY RFC6437 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6437.xml">
<!ENTITY RFC6864 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6864.xml">
<!ENTITY RFC8221 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8221.xml">
<!ENTITY RFC9333 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9333.xml">
<!ENTITY I-D.ietf-schc-architecture SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-schc-architecture.xml">
<!ENTITY RFC8376 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8376.xml">
<!ENTITY RFC4302 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4302.xml">
<!ENTITY RFC6438 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6438.xml">
]>


<rfc ipr="trust200902" docName="draft-ietf-ipsecme-diet-esp-06" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="EHCP">ESP Header Compression Profile</title>

    <author initials="D." surname="Migault" fullname="Daniel Migault">
      <organization>Ericsson</organization>
      <address>
        <email>daniel.migault@ericsson.com</email>
      </address>
    </author>
    <author initials="M." surname="Hatami" fullname="Maryam Hatami">
      <organization>Concordia University</organization>
      <address>
        <email>maryam.hatami@mail.concordia.ca</email>
      </address>
    </author>
    <author initials="S." surname="Céspedes" fullname="Sandra Céspedes">
      <organization>Concordia University</organization>
      <address>
        <email>sandra.cespedes@concordia.ca</email>
      </address>
    </author>
    <author initials="W." surname="Atwood" fullname="J. William Atwood">
      <organization>Concordia University</organization>
      <address>
        <email>william.atwood@concordia.ca</email>
      </address>
    </author>
    <author initials="D." surname="Liu" fullname="Daiying Liu">
      <organization>Ericsson</organization>
      <address>
        <email>harold.liu@ericsson.com</email>
      </address>
    </author>
    <author initials="T." surname="Guggemos" fullname="Tobias Guggemos">
      <organization>LMU</organization>
      <address>
        <email>guggemos@nm.ifi.lmu.de</email>
      </address>
    </author>
    <author initials="C." surname="Bormann" fullname="Carsten Bormann">
      <organization>Universitaet Bremen TZI</organization>
      <address>
        <email>cabo@tzi.org</email>
      </address>
    </author>
    <author initials="D." surname="Schinazi" fullname="David Schinazi">
      <organization>Google LLC</organization>
      <address>
        <email>dschinazi.ietf@gmail.com</email>
      </address>
    </author>

    <date year="2025" month="February" day="24"/>

    <area>Security</area>
    <workgroup>IPsecme</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 66?>

<t>This document specifies Diet-ESP, a compression mechanisms for control information in IPsec/ESP communications. The compression is expressed through the Static Context Header Compression architecture.</t>



    </abstract>



  </front>

  <middle>


<?line 74?>

<section anchor="requirements-notation"><name>Requirements notation</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.
<?line -6?></t>

</section>
<section anchor="introduction"><name>Introduction</name>

<t>The Encapsulating Security Payload (ESP) <xref target="RFC4303"/> protocol is part of the IPsec <xref target="RFC4301"/> suite of protocols and can provide confidentiality, data origin authentication, integrity, anti-replay, and traffic flow confidentiality. The set of services ESP provides depends on the Security Association (SA) parameters negotiated between devices.</t>

<t>An ESP packet is composed of the ESP Header, the ESP Payload Data, the ESP Trailer, and the Integrity Check Value (ICV). ESP has two modes of operation: Transport and Tunnel. In Transport mode, the ESP Payload Data consists of the payload of the original IP packet; the ESP Header is inserted after the original IP packet header. In Tunnel mode, commonly used for VPNs, the ESP Header is placed after an outer IP header and before the inner IP packet headers of the original datagram. This ensures both the original IP headers and payload are protected. Consequently, the ESP Payload Data field contains either the payload from the original IP packet or the fully-encapsulated IP packet, in transport mode or tunnel mode, respectively.</t>

<t>The ESP Trailer, placed at the end of the ESP Payload Data, includes fields such as Padding and Pad Length to ensure proper alignment, and Next Header to indicate the protocol following the ESP header. The ICV, calculated over the ESP Header, ESP Payload Data, and ESP Trailer, is appended after the ESP Trailer to ensure packet integrity. For a simplified overview of ESP, readers are referred to Minimal ESP <xref target="RFC9333"/>.</t>

<t>While ESP is effective in securing traffic, compression can reduce packet sizes, enhancing performance in networks with limited bandwidth. In such environments, reducing the size of transmitted packets is essential to improve efficiency. This document defines Diet-ESP, a protocol that includes different compression/decompression (C/D) of various structures processed by ESP. These C/D are expressed through the Static Context Header Compression and Fragmentation (SCHC) framework <xref target="RFC8724"/>. The structure of the ESP packet to be compressed is shown in Figure <xref target="fig-esp"/>.</t>

<figure title="Top-Level Format of an ESP Packet" anchor="fig-esp"><artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ----
|               Security Parameters Index (SPI)                 | ^Auth.
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |Cove-
|                      Sequence Number                          | |rage
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | ----
|                    Data Payload* (variable)                   | |   ^
~  Higher Layer Message (transport) or IP datagram (tunnel)     ~ |   |
|                                                               | |Encr.
+               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |Cove
|               |     Padding (0-255 bytes)                     | |rage*
+-+-+-+-+-+-+-+-+               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |   |
|                               |  Pad Length   | Next Header   | v   v
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ------
|         Integrity Check Value-ICV   (variable)                |
~                                                               ~
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<section anchor="sec-3c"><name>The Three compressors described in this specification</name>

<t>The document outlines the three compressors utilized in Diet-ESP, which are detailed as follows:</t>

<t><list style="numbers" type="1">
  <t>Inner IP Compression (IIPC): This process pertains to the compression and decompression of the IP packet protected by ESP. For outbound packets, the Clear Text ESP packet incorporates the compressed Inner IP (IIP) into the ESP Data Payload (refer to <xref target="fig-esp"/>). In the case of inbound packets, decompression occurs after the compressed IIP is retrieved from the Payload Data within the Clear Text ESP packet (CTE).</t>
  <t>Clear Text ESP Compression (CTEC): This process pertains to the compression and decompression of the segment of the ESP packet that is destined for encryption. This encompasses the Data Payload and the ESP Trailer, which includes the Padding, Pad Length, and Next Header fields, as illustrated in <xref target="fig-esp"/>. At this stage, only the latter fields are eligible for compression. For outbound packets, the ESP subsequently encrypts the compressed CTE. For inbound packets, decompression takes place following the decryption process of the ESP.</t>
  <t>Encrypted ESP Compression (EEC): This process pertains to the compression and decompression of the Encrypted ESP packet (EE), which consists of the ESP Header, the encrypted payload, and the Integrity Check Value (ICV). Since neither the encrypted payload nor the ICV can be compressed, only the ESP Header, specifically the SPI and SN fields, are subject to compression.</t>
</list></t>

</section>
<section anchor="the-scope-of-schc-in-this-specification"><name>The scope of SCHC in this specification</name>

<t>SCHC <xref target="RFC8724"/> offers a mechanism for headers compression as well as an optional fragmentation feature. This document utilizes SCHC as a practical means to illustrate the capability to compress and decompress a structured payload. It is important to note that any elements of SCHC that pertain to aspects other than compression or decompression, such as fragmentation, fall outside the purview of this document. The reference to SCHC herein is solely for descriptive purposes related to compression and decompression, and it is not anticipated that the general SCHC framework will be integrated into the ESP implementation. The structured payloads addressed in this specification pertain to internal structures managed by ESP for the processing of an IP packet. Consequently, the compression and decompression processes outlined in this document represent supplementary steps for the ESP stack in handling the ESP packet.</t>

</section>
<section anchor="schc-rules-and-schc-static-context-in-this-specification"><name>SCHC Rules and SCHC static context in this specification</name>

<t>SCHC facilitates the compression and decompression of headers by utilizing a common context that may encompass multiple Rules. Each Rule is designed to correspond with specific values or ranges of values within the header fields. When a Rule is successfully matched, the corresponding header fields are substituted with the Rule ID and the Compression Residue, which contains the remaining bits after compression.</t>

<t>In the context of IPsec, the process of encryption or decryption between IPsec peers necessitates a common context known as a Security Association (SA). More broadly, the SA encompasses all essential parameters required by the Encapsulating Security Payload (ESP) to handle both inbound and outbound packets. SAs are unidirectional. Furthermore, IPsec can link both outbound and inbound IP packets to the SA through Traffic Selectors (TS) or Security Parameters Index (SPI). This capability allows IPsec to uniquely associate outbound and inbound packets with a specific context (SA), which contains all pertinent information for IPsec processing.</t>

<t>This document adopts a comparable methodology for compression and decompression, ensuring that the SA includes all necessary parameters to create the unique Rule applicable for compressing or decompressing each structured payload. This guarantees that each SA is linked to a single Rule, thereby allowing the Rule ID to be omitted. The Rule associated with each structured payload is generated based on specific parameters referred to in this document as Attributes for Rule Generation (AfRG) (see <xref target="sec-afrg"/> for a more detailed description). These AfRGs are negotiated through IKEv2 <xref target="RFC7296"/>, and in such cases, they are likely already included in the SA. Any additional missing AfRGs are negotiated via <xref target="I-D.ietf-ipsecme-ikev2-diet-esp-extension"/>.</t>

</section>
</section>
<section anchor="terminology"><name>Terminology</name>

<dl>
  <dt>ESP Header Compression:</dt>
  <dd>
    <t>A method to reduce the size of ESP headers and trailer using predefined compression rules and contexts to improve efficiency.</t>
  </dd>
  <dt>ESP Trailer:</dt>
  <dd>
    <t>A set of fields added at the end of the ESP payload, including Padding, Pad Length, and Next Header, used to ensure alignment and indicate the next protocol.</t>
  </dd>
  <dt>Inner IP C/D (IIPC):</dt>
  <dd>
    <t>Expressed via the SCHC framework, IIPC compresses/decompresses the inner IP packet headers.</t>
  </dd>
  <dt>Clear Text ESP C/D (CTEC):</dt>
  <dd>
    <t>Expressed via the SCHC framework, CTEC compresses/decompresses all fields that will later be encrypted by ESP, which include the ESP Data and ESP Trailer.</t>
  </dd>
  <dt>Encrypted ESP C/D (EEC):</dt>
  <dd>
    <t>Expressed via the SCHC framework, EEC compresses/decompresses ESP fields that will not be encrypted by ESP.</t>
  </dd>
  <dt>Security Parameters Index (SPI):</dt>
  <dd>
    <t>As defined in <xref section="4.1" sectionFormat="comma" target="RFC4301"/>.</t>
  </dd>
  <dt>Sequence Number (SN):</dt>
  <dd>
    <t>As defined in <xref section="2.2" sectionFormat="comma" target="RFC4303"/>.</t>
  </dd>
  <dt>Static Context Header Compression (SCHC):</dt>
  <dd>
    <t>A framework for header compression designed for LPWANs, as defined in <xref target="RFC8724"/>.</t>
  </dd>
  <dt>Static Context Header Compression Rules (SCHC Rules):</dt>
  <dd>
    <t>As defined in  <xref target="I-D.ietf-schc-architecture"/></t>
  </dd>
  <dt>RuleID:</dt>
  <dd>
    <t>A unique identifier for each Rule part of the Set of Rules.</t>
  </dd>
  <dt>SCHC Parameters:</dt>
  <dd>
    <t>A set of predefined values used for SCHC compression and decompression, ensuring byte alignment and proper packet formatting based on the SCHC profile.</t>
  </dd>
  <dt>SCHC MAX_PACKET_SIZE:</dt>
  <dd>
    <t>The maximum size of a SCHC-compressed packet that can be transmitted without fragmentation.</t>
  </dd>
  <dt>Traffic Selector (TS):</dt>
  <dd>
    <t>A set of parameters (e.g., IP address range, port range, and protocol) used to define which traffic should be protected by a specific Security Association (SA).</t>
  </dd>
</dl>

<t>It is assumed that the reader is familiar with other SCHC terminology defined in <xref target="RFC8376"/>, <xref target="RFC8724"/>, and eventually <xref target="I-D.ietf-schc-architecture"/>.</t>

</section>
<section anchor="sec-schc-ipsec-integration"><name>Diet-ESP Integration into the IPsec Stack</name>

<t><xref target="fig-arch"/> depicts the incorporation of Diet-ESP within the IPsec framework.</t>

<t>IPsec necessitates that both endpoints agree on a shared context known as the Security Association (SA). This SA is established via IKEv2 and encompasses all Attributes for Rules Generation (AfRG) (refer to <xref target="sec-afrg"/>) essential for formulating the Rules for each compressor defined in <xref target="sec-3c"/>, specifically the Inner IP packet Compressor (IIPC), the Clear Text ESP Compressor (CTEC), and the Encrypted ESP Compressor (EEC).</t>

<t>When an Inner IP packet (IIP) is received, IPsec identifies the SA linked to that packet. The ESP then determines the IIPC Rule from the AfRG contained within the SA and compresses the IIP packet (IIPC: C {IIP}). Subsequently, ESP constructs the Clear Text ESP payload (CTE). The CTEC Rule is derived from the AfRG of the SA, allowing for the compression of the CTE (CTEC: C {C {IIP}, ET}, where ET represents the ESP Trailer). Then, ESP encrypts the payload, computes the Integrity Check Value (ICV), and forms the Encrypted ESP packet (EE). The EE Rule is derived from the AfRG of the SA, and then utilized to compress the EE (C {EH, C {C {IIP}, ET}},ICV}, where EH represents the ESP Header). The resulting compressed ESP extension is integrated into an IP packet and transmitted as outbound traffic.</t>

<t>For inbound traffic, the endpoint extracts the Security Parameter Index (SPI) from the compressed EE, along with any other selectors from the packet, to conduct a lookup for the SA. As outlined in <xref target="sec-sec"/>, since the SPI is derived from a potentially compressed ESP Header, there may be instances where the endpoint must explore multiple options, potentially leading to several lookups or, in the worst-case scenario, multiple signature verifications (see <xref target="sec-sec"/> for a more detailed discussion).
Once the SA is retrieved, the ESP accesses the AfRG to ascertain the EEC Rule and proceeds to decompress the EE. The ESP verifies the signature prior to decryption. Following this, the CTEC Rule is derived from the AfRG of the SA, allowing for the subsequent decompression. Finally, ESP extracts the Data Payload from the CTE packet, retrieves the IIPC Rule from the AfRG of the SA, and decompresses the IIP.</t>

<t>Note that implementations MAY differ from the architectural description but it is assumed that the outputs will be the same.</t>

<figure title="SCHC Integration into the IPsec Stack. Packets are described for IPsec in tunnel mode. C designates the Compressed header for the fields inside. IIP refers to the Inner IP packet, EH refers to the ESP Header, and ET refers to the ESP Trailer. IIPC, CTEC and EEC respectively designate the Inner IP Compress, the Clear Text ESP Compressor and the Encrypted ESP Compressor." anchor="fig-arch"><artwork align="center"><![CDATA[
Endpoint                                 Endpoint
+------------------------+               +------------------------+
| Inner IP packet        |               | Inner IP packet        | 
+------------------------+               +------------------------+
========|=================================================^========
IPsec   |                                                 |
+------------------------+                                |
| SA lookup              |                                |
+------------------------+                                |
========|=================================================|========
ESP     |                                                 |
        |       +-------------------------------------+   |
        |       | Security Association                |   |                           
        |       |   - Attributes for Rule Generations |   |
        |       +-------------------------------------+   | 
        |       |  Generation of the IIPC Rule,       |   |
        |       |   CTEC Rule and EEC Rule            |   |
        |       +-------------------------------------+   | 
        |                                                 |
        v                                                 |            
+------------------------+               +------------------------+
| IIPC: C{IIP}           |               | IIPC: D{IIP}           |
+------------------------+               +------------------------+ 
| Formation of           |               | Extraction of          |
| Clear Text ESP         |               | Data Payload           |
+------------------------+               +------------------------+
| CTEC:                  |               | CTEC:                  |
| C{C{IIP},ET}           |               | D{C{IIP},ET}           |     
+------------------------+               +------------------------+
| Encryption             |               | Decryption             |
+------------------------+               +------------------------+
| Formation of           |               | Parsing                |
| Encrypted ESP          |               | Encrypted ESP          |
+------------------------+               +------------------------+
| EEC:                   |               | EEC:                   |  
| C{EH,C{C{IIP},ET},ICV} |               | D{EH,C{C{IIP},ET},ICV} |
+------------------------+               +------------------------+
        |                                | SA lookup              |
        |                                +------------------------+
========|=================================================^========
        |                                                 |
        v                                                 | 
Outbound Traffic                                  Inbound Traffic 
]]></artwork></figure>

<section anchor="schc-parameters-for-diet-esp"><name>SCHC Parameters for Diet-ESP</name>

<t>The SCHC Payload <xref target="RFC8724"/> is always in the form:</t>

<figure title="SCHC Packet" anchor="tab-diet-esp-compressed-header-format"><artwork align="center"><![CDATA[
0 1 2 3 4 5 6 7
+-+-+-+-+-+-+-+---------...----------+~~~~~~~~~+---------------+
|   RuleID    | Compression Residue  | Payload | SCHC padding  | 
+-+-+-+-+-+-+-+---------...----------+~~~~~~~~~+---------------+
|-------- Compressed Header ---------|         |-- as needed --|
]]></artwork></figure>

<t>The RuleID is a unique identifier for each SCHC rule. It is included in packets to ensure the receiver applies the correct decompression rule, maintaining consistency in packet processing. Note that the Rule ID does not need to be explicitly agreed upon and can be defined independently by each party. The RuleID in Diet-ESP is expressed as 1 byte and is always elided as Rules are uniquely determined for compressors.</t>

<t>SCHC padding in SCHC serves the purpose of aligning data to a designated boundary, which is typically byte-aligned or aligned to 8 bits. This document presumes that this field is not utilized in IIPC, CET, and EEC. In the absence of SCHC padding, this document outlines the Byte Alignment Padding (BA Padding) as detailed in section <xref target="sec-byte-align"/> to guarantee the byte alignment of the CTE Payload Data. Such alignment is essential to ensure that encryption is applied to data that is byte-aligned. The rationale for employing a padding method other than SCHC Padding is to accommodate the length of the compressed ESP Payload Data</t>

<t>Other variables required for the C/D in Diet-ESP are the following:</t>

<dl>
  <dt>Maximum Packet Size:</dt>
  <dd>
    <t>MAX_PACKET_SIZE is determined by the specific IPsec ESP configuration and the underlying transport, but it is typically aligned with the network’s MTU. The size constraints are optimized based on the available link capacity and negotiated parameters between endpoints.</t>
  </dd>
  <dt>SCHC Padding:</dt>
  <dd>
    <t>Padding in SCHC is used to align data to a specific boundary (typically byte-aligned or 8-bit aligned)  to meet the requirements for encryption which only considers octets instead of bits. The SCHC Padding is only used over the CTE as described in <xref target="sec-byte-align"/>.</t>
  </dd>
</dl>

<t>SCHC padding is used solely to ensure byte alignment for the Compressed Inner IP Packet (IIPC) before the ESP padding is applied. This distinction is necessary because ESP Padding may be compressed or omitted depending on the negotiated alignment.  In this document, we refer to this specific use of SCHC padding as Byte Alignment.</t>

</section>
<section anchor="sec-afrg"><name>Attributes for Rules Generation</name>

<t>The list of attributes for the Rules Generation (AfRG) is shown in <xref target="tab-ehc-ctx-esp"/>. These attributes are used to express the various compressions that operate at the IIPC, CTEC, and EEC.</t>

<t>As outlined in <xref target="sec-schc-ipsec-integration"/>, this specification does not detail the process by which the AfRG are established between peers. Instead, such negotiations are addressed in <xref target="I-D.ietf-ipsecme-ikev2-diet-esp-extension"/>. However, the AfRG can be classified into two distinct categories. The first category encompasses AfRG that are negotiated through a specific IKEv2 extension tailored for the negotiation of AfRG linked to a particular profile, the Diet-ESP profile in this context. The AfRG referenced in <xref target="tab-ehc-ctx-esp"/> in this category are: the DSCP Compression/Decompression Action (CDA) dscp_cda, the ECN CDA ecn_cda, the Flow Label CDA flow_label_cda, the ESP alignment alignment, the ESP SPI Least Significant Bits (LSB) esp_spi_lsb, and the ESP Sequence Number LSB esp_sn_lsb.</t>

<t>The second category pertains to AfRG that are negotiated through IKEv2 exchanges or extensions that are not specifically designed for compression purposes. This category includes AfRG associated with TS, as identified in <xref target="tab-ehc-ctx-esp"/>, which are the TS IP Version ts_ip_version, the TS IP Source Start ts_ip_src_start, the TS IP Source End ts_ip_src_end, the TS IP Destination Start ts_ip_dst_start, the TS IP Destination End ts_ip_dst_end, the TS Protocol ts_proto, the TS Port Source Start ts_port_src_start, the TS Port Source End ts_port_src_end, the TS Port Destination Start ts_port_dst_start, and the  TS Port Destination End ts_port_dst_end. These AfRG are derived from the Traffic Selectors established through TSi/TSr payloads during the IKEv2 CREATE_CHILD_SA exchange, as described in <xref section="3.13" sectionFormat="comma" target="RFC7296"/>. The AfRG IPsec Mode designated as ipsec_mode in <xref target="tab-ehc-ctx-esp"/> is determined by the presence or absence of the USE_TRANSPORT_MODE Notify Payload during the CREATE_CHILD_SA exchange, as detailed in <xref section="1.3.1" sectionFormat="comma" target="RFC7296"/>. The AfRG Tunnel IP designated as tunnel_ip in <xref target="tab-ehc-ctx-esp"/> is obtained from the IP address of the IKE messages exchanged during the CREATE_CHILD_SA process, as noted in <xref section="1.1.3" sectionFormat="comma" target="RFC7296"/>. The AfRGs designated as ESP Encryption Algorithm esp_encr and ESP Security Parameter Index (SPI) esp_spi in <xref target="tab-ehc-ctx-esp"/> are established through the SAi2/SAr2 payloads during the CREATE_CHILD_SA exchange, while the AfRG designated as ESP Sequence Number esp_sn in <xref target="tab-ehc-ctx-esp"/> is initialized upon the creation of the Child SA and incremented for each subsequent ESP message. The DSCP values identified as dscp_list in <xref target="tab-ehc-ctx-esp"/> are established through the DSCP Notify Payload <xref target="I-D.mglt-ipsecme-dscp-np"/>.</t>

<t>The ability to derive the IPPC Rules for the IIPC from the agreed Traffic Selectors is indicated by the variable iipc_profile.</t>

<texttable title="Attributes for Rule Generation (AfRG) to generate IIPC, CTEC and EEC Rules in Diet-ESP" anchor="tab-ehc-ctx-esp">
      <ttcol align='left'>Variable</ttcol>
      <ttcol align='left'>Possible Values</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <ttcol align='left'>Compressor</ttcol>
      <c>iipc_profile</c>
      <c>"iipc_diet-esp", "iipc_uncompress"</c>
      <c>ThisRFC</c>
      <c>N/A</c>
      <c>dscp_cda</c>
      <c>"uncompress", "lower", "sa"</c>
      <c>ThisRFC</c>
      <c>IIPC</c>
      <c>ecn_cda</c>
      <c>"uncompress", "lower"</c>
      <c>ThisRFC</c>
      <c>IIPC</c>
      <c>flow_label_cda</c>
      <c>"uncompress", "lower", "generated", "zero"</c>
      <c>ThisRFC</c>
      <c>IIPC</c>
      <c>ts_ip_version</c>
      <c>"IPv4-only", "IPv6-only"</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_ip_src_start</c>
      <c>IPv4 or IPv6 address</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_ip_src_end</c>
      <c>IPv4 or IPv6 address</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_ip_dst_start</c>
      <c>IPv4 or IPv6 address</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_ip_dst_end</c>
      <c>IPv4 or IPv6 address</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_proto</c>
      <c>TCP, UDP, UDP-Lite, SCTP, ANY, ...</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_port_src_start</c>
      <c>Port number</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_port_src_end</c>
      <c>Port number</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_port_dst_start</c>
      <c>Port number</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_port_dst_end</c>
      <c>Port number</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>dscp_list</c>
      <c>list of DSCP numbers</c>
      <c>RFCYYYY</c>
      <c>IIPC</c>
      <c>alignment</c>
      <c>"8 bit", "16 bit", "32 bit", "64 bit"</c>
      <c>ThisRFC</c>
      <c>CTEC</c>
      <c>ipsec_mode</c>
      <c>"Tunnel", "Transport"</c>
      <c>RFC4301</c>
      <c>CTEC</c>
      <c>tunnel_ip</c>
      <c>IPv4 or IPv6 address</c>
      <c>RFC4301</c>
      <c>CTEC</c>
      <c>esp_encr</c>
      <c>ESP Encryption Algorithm</c>
      <c>RFC4301</c>
      <c>CTEC</c>
      <c>esp_spi</c>
      <c>ESP SPI</c>
      <c>RFC4301</c>
      <c>EEC</c>
      <c>esp_spi_lsb</c>
      <c>0-32</c>
      <c>ThisRFC</c>
      <c>EEC</c>
      <c>esp_sn</c>
      <c>ESP Sequence Number</c>
      <c>RFC4301</c>
      <c>EEC</c>
      <c>esp_sn_lsb</c>
      <c>0-32</c>
      <c>ThisRFC</c>
      <c>EEC</c>
</texttable>

<t>Any variable starting with "ts_" is associated with the Traffic Selectors (TSi/TSr) of the SA. 
The notation is introduced by this specification but the definitions of the variables are in <xref target="RFC4301"/> and <xref target="RFC7296"/>.</t>

<t>The Traffic Selectors may result in a quite complex expression, and this specification restricts that complexity. 
This specification restricts the resulting TSi/TSr to a single type of IP address (IPv4 or IPv6), a single protocol (e.g., UDP, TCP, or ANY), a single port range for source and destination. This specification presumes that the Traffic Selectors can be articulated as a result of CREATE_CHILD_SA with only one Traffic Selector <xref section="3.13.1" sectionFormat="comma" target="RFC7296"/> in both TSi and TSr payloads (as described in <xref section="3.13" sectionFormat="comma" target="RFC7296"/>). The TS Type MUST be either TS_IPV4_ADDR_RANGE or TS_IPV6_ADDR_RANGE.</t>

<t>Let the resulting Traffic Selectors TSi/TSr be expressed via the Traffic Selector structure defined in <xref section="3.13.1" sectionFormat="comma" target="RFC7296"/>. We designate the local TS the TS - either TSi or TSr - sent by the local peer. Conversely we designate as remote TS the TS - either TSi or TSr - sent by the remote peer.</t>

<t>The details of each parameter are the following:</t>

<dl>
  <dt>iipc_profile:</dt>
  <dd>
    <t>designates the behavior of the IIPC layer. When set to "iipc_uncompress" IIPC is not performed. This specification describes IIPC that corresponds to the "iipc_diet-esp" profile.</t>
  </dd>
  <dt>flow_label_cda:</dt>
  <dd>
    <t>indicates the Flow Label CDA, that is how the Flow Label field of the inner IPv6 packet or the Identification field of the inner IPv4 packet is compressed / decompressed - See <xref target="sec-cda"/> for more information. In a nutshell, "uncompress" indicates that Flow Label (resp. Identification) are not compressed. "lower" indicates the value is read from the outer IP header - eventually with some adaptations when inner IP packet and outer IP packets have different versions. "generated" indicates that the field is generated by the receiving party. In that case, the decompressed value may take a different value compared to its original value. "zero" indicates the field is set to zero.</t>
  </dd>
  <dt>dscp_cda:</dt>
  <dd>
    <t>indicates the DSCP CDA, that is how the DSCP values of the inner IP packet are compressed / decompressed - See <xref target="sec-cda"/> for more information. In a nutshell, "uncompress" indicates that DSCP are not compressed. "lower" indicates the value is read from the outer IP header - eventually with some adaptations when inner IP packet and outer IP packets have different versions.  "sa" indicates, compression is performed according to the DSCP values agreed by the SA (dscp_list).</t>
  </dd>
  <dt>ecn_cda:</dt>
  <dd>
    <t>indicates ECN CDA, that is how the ECN values of the inner IP packet are compressed / decompressed - See <xref target="sec-cda"/> for more information. In a nutshell, "uncompress" indicates that DSCP are not compressed. "lower" indicates the value is read from the outer IP header - eventually with some adaptations when inner IP packet and outer IP packets have different versions.</t>
  </dd>
  <dt>ts_ip_version:</dt>
  <dd>
    <t>designates the TS IP version. Its value is set  to "IPv4-only" when only IPv4 IP addresses are considered and to "IPv6-only" when only IPv6 addresses are considered.
Practically, when IKEv2 is used, it means that the agreed TSi or TSr results only in a mutually exclusive combination of TS_IPV4_ADDR_RANGE or TS_IPV6_ADDR_RANGE payloads. If TS Type of the resulting TSi/TSr is set to TS_IPV4_ADDR_RANGE, ts_ip_version takes the value "IPv4-only". Respectively, if TS Type is set to TS_IPV6_ADDR_RANGE, ts_ip_version is set to "IPv6-only".</t>
  </dd>
  <dt>ts_ip_src_start:</dt>
  <dd>
    <t>designates the TS IP Source Start, that is the starting value range of source IP addresses of the inner packet and has the same meaning as the Starting Address field of the local TS.</t>
  </dd>
  <dt>ts_ip_src_end:</dt>
  <dd>
    <t>designates TS IP Source End that is the high end value range of source IP addresses of the inner packet and has the same meaning as the Ending Address field of the local TS.</t>
  </dd>
  <dt>ts_ip_dst_start:</dt>
  <dd>
    <t>designates the TS IP Destination Start, that is the starting value range of destination IP addresses of the inner packet and has the same meaning as the Starting Address field of the remote TS.</t>
  </dd>
  <dt>ts_ip_dst_end:</dt>
  <dd>
    <t>designates the TS IP Destination End, that is the high end value range of destination IP addresses of the inner packet and has the same meaning as the Ending Address field of the remote TS.</t>
  </dd>
  <dt>ts_proto:</dt>
  <dd>
    <t>designates the TS Protocol, that is the Protocol ID of the resulting TSi/TSr. This profile considers the specific protocol values "TCP", "UDP", "UDP-Lite", "SCTP" and "ANY". The representation of "ANY" is given in <xref section="4.4.4.2" sectionFormat="comma" target="RFC4301"/>.</t>
  </dd>
  <dt>ts_port_src_start:</dt>
  <dd>
    <t>designates the TS Port Source Start, that is the the starting value of the source port range of the inner packet and has the same meaning as the Start Port field of the local TS.</t>
  </dd>
  <dt>ts_port_src_end:</dt>
  <dd>
    <t>designates the TS Port Source End, that is the high end value range of the source port range of the inner packet and has the same meaning as the End Port field of the local TS.</t>
  </dd>
  <dt>ts_port_dst_start:</dt>
  <dd>
    <t>designates TS Port Destination Start, that is the starting value of the destination port range of the inner packet and has the same meaning as the Start Port field of the remote TS.</t>
  </dd>
  <dt>ts_port_dst_end:</dt>
  <dd>
    <t>designates TS Port Destination End, that is the high end value range of the destination port range of the inner packet and has the same meaning as the End Port field of the remote TS.</t>
  </dd>
</dl>

<t>IP addresses and ports are defined as a range and compressed using the Least Significant Bits (LSB).
For a range defined by start and end values, msb( start, end ) is defined as the function that returns the Most Significant Bits (MSB) that remains unchanged while the value evolves between start and end.
Similarly, lsb( start, end ) is defined as the function that returns the LSB that changes while the value evolves between start and end. 
Finally, len( x ) is defined as the function that returns the number of bits of the bit array x.</t>

<dl>
  <dt>dscp_list:</dt>
  <dd>
    <t>designates the list of DSCP values associated to the inner traffic - see for example <xref target="I-D.mglt-ipsecme-dscp-np"/>. These are not Traffic Selectors, but the compression mandates that the packets take one of these listed DSCP values.</t>
  </dd>
  <dt>alignment:</dt>
  <dd>
    <t>designates the ESP alignment as defined by <xref target="RFC4303"/>.</t>
  </dd>
  <dt>ipsec_mode:</dt>
  <dd>
    <t>designates the IPsec Mode defined in <xref target="RFC4301"/>. In this document, the possible values are "tunnel" for the Tunnel mode and "transport" for the Transport mode.</t>
  </dd>
  <dt>tunnel_ip:</dt>
  <dd>
    <t>designates the Tunnel IP address of the tunnel defined in <xref target="RFC4301"/>.
This field is only applicable when the Tunnel mode is used.
That IP address can be an IPv4 or IPv6 address.</t>
  </dd>
  <dt>esp_encr:</dt>
  <dd>
    <t>designates the ESP Encryption Algorithm - also designated as Transform 1 in <xref section="3.3.2" sectionFormat="comma" target="RFC7296"/>. The algorithm is needed to determine whether the ESP Payload Data needs to be aligned to some predefined block size and if the ESP Pad Length and Padding fields can be compressed.  For the purpose of compression it is RECOMMENDED to use algorithms that already compressed their IV <xref target="RFC8750"/>.</t>
  </dd>
  <dt>esp_spi:</dt>
  <dd>
    <t>designates the Security Parameter Index defined in <xref target="RFC4301"/>.</t>
  </dd>
  <dt>esp_spi_lsb:</dt>
  <dd>
    <t>designates the LSB to be considered for the compressed SPI. A value of 32 for esp_spi_lsb will leave the SPI unchanged.</t>
  </dd>
  <dt>esp_sn:</dt>
  <dd>
    <t>designates the ESP Sequence Number (SN) field defined in <xref target="RFC4301"/>.</t>
  </dd>
  <dt>esp_sn_lsb:</dt>
  <dd>
    <t>designates the LSB to be considered for the compressed SN. It works similarly to ESP SPI LSB (see esp_spi_lsb).</t>
  </dd>
</dl>

<section anchor="sec-cda"><name>Compression/Decompression Actions in Diet-ESP</name>

<t>In addition to the Compression/Decompression Actions (CDAs) defined in <xref section="7.4" sectionFormat="comma" target="RFC8724"/>, this specification uses the CDAs presented in <xref target="tab-cda"/>. These CDAs are either a refinement of the compute- * CDA or the result of a combined CDA.</t>

<texttable title="Specific compute-* CDAs used in Diet-ESP" anchor="tab-cda">
      <ttcol align='left'>Action</ttcol>
      <ttcol align='left'>Compression</ttcol>
      <ttcol align='left'>Decompression</ttcol>
      <c>lower</c>
      <c>elided</c>
      <c>Get from lower layer</c>
      <c>generated (Flow Label)</c>
      <c>elided</c>
      <c>Compute flow label</c>
      <c>checksum</c>
      <c>elided</c>
      <c>Compute checksum</c>
      <c>ESP padding</c>
      <c>elided</c>
      <c>Compute padding</c>
      <c>hop limit</c>
      <c>elided</c>
      <c>Get from lower layer</c>
      <c>Byte Alignment</c>
      <c>send</c>
      <c>Compute padding</c>
</texttable>

<dl>
  <dt>lower:</dt>
  <dd>
    <t>is only used in a Tunnel Mode and indicates that the fields of the inner IP packet header are generated from the corresponding fields of the Tunnel IP header fields. This CDA can be used for the DSCP, ECN, and IPv6 Flow Label (resp. IPv4 identification) fields.</t>
  </dd>
  <dt>generated:</dt>
  <dd>
    <t>indicates that a brand new Flow Label/Identification field is generated following <xref target="RFC6437"/>, <xref target="RFC6864"/>.</t>
  </dd>
  <dt>checksum:</dt>
  <dd>
    <t>indicates that a checksum is computed accordingly. Typically, the checksum CDA has a different implementation for IPv4, UDP, TCP,...</t>
  </dd>
  <dt>ESP padding:</dt>
  <dd>
    <t>indicates that the ESP padding bytes are generated accordingly.</t>
  </dd>
  <dt>hop limit:</dt>
  <dd>
    <t>indicates that the hop limit is derived from the outer IPv6 header.</t>
  </dd>
  <dt>Byte Alignment:</dt>
  <dd>
    <t>indicates that the the SCHC Byte Alignment bits are generated accordingly.</t>
  </dd>
</dl>

</section>
</section>
</section>
<section anchor="schc-compression-for-ipsec-in-tunnel-mode"><name>SCHC Compression for IPsec in Tunnel mode</name>

<section anchor="sec-iipc"><name>Inner IP Compression (IIPC)</name>

<t>When iipc_profile is set to "iipc_uncompress", the packet is uncompressed. 
When iipc_profile is set to "iipc_diet-esp", IIPC proceeds to the compression of the inner IP Packet composed of an IP Header and an IP Payload.
The compression of the inner IP Payload is described in <xref target="sec-payload"/>.<br />
The IP Header is compressed when ipsec_mode is set to "Tunnel" and left uncompressed otherwise. ts_ip_version determines how the IPv6 Header (resp. the IPv4 header) is compressed - see <xref target="sec-inner-ip6"/> (resp. <xref target="sec-inner-ip4"/>).</t>

<section anchor="sec-payload"><name>Inner IP Payload Compression</name>

<t>The compression only affects UDP, UDP-Lite, TCP or SCTP packets and the type of packet is determined by the IP header.</t>

<t>For UDP, UDP-Lite, TCP and SCTP packets, source ports, destination ports, and checksums are compressed. 
For source port (resp. destination port) only the least significant bits are sent. FL is set to 16 bits,  TV is set to msb( ts_port_src_start, ts_port_src_end ) ( resp. ts_port_dst_start, ts_port_dst_end ), MO is set to "MSB" and CDA to "LSB". 
The checksum is elided, FL is set to 16 bits, TV is not set, MO is set to "ignore" and CDA is set to "checksum". 
This may result in decompressing a zero-checksum UDP packet with a valid checksum, but this has no impact as a valid checksum is universally accepted.</t>

<t>For UDP or UDP-Lite the length field is elided. FL is set to 16, TV is not set, MO is set to "ignore".</t>

</section>
<section anchor="sec-inner-ip6"><name>Inner IPv6 Header Compression</name>

<t>The version field is elided, FL is set to 3, TV is set to ts_ipversion, MO is set to "equal" and CDA is set to "not-sent".</t>

<t>Traffic Class is composed of the 6 bit DSCP and 2 bit ECN.
The compression of DSCP and ECN are defined independently.</t>

<t>DSCP values are compressed according to the dscp_cda value:</t>

<t><list style="symbols">
  <t>If dscp_cda is set to "uncompress", the DSCP values are included in the inner IP header. FL is set to 6 bits, TV is not set, MO is set to "ignore", CDA is set to "sent-value".</t>
  <t>If dscp_cda is set to "lower", the DSCP field is elided and its value is copied from the Tunnel IP header. FL is set to 6 bits, TV is not set, MO is set to "ignore", CDA is set to "lower".</t>
  <t>If dscp_cda is set to "sa", DSCP is compressed according to the DSCP values of the SA. If dscp_list contains a single element, the DSCP is elided, FL is set to 6 bits, TV is set to dscp_list[0], MO is set to "equal" and CDA is set to "not-sent". If dscp_list contains more than one DSCP value, FL is set to 6 bits, TV is set to dscp_list, MO is set to "match-mapping" and the CDA is set to "mapping-sent". 
For ECN, FL is set to 2 bits, TV is not set, MO is set to ignore and CDA is set to "value-sent".</t>
</list></t>

<t>ECN values are compressed according to the ecn_cda value:</t>

<t><list style="symbols">
  <t>If ecn_cda is set to "uncompress", the ECN field is included in the inner IP header. FL is set to 2 bits, TV is not set, MO is set to "ignore", CDA is set to "sent-value".</t>
  <t>If ecn_cda is set to "lower", the ECN value is elided and the ECN value is copied in the outer IP header. FL is set to 2 bits, TV is not set, MO is set to "ignore", CDA is set to "lower".</t>
</list></t>

<t>Flow label is compressed according to the flow_label_cda value:</t>

<t><list style="symbols">
  <t>If flow_label_cda is set to "uncompress", the Flow label is included in the IPv6 Header. FL is set to 20 bits, TV is not set, MO is set to "ignore", and CDA is set to "sent-value".</t>
  <t>If flow_label_cda is set to "lower", the Flow Label is elided and read from the outer IP Header (See <xref target="sec-cda"/>). FL is set to 20 bits, TV is not set, MO is set to "ignore", and CDA is set to "lower". If the outer IP header is an IPv4 header, only the 16 LSB of the Flow Label are inserted into the IPv4 Header. At the decompression, the 4 MSB of the Flow Label are set to 0.</t>
  <t>If flow_label_cda is set to "generated", the Flow Label is elided and the Flow Label is then re-generated at the decompression (See <xref target="sec-cda"/>). The resulting Flow Label differs from the initial value. FL is set to 20, TV is not set, MO is set to "ignore" and CDA is set to "generated".</t>
  <t>If flow_label_cda is set to "zero", the Flow Label is elided and set to 0 at decompression. A 0 value indicates no flow label is present. Fl is set to 20 bits, TV is set to 0, MO is set to "equal" and CDA is set to "not-sent".</t>
</list></t>

<t>Payload Length is elided and determined from the Tunnel IP Header Payload Length as well as the decompressed Payload. FL is set to 16 bits, TV is not set, MO is set to "ignore", CDA is set to "lower".</t>

<t>Next Header is compressed according to ts_proto:</t>

<t><list style="symbols">
  <t>If ts_proto is the single value 0, Next Header is not compressed. FL is set to 8 bits, TV is not set, MO is set to "ignore", CDA is set to "sent-value".</t>
  <t>If ts_proto is a single non zero value, Next Header is compressed. FL is set to 8 bits, TV is set to ts_proto, MO is set to "equal" and CDA is set to "not-sent".</t>
</list></t>

<t>The IPv6 Hop Limit is read from the Tunnel IP Header Hop Limit. FL is set to 8 bits, TV is not set, MO is set to "ignore" and CDA is set to "lower."</t>

<t>The source and destination IPv6 addresses are compressed using MSB. 
In both cases, FL is set to 128, TV is respectively set to  msb(ts_ip_src_start, ts_ip_src_ed) or msb(ts_ip_dst_start, ts_ip_dst_end), the MO is set to "MSB," and the CDA is set to "LSB."</t>

</section>
<section anchor="sec-inner-ip4"><name>Inner IPv4 Header Compression</name>

<t>The fields Version, DSCP, ECN, Source Address and Destination Address are compressed as described for IPv6 in <xref target="sec-inner-ip6"/>.
The field Total Length (16 bits) is compressed similarly to the IPv6 field Payload Length. The field Identification (16 bits) is compressed similarly to the IPv6 field Flow Label. If the tunnel IP Header is an IPv6 Header, the Identification is placed as the LSB of the IPv6 Header and the 4 remaining MSB are set to 0.  The field Time to Live is compressed similarly to the IPv6 Hop Limit field. The Protocol field is compressed similarly to the last IPv6 Next Header field.</t>

<t>The Internet Header Length (IHL) is uncompressed, FL is set to 4 bits, TV is not set, MO is set to ignore and CDA is set to "value-sent".</t>

<t>The IPv4 Header checksum is elided.
FL is set to 16, TV is omitted, MO is set to "ignore," and CDA is set to "checksum."</t>

</section>
</section>
<section anchor="sec-byte-align"><name>ESP Payload Data Byte Alignment</name>

<t>SCHC operates on bits, and the compression performed by SCHC may result in a bit payload that is not aligned to a byte boundary. Protocols such as ESP expect payloads to be aligned to byte boundaries (8-bit alignment). To ensure this, we apply a padding by appending the Byte Alignment bits and the Byte Alignment Length field. The Byte Alignment Length is encoded over 3 bits to indicate the number of bits that will compose the Byte Alignment field. As a result, the Byte Alignment field has between 0 and 7 bits, depending on the required alignment. The total additional overhead can be up to 10 bits (3-bit length field + 0-7 bits padding). If the complementing bits are less than or equal to 2 bits, the padding will result in adding an extra byte.</t>

<t>This Byte Alignment field is distinct from ESP Padding and is required to ensure proper decryption without requiring additional shifting operations in hardware. If the expected length of the compressed residue is statically determinable based on the SA, the padding length can be inferred, and the field may be omitted. Otherwise, when the residue length depends on dynamic fields, the length must be explicitly provided.</t>

<t>When the Byte Alignment is applied, it is performed only after the IIPC stage and before the ESP Padding is added. The ESP Padding is only compressed when alignment is explicitly set to 8 bits.</t>

<t>This ensures that in both transport and tunnel mode, the Payload Data later encrypted by ESP results in an integer number of bytes.</t>

</section>
<section anchor="sec-ctec"><name>Clear Text ESP Compression (CTEC)</name>

<t>Once the Inner IP Packet has undergone compression as outlined in <xref target="sec-iipc"/>, followed by the ESP Byte Alignment detailed in <xref target="sec-byte-align"/>, the resulting compressed inner packet comprises a specific number of bytes. To construct the Clear Text ESP Packet, it is necessary to ascertain the ESP Payload Data, the Next Header, the Pad Length, and the Padding fields.</t>

<t>In transport mode, the IP header of the inner packet remains uncompressed during the IIPC phase, and the ESP Payload Data is derived from the inner packet. Conversely, in tunnel mode, the Payload Data encompasses the entirety of the inner packet.</t>

<t>In transport mode, the Next Header field is obtained from either the inner IP Header or the Security Association, as specified in <xref target="sec-inner-ip4"/> or <xref target="sec-inner-ip6"/>. In tunnel mode, the Next Header is elided, as it is determined by ts_ip_version. FL is set to 8 bit, TV is set to IPv4 or IPv6 depending on ts_ip_version, MO is set to "equal" and CDA is set to "not-sent".</t>

<t>The ESP Pad Length and Padding fields are omitted only when ESP alignment has been selected to "8bit" and esp_encr does not necessitate a specific block size alignment, or if that block size is one byte. This is represented by setting FL to (Pad Length + 1) * 8 bits, leaving TV unset, configuring MO to "ignore," and designating CDA as padding. The ESP Padding and Pad Length may vary from their decompressed counterparts. However, since the IPsec process removes the padding, these variations do not affect packet processing. When esp_encr requires a specific block size, the ESP Pad Length and Padding fields remain uncompressed.</t>

</section>
<section anchor="sec-eec"><name>Encrypted ESP Compression (EEC)</name>

<t>SPI is compressed to its LSB.
FL is set to 32 bits, TV is not set, MO is set to "MSB( 4 - esp_spi_lsb)" and CDA is set to "LSB".</t>

<t>SN is compressed to their LSB, similarly to the SPI. 
FL is set to 32 bits, TV is not set, MO is set to "MSB( 4 - esp_sn_lsb)" and CDA is set to "LSB".</t>

</section>
</section>
<section anchor="schc-compression-for-ipsec-in-transport-mode"><name>SCHC Compression for IPsec in Transport mode</name>

<t>The transport mode mostly differs from the Tunnel mode in that the IP header of the packet is not encrypted. As a result, the IP Payload is compressed as described in <xref target="sec-payload"/>. The IP header is not compressed. The byte alignment of the Compressed Payload is performed as described in <xref target="sec-byte-align"/>. The Clear Text ESP Compression is performed as described in <xref target="sec-ctec"/> except for the Next Header Field, which is compressed as described in <xref target="sec-inner-ip6"/>.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>We request the IANA to create a new registry for the IIPC Profile</t>

<figure><artwork><![CDATA[
| IIPC Profile value | Reference |
+--------------------+-----------+
| "iipc_uncompress" | ThisRFC   |
| "iipc_diet-esp"   | ThisRFC   |
]]></artwork></figure>

<t>We request IANA to create the following registries for the "diet-esp" IIPC Profile.</t>

<figure><artwork><![CDATA[
| Flow Label CDA Value | Reference |
+----------------------+-----------+
| "uncompress"         | ThisRFC   |
| "generated"          | ThisRFC   |
| "lower"              | ThisRFC   |
| "zero"               | ThisRFC   |
]]></artwork></figure>

<figure><artwork><![CDATA[
| DSCP CDA Value       | Reference |
+----------------------+-----------+
| "uncompress"         | ThisRFC   |
| "lower"              | ThisRFC   |
| "sa"                 | ThisRFC   |
]]></artwork></figure>

<figure><artwork><![CDATA[
| ECN CDA Value       | Reference |
+----------------------+-----------+
| "uncompress"         | ThisRFC   |
| "lower"              | ThisRFC   |
]]></artwork></figure>

<figure><artwork><![CDATA[
| Alignment            | Reference |
+----------------------+-----------+
| "8 bit"              | ThisRFC   |
| "16 bit"             | ThisRFC   |
| "32 bit"             | ThisRFC   |
| "64 bit"             | ThisRFC   |
]]></artwork></figure>

<figure><artwork><![CDATA[
| IPsec mode Value     | Reference |
+----------------------+-----------+
| "Tunnel"             | ThisRFC   |
| "Transport"          | ThisRFC   |
]]></artwork></figure>

</section>
<section anchor="sec-sec"><name>Security Considerations</name>

<t>The security considerations encompass those outlined in ESP <xref target="RFC4303"/> as well as those pertaining to SCHC <xref target="RFC8724"/>.</t>

<t>When employing ESP <xref target="RFC4303"/> in Tunnel Mode, the complete inner IP packet is safeguarded against man-in-the-middle attacks through cryptographic means, rendering it virtually impossible for an attacker to alter any fields associated with either the inner IP header or the inner IP payload. This level of protection is achieved by configuring the Flow Label CDA Value to "uncompress," the DSCP CDA Value to either "uncompress" or "sa," and the ECN CDA Value to "uncompress."</t>

<t>However, this protection is compromised if the Flow Label CDA Value, DSCP CDA Value, or ECN CDA Values are set to "lower." In such cases, the values from the inner packet for the respective fields will be derived from the outer IP header, leaving these fields unprotected. It is important to note that even the Authentication Header <xref target="RFC4302"/> does not provide protection for these fields. When associated with a CDA value of "lower," the level of protection is akin to that provided in Transport mode. This vulnerability could be exploited by an attacker within an untrusted domain, potentially disrupting load balancing strategies that rely on the Flow Label <xref target="RFC6438"/><xref target="RFC6437"/>. More broadly, when the Flow Label CDA Value is set to "lower," the relevant Flow Label Security Considerations from <xref target="RFC6437"/> apply. Additionally, an attacker may manipulate the DSCP values to diminish the priority of specific packets, resulting in packets from the same flow having varying priorities, traversing different paths, and introducing additional latency to applications, thereby facilitating DDoS attacks. Consequently, these fields remain unprotected and are susceptible to modification during transmission, which may also be regarded as an acceptable risk.</t>

<t>When the Flow Label CDA Value is designated as "generated" or "zero," an attacker is unable to exploit the Flow Label field in any manner. The inner packet received is anticipated to possess a Flow Label distinct from that of the original encapsulated packet. However, the Flow Label is assigned by the receiving gateway. When the value is set to "zero," it is known, whereas when it is designated as "generated," it must be produced in accordance with the specifications outlined in <xref target="RFC6437"/>.</t>

<t>The DSCP CDA Value is assigned as "sa" when DSCP values are linked to Security Associations (SAs), but it should not be utilized when all DSCP values are encompassed within a single SA. In such instances, "uncompress" is recommended.</t>

<t>The encryption algorithm must adhere to the guidelines provided in <xref target="RFC8221"/> to guarantee contemporary cryptographic protection.</t>

<t>The least significant bits (LSB) of the ESP Security Parameter Index (SPI) determine the number of bits allocated to the SPI. An acceptable quantity of LSB must ensure that the peer possesses a sufficient number of SPIs, which is contingent upon the implementation of the SA lookup employed. If a peer relies solely on the SPI fields for SA lookup, then the number of LSB to consider must be sufficiently large to include the number of SPIs. 
A peer may compress its SPIs differently, in which case a incoming packet may have its SPI compressed to X bits while another packet may have its SPI compressed to Y bits. The operator must be cognizant that if multiple LSB values are permissible for each type of SA lookup, then multiple SA lookups and signature verifications may be required. It is advisable for a peer to ascertain the LSB associated with an incoming packet in a deterministic manner.</t>

<t>The ESP SN LSB must be established in a manner that allows the receiving peer to clearly ascertain the sequence number of the IPsec packet. If this requirement is not met, it will lead to an invalid signature verification, resulting in the rejection of the packet. Furthermore, the LSB should have the capacity to accommodate the maximum number of packets that may be in transit simultaneously. This approach will guarantee that the last packet received is correctly linked to the corresponding sequence number.</t>

<t>The ESP extension for IPv6 (and similarly for IPv4) requires a 64-bit (or 32-bit) alignment. Choosing alternative alignment values may result in a packet that fails to comply with this alignment requirement, potentially leading to rejection. The necessity for such alignment in IPv6 extensions arises from the fact that the length field in an IPv6 header extension is defined in terms of 64-bit words, making proper alignment essential for accurate packet parsing. Parsing of ESP does not present complications, as it is compatible with IPv6; the ESP extension is processed exclusively by the terminal IPsec peers and not by intermediary nodes. Furthermore, the ESP extension lacks a dedicated length field. Instead, its length is determined by the IPv6 Header Length field, which is measured in bytes, along with the starting position of the ESP header extension. Consequently, it remains entirely feasible to parse an ESP extension that is not aligned to 64 bits. The same principle is applicable to IPv4.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

<t>We would like to thank Laurent Toutain, Ana Caroline Minaburo and Pascla Thubert for his guidance on SCHC. Robert Moskowitz for inspiring the name "Diet-ESP" from Diet-HIP, Samita Chakrabart, Tero Kivinen, Michael Richarson and Valery Smyslov for their long time support. The authors would like to acknowledge the support from Mitacs through the Mitacs Accelerate program.</t>

</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">

&RFC2119;
&RFC8174;
&RFC4303;
&RFC4301;
&RFC8724;
&RFC7296;
&I-D.ietf-ipsecme-ikev2-diet-esp-extension;
&I-D.mglt-ipsecme-dscp-np;
&RFC8750;
&RFC6437;
&RFC6864;
&RFC8221;


    </references>

    <references title='Informative References' anchor="sec-informative-references">

<reference anchor="OpenSCHC" target="https://github.com/openschc">
  <front>
    <title>OpenSCHC a Python open-source implementation of SCHC (Static Context Header Compression)</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
&RFC9333;
&I-D.ietf-schc-architecture;
&RFC8376;
&RFC4302;
&RFC6438;


    </references>

</references>


<?line 633?>

<section anchor="appendix"><name>Appendix</name>

<t>This appendix provides the details of the SCHC rules defined for Diet-ESP compression, alongside an explanation and illustrative examples for both Tunnel and Transport modes.</t>

<section anchor="illustrative-examples-of-diet-esp-in-tunnel-mode"><name>Illustrative Examples of Diet-ESP in Tunnel Mode</name>

<t>This section provides a structured example of how Diet-ESP operates in Tunnel Mode. The example includes Attributes for Rule Generation (AfRG), SCHC rules, the Inner IP packet (IIP), the compression process, and the decompression process.</t>

<section anchor="json-representation-in-tunnel-mode"><name>Json representation in Tunnel mode</name>

<t>In Tunnel Mode, the full inner IP packet is compressed before encryption, making it more efficient for VPN scenarios. The "iipc_diet-esp" profile is used to indicate compression of the inner packet. The IPv6 Source and Destination Addresses are compressed using "MSB", sending only the variable parts while keeping the most significant bits. UDP Source and Destination Ports are compressed with "LSB", reducing their size. "compute-length" removes the UDP Length field, and "checksum" omits the UDP checksum, which is recalculated at decompression. ESP SPI and Sequence Number are compressed using "LSB" with an MSB mask. The "not-sent" CDA is used for Next Header fields in both IPv6 and ESP, as their values are predictable.</t>

<figure><sourcecode type="json"><![CDATA[
{
  "compressed": [
    {
      "FID": "IPv6.SourceAddress",
      "FL": 128,
      "TV": "2001:db8::1234",
      "MO": "MSB",
      "CDA": "LSB"
    },
    {
      "FID": "IPv6.DestinationAddress",
      "FL": 128,
      "TV": "2001:db8::5678",
      "MO": "MSB",
      "CDA": "LSB"
    },
    {
      "FID": "IPv6.NextHeader",
      "FL": 8,
      "TV": 17,
      "MO": "equal",
      "CDA": "not-sent"
    },
    {
      "FID": "UDP.SourcePort",
      "FL": 16,
      "TV": 5001,
      "MO": "MSB",
      "CDA": "LSB"
    },
    {
      "FID": "UDP.DestinationPort",
      "FL": 16,
      "TV": 4500,
      "MO": "MSB",
      "CDA": "LSB"
    },
    {
      "FID": "UDP.Length",
      "FL": 16,
      "TV": null,
      "MO": "ignore",
      "CDA": "compute-length"
    },
    {
      "FID": "UDP.Checksum",
      "FL": 16,
      "TV": null,
      "MO": "ignore",
      "CDA": "compute-checksum"
    },
    {
      "FID": "ESP.SPI",
      "FL": 32,
      "TV": null,
      "MO": "MSB(4 - esp_spi_lsb)",
      "CDA": "LSB"
    },
    {
      "FID": "ESP.SequenceNumber",
      "FL": 32,
      "TV": null,
      "MO": "MSB(4 - esp_sn_lsb)",
      "CDA": "LSB"
    },
    {
      "FID": "ESP.Padding",
      "FL": 8,
      "TV": null,
      "MO": "ignore",
      "CDA": "padding"
    }
  ]
}
]]></sourcecode></figure>

</section>
<section anchor="attributes-for-rule-generation-afrg"><name>Attributes for Rule Generation (AfRG)</name>

<t>The SCHC rules for Tunnel Mode are derived from the following AfRG:</t>

<t><list style="symbols">
  <t>IPsec Mode: Tunnel</t>
  <t>Traffic Selector IP Version: IPv6-only</t>
  <t>Traffic Selector Source Address: 2001:db8::1234</t>
  <t>Traffic Selector Destination Address: 2001:db8::5678</t>
  <t>DSCP CDA: Lower</t>
  <t>ECN CDA: Lower</t>
  <t>ESP SPI Compression: LSB</t>
  <t>ESP SN Compression: LSB</t>
</list></t>

</section>
<section anchor="diet-esp-compression"><name>Diet-ESP Compression</name>

<t>The SCHC rules for the IIPC, CTEC, and EEC layers are defined as IIPC to compresses IPv6 headers and UDP headers, CTEC to compresses ESP Trailer fields and EEC to compresses ESP SPI and Sequence Number.</t>

<t>The IIPC original packet before compression consists of:</t>

<t><list style="symbols">
  <t>IPv6 Source Address: 2001:db8::1234</t>
  <t>IPv6 Destination Address: 2001:db8::5678</t>
  <t>UDP Source Port: 5001</t>
  <t>UDP Destination Port: 4500</t>
  <t>UDP Length: 16 bytes</t>
  <t>ESP Payload Data</t>
</list></t>

<t>The compression process applies SCHC rules as follows:</t>

<t><list style="numbers" type="1">
  <t>IIPC: UDP Header Compression
  <list style="symbols">
      <t>UDP ports are compressed using the LSB technique.</t>
      <t>UDP Length is removed (computed at decompression).</t>
      <t>UDP Checksum is omitted.</t>
    </list></t>
  <t>IIPC: IPv6 Header Compression
  <list style="symbols">
      <t>Source and Destination Addresses are compressed using MSB.</t>
      <t>Next Header field is omitted.</t>
    </list></t>
  <t>CTEC: ESP Trailer Compression
  <list style="symbols">
      <t>Pad Length and Padding are omitted.</t>
      <t>Next Header is omitted.</t>
    </list></t>
  <t>EEC: ESP Header Compression
  <list style="symbols">
      <t>SPI and SN are compressed using LSB.</t>
      <t>Compressed Packet Output</t>
    </list></t>
</list></t>

<t>The final compressed packet consists of the compressed ESP header, IIPC compressed data, and payload.</t>

</section>
<section anchor="diet-esp-decompression"><name>Diet-ESP Decompression</name>

<t>The decompression process reverses these steps:</t>

<t><list style="numbers" type="1">
  <t>EEC: ESP Header Decompression
  <list style="symbols">
      <t>SPI and SN are reconstructed using the LSB values.</t>
    </list></t>
  <t>CTEC: ESP Trailer Decompression (Optional)</t>
  <t>IIPC: IPv6 Header Decompression
  <list style="symbols">
      <t>ESP Next Header and Padding fields are restored.</t>
      <t>IPv6 Source and Destination Addresses are restored.</t>
    </list></t>
  <t>IIPC: UDP Header Decompression
  <list style="symbols">
      <t>UDP ports are restored using the decompressed LSB values.</t>
      <t>UDP Length and Checksum are recalculated.</t>
    </list></t>
</list></t>

</section>
</section>
<section anchor="illustrative-examples-of-diet-esp-in-transport-mode"><name>Illustrative Examples of Diet-ESP in Transport Mode</name>

<t>This section follows the same structure as Tunnel Mode but applies to Transport Mode, where the IP header remains uncompressed.</t>

<section anchor="json-representation-in-transport-mode"><name>Json representation in Transport mode</name>

<t>In Transport Mode, since the IP header remains uncompressed, only the UDP payload and ESP fields are compressed. The new IANA-defined CDAs are applied as follows: "checksum" is used for the UDP checksum, meaning it is recalculated at decompression rather than transmitted. "compute-length" eliminates the UDP Length field, as it can be inferred from the payload size. "padding" ensures ESP padding aligns with 8-bit boundaries. "not-sent" is applied to the IPv6 and ESP Next Header fields because their values are predictable. The UDP Source and Destination Ports use "LSB" compression, reducing overhead by sending only the least significant bits. The ESP SPI and Sequence Number are compressed similarly using "LSB" with an MSB mask. Since the IP header is retained, the Source and Destination IPv6 Addresses are fully transmitted using "sent-value".</t>

<figure><sourcecode type="json"><![CDATA[
[
  {
  "ipsec_mode": "Transport",
  "ts_ip_version": "IPv6-only",
  "compressed_fields": [
    {
      "FID": "IPv6.SourceAddress",
      "FL": 128,
      "TV": "2001:db8::1001",
      "MO": "equal",
      "CDA": "sent-value"
    },
    {
      "FID": "IPv6.DestinationAddress",
      "FL": 128,
      "TV": "2001:db8::2002",
      "MO": "equal",
      "CDA": "sent-value"
    },
    {
      "FID": "IPv6.NextHeader",
      "FL": 8,
      "TV": 17,
      "MO": "equal",
      "CDA": "not-sent"
    },
    {
      "FID": "UDP.SourcePort",
      "FL": 16,
      "TV": 1234,
      "MO": "MSB",
      "CDA": "LSB"
    },
    {
      "FID": "UDP.DestinationPort",
      "FL": 16,
      "TV": 5678,
      "MO": "MSB",
      "CDA": "LSB"
    },
    {
      "FID": "UDP.Length",
      "FL": 16,
      "TV": null,
      "MO": "ignore",
      "CDA": "compute-length"
    },
    {
      "FID": "UDP.Checksum",
      "FL": 16,
      "TV": null,
      "MO": "ignore",
      "CDA": "checksum"
    },
    {
      "FID": "ESP.SPI",
      "FL": 32,
      "TV": null,
      "MO": "MSB(4 - esp_spi_lsb)",
      "CDA": "LSB"
    },
    {
      "FID": "ESP.SequenceNumber",
      "FL": 32,
      "TV": null,
      "MO": "MSB(4 - esp_sn_lsb)",
      "CDA": "LSB"
    },
    {
      "FID": "ESP.Padding",
      "FL": 8,
      "TV": null,
      "MO": "ignore",
      "CDA": "padding"
    },
    {
      "FID": "ESP.NextHeader",
      "FL": 8,
      "TV": 17,
      "MO": "equal",
      "CDA": "not-sent"
    }

]
  }
    ]
]]></sourcecode></figure>

</section>
<section anchor="attributes-for-rule-generation-afrg-1"><name>Attributes for Rule Generation (AfRG)</name>

<t>The SCHC rules for Transport Mode are derived from the following AfRG:</t>

<t><list style="symbols">
  <t>IPsec Mode: Transport</t>
  <t>Traffic Selector IP Version: IPv6-only</t>
  <t>Traffic Selector Source Address: 2001:db8::1001</t>
  <t>Traffic Selector Destination Address: 2001:db8::2002</t>
  <t>DSCP CDA: Lower</t>
  <t>ECN CDA: Lower</t>
  <t>ESP SPI Compression: LSB</t>
  <t>ESP SN Compression: LSB</t>
</list></t>

</section>
<section anchor="inner-ip-packet-iip"><name>Inner IP Packet (IIP)</name>

<t>The original packet before compression consists of:</t>

<t><list style="symbols">
  <t>IPv6 Source Address: 2001:db8::1001</t>
  <t>IPv6 Destination Address: 2001:db8::2002</t>
  <t>UDP Source Port: 1234</t>
  <t>UDP Destination Port: 5678</t>
  <t>UDP Length: 18 bytes</t>
  <t>ESP Payload Data</t>
</list></t>

</section>
<section anchor="diet-esp-compression-1"><name>Diet-ESP Compression</name>

<t><list style="numbers" type="1">
  <t>IIPC: UDP Header Compression
  <list style="symbols">
      <t>UDP ports are compressed using the LSB technique.</t>
      <t>UDP Length is removed (computed at decompression).</t>
      <t>UDP Checksum is omitted.</t>
    </list></t>
  <t>CTEC: ESP Trailer Compression
  <list style="symbols">
      <t>Pad Length and Padding are omitted.</t>
      <t>Next Header is omitted.</t>
    </list></t>
  <t>EEC: ESP Header Compression
  <list style="symbols">
      <t>SPI and SN are compressed using LSB.</t>
    </list></t>
  <t>Compressed Packet Output</t>
</list></t>

<t>The final compressed packet consists of the compressed ESP header, IIPC compressed data, and payload.</t>

</section>
<section anchor="diet-esp-decompression-1"><name>Diet-ESP Decompression</name>

<t>The decompression process mirrors the compression steps, restoring SPI, SN, UDP headers, ESP Next Header, and Padding fields.</t>

</section>
<section anchor="github-repository-diet-esp-schc-implementation"><name>GitHub Repository: Diet-ESP SCHC Implementation</name>

<t>The source code for the implementation of the Diet-ESP profile, including the compression and decompression logic using the SCHC rules, is available on GitHub. Access the code at the following link:</t>

<t>GitHub Repository: <eref target="https://github.com/mglt/pyesp/tree/master/examples/draft-diet-esp.py">Diet-ESP SCHC Implementation</eref></t>

<t>This repository contains the rule definitions, examples, and source code for implementing and testing the Diet-ESP profile. Refer to the README file for setup instructions and usage guidelines.</t>

</section>
</section>
</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

