<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.22 (Ruby 3.0.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC2119 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC8174 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC4303 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4303.xml">
<!ENTITY RFC4301 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4301.xml">
<!ENTITY RFC8724 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8724.xml">
<!ENTITY RFC7296 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7296.xml">
<!ENTITY I-D.ietf-ipsecme-ikev2-diet-esp-extension SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-ipsecme-ikev2-diet-esp-extension.xml">
<!ENTITY I-D.mglt-ipsecme-dscp-np SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.mglt-ipsecme-dscp-np.xml">
<!ENTITY RFC8750 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8750.xml">
<!ENTITY RFC6437 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6437.xml">
<!ENTITY RFC6864 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6864.xml">
<!ENTITY RFC8221 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8221.xml">
<!ENTITY RFC9333 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.9333.xml">
<!ENTITY I-D.ietf-schc-architecture SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-schc-architecture.xml">
<!ENTITY RFC8376 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8376.xml">
<!ENTITY RFC4302 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4302.xml">
<!ENTITY RFC6438 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.6438.xml">
]>


<rfc ipr="trust200902" docName="draft-ietf-ipsecme-diet-esp-06" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="EHCP">ESP Header Compression Profile</title>

    <author initials="D." surname="Migault" fullname="Daniel Migault">
      <organization>Ericsson</organization>
      <address>
        <email>daniel.migault@ericsson.com</email>
      </address>
    </author>
    <author initials="M." surname="Hatami" fullname="Maryam Hatami">
      <organization>Concordia University</organization>
      <address>
        <email>maryam.hatami@mail.concordia.ca</email>
      </address>
    </author>
    <author initials="S." surname="Céspedes" fullname="Sandra Céspedes">
      <organization>Concordia University</organization>
      <address>
        <email>sandra.cespedes@concordia.ca</email>
      </address>
    </author>
    <author initials="W." surname="Atwood" fullname="J. William Atwood">
      <organization>Concordia University</organization>
      <address>
        <email>william.atwood@concordia.ca</email>
      </address>
    </author>
    <author initials="D." surname="Liu" fullname="Daiying Liu">
      <organization>Ericsson</organization>
      <address>
        <email>harold.liu@ericsson.com</email>
      </address>
    </author>
    <author initials="T." surname="Guggemos" fullname="Tobias Guggemos">
      <organization>LMU</organization>
      <address>
        <email>guggemos@nm.ifi.lmu.de</email>
      </address>
    </author>
    <author initials="C." surname="Bormann" fullname="Carsten Bormann">
      <organization>Universitaet Bremen TZI</organization>
      <address>
        <email>cabo@tzi.org</email>
      </address>
    </author>
    <author initials="D." surname="Schinazi" fullname="David Schinazi">
      <organization>Google LLC</organization>
      <address>
        <email>dschinazi.ietf@gmail.com</email>
      </address>
    </author>

    <date year="2025" month="February" day="24"/>

    <area>Security</area>
    <workgroup>IPsecme</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 66?>

<t>This document specifies Diet-ESP, a compression mechanisms for control information in IPsec/ESP communications. The compression is expressed through the Static Context Header Compression architecture.</t>



    </abstract>



  </front>

  <middle>


<?line 74?>

<section anchor="requirements-notation"><name>Requirements notation</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.
<?line -6?></t>

</section>
<section anchor="introduction"><name>Introduction</name>

<t>The Encapsulating Security Payload (ESP) <xref target="RFC4303"/> protocol is part of the IPsec <xref target="RFC4301"/> suite of protocols and can provide confidentiality, data origin authentication, integrity, anti-replay, and traffic flow confidentiality. The set of services ESP provides depends on the Security Association (SA) parameters negotiated between devices.</t>

<t>An ESP packet is composed of the ESP Header, the ESP Payload Data, the ESP Trailer, and the Integrity Check Value (ICV). ESP has two modes of operation: Transport and Tunnel. In Transport mode, the ESP Payload Data consists of the payload of the original IP packet; the ESP Header is inserted after the original IP packet header. In Tunnel mode, commonly used for VPNs, the ESP Header is placed after an outer IP header and before the inner IP packet headers of the original datagram. This ensures both the original IP headers and payload are protected. Consequently, the ESP Payload Data field contains either the payload from the original IP packet or the fully-encapsulated IP packet, in transport mode or tunnel mode, respectively.</t>

<t>The ESP Trailer, placed at the end of the ESP Payload Data, includes fields such as Padding and Pad Length to ensure proper alignment, and Next Header to indicate the protocol following the ESP header. The ICV, calculated over the ESP Header, ESP Payload Data, and ESP Trailer, is appended after the ESP Trailer to ensure packet integrity. For a simplified overview of ESP, readers are referred to Minimal ESP <xref target="RFC9333"/>.</t>

<t>While ESP is effective in securing traffic, compression can reduce packet sizes, enhancing performance in networks with limited bandwidth. In such environments, reducing the size of transmitted packets is essential to improve efficiency. This document defines Diet-ESP, a protocol that includes different compression/decompression (C/D) of various structures processed by ESP. These C/D are expressed through the Static Context Header Compression and Fragmentation (SCHC) framework <xref target="RFC8724"/>. The structure of the ESP packet to be compressed is shown in Figure <xref target="fig-esp"/>.</t>

<figure title="Top-Level Format of an ESP Packet" anchor="fig-esp"><artwork align="center"><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ----
|               Security Parameters Index (SPI)                 | ^Auth.
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |Cove-
|                      Sequence Number                          | |rage
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | ----
|                    Data Payload* (variable)                   | |   ^
~  Higher Layer Message (transport) or IP datagram (tunnel)     ~ |   |
|                                                               | |Encr.
+               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |Cove
|               |     Padding (0-255 bytes)                     | |rage*
+-+-+-+-+-+-+-+-+               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |   |
|                               |  Pad Length   | Next Header   | v   v
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ------
|         Integrity Check Value-ICV   (variable)                |
~                                                               ~
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
]]></artwork></figure>

<section anchor="sec-3c"><name>The Three compressors described in this specification</name>

<t>The document outlines the three compressors utilized in Diet-ESP, which are detailed as follows:</t>

<t><list style="numbers" type="1">
  <t>Inner IP Compression (IIPC): This process pertains to the compression and decompression of the IP packet protected by ESP. For outbound packets, the Clear Text ESP packet incorporates the compressed Inner IP (IIP) into the ESP Data Payload (refer to <xref target="fig-esp"/>). In the case of inbound packets, decompression occurs after the compressed IIP is retrieved from the Payload Data within the Clear Text ESP packet (CTE).</t>
  <t>Clear Text ESP Compression (CTEC): This process pertains to the compression and decompression of the segment of the ESP packet that is destined for encryption. This encompasses the Data Payload and the ESP Trailer, which includes the Padding, Pad Length, and Next Header fields, as illustrated in <xref target="fig-esp"/>. At this stage, only the latter fields are eligible for compression. For outbound packets, the ESP subsequently encrypts the compressed CTE. For inbound packets, decompression takes place following the decryption process of the ESP.</t>
  <t>Encrypted ESP Compression (EEC): This process pertains to the compression and decompression of the Encrypted ESP packet (EE), which consists of the ESP Header, the encrypted payload, and the Integrity Check Value (ICV). Since neither the encrypted payload nor the ICV can be compressed, only the ESP Header, specifically the SPI and SN fields, are subject to compression.</t>
</list></t>

</section>
<section anchor="the-scope-of-schc-in-this-specification"><name>The scope of SCHC in this specification</name>

<t>SCHC <xref target="RFC8724"/> offers a mechanism for headers compression as well as an optional fragmentation feature. This document utilizes SCHC as a practical means to illustrate the capability to compress and decompress a structured payload. It is important to note that any elements of SCHC that pertain to aspects other than compression or decompression, such as fragmentation, fall outside the purview of this document. The reference to SCHC herein is solely for descriptive purposes related to compression and decompression, and it is not anticipated that the general SCHC framework will be integrated into the ESP implementation. The structured payloads addressed in this specification pertain to internal structures managed by ESP for the processing of an IP packet. Consequently, the compression and decompression processes outlined in this document represent supplementary steps for the ESP stack in handling the ESP packet.</t>

</section>
<section anchor="schc-rules-and-schc-static-context-in-this-specification"><name>SCHC Rules and SCHC static context in this specification</name>

<t>SCHC facilitates the compression and decompression of headers by utilizing a common context that may encompass multiple Rules. Each Rule is designed to correspond with specific values or ranges of values within the header fields. When a Rule is successfully matched, the corresponding header fields are substituted with the Rule ID and the Compression Residue, which contains the remaining bits after compression.</t>

<t>In the context of IPsec, the process of encryption or decryption between IPsec peers necessitates a common context known as a Security Association (SA). More broadly, the SA encompasses all essential parameters required by the Encapsulating Security Payload (ESP) to handle both inbound and outbound packets. SAs are unidirectional. Furthermore, IPsec can link both outbound and inbound IP packets to the SA through Traffic Selectors (TS) or Security Parameters Index (SPI). This capability allows IPsec to uniquely associate outbound and inbound packets with a specific context (SA), which contains all pertinent information for IPsec processing.</t>

<t>This document adopts a comparable methodology for compression and decompression, ensuring that the SA includes all necessary parameters to create the unique Rule applicable for compressing or decompressing each structured payload. This guarantees that each SA is linked to a single Rule, thereby allowing the Rule ID to be omitted. The Rule associated with each structured payload is generated based on specific parameters referred to in this document as Attributes for Rule Generation (AfRG) (see <xref target="sec-afrg"/> for a more detailed description). These AfRGs are negotiated through IKEv2 <xref target="RFC7296"/>, and in such cases, they are likely already included in the SA. Any additional missing AfRGs are negotiated via <xref target="I-D.ietf-ipsecme-ikev2-diet-esp-extension"/>.</t>

</section>
</section>
<section anchor="terminology"><name>Terminology</name>

<dl>
  <dt>ESP Header Compression:</dt>
  <dd>
    <t>A method to reduce the size of ESP headers and trailer using predefined compression rules and contexts to improve efficiency.</t>
  </dd>
  <dt>ESP Trailer:</dt>
  <dd>
    <t>A set of fields added at the end of the ESP payload, including Padding, Pad Length, and Next Header, used to ensure alignment and indicate the next protocol.</t>
  </dd>
  <dt>Inner IP C/D (IIPC):</dt>
  <dd>
    <t>Expressed via the SCHC framework, IIPC compresses/decompresses the inner IP packet headers.</t>
  </dd>
  <dt>Clear Text ESP C/D (CTEC):</dt>
  <dd>
    <t>Expressed via the SCHC framework, CTEC compresses/decompresses all fields that will later be encrypted by ESP, which include the ESP Data and ESP Trailer.</t>
  </dd>
  <dt>Encrypted ESP C/D (EEC):</dt>
  <dd>
    <t>Expressed via the SCHC framework, EEC compresses/decompresses ESP fields that will not be encrypted by ESP.</t>
  </dd>
  <dt>Security Parameters Index (SPI):</dt>
  <dd>
    <t>As defined in <xref section="4.1" sectionFormat="comma" target="RFC4301"/>.</t>
  </dd>
  <dt>Sequence Number (SN):</dt>
  <dd>
    <t>As defined in <xref section="2.2" sectionFormat="comma" target="RFC4303"/>.</t>
  </dd>
  <dt>Static Context Header Compression (SCHC):</dt>
  <dd>
    <t>A framework for header compression designed for LPWANs, as defined in <xref target="RFC8724"/>.</t>
  </dd>
  <dt>Static Context Header Compression Rules (SCHC Rules):</dt>
  <dd>
    <t>As defined in  <xref target="I-D.ietf-schc-architecture"/></t>
  </dd>
  <dt>RuleID:</dt>
  <dd>
    <t>A unique identifier for each Rule part of the Set of Rules.</t>
  </dd>
  <dt>SCHC Parameters:</dt>
  <dd>
    <t>A set of predefined values used for SCHC compression and decompression, ensuring byte alignment and proper packet formatting based on the SCHC profile.</t>
  </dd>
  <dt>SCHC MAX_PACKET_SIZE:</dt>
  <dd>
    <t>The maximum size of a SCHC-compressed packet that can be transmitted without fragmentation.</t>
  </dd>
  <dt>Traffic Selector (TS):</dt>
  <dd>
    <t>A set of parameters (e.g., IP address range, port range, and protocol) used to define which traffic should be protected by a specific Security Association (SA).</t>
  </dd>
</dl>

<t>It is assumed that the reader is familiar with other SCHC terminology defined in <xref target="RFC8376"/>, <xref target="RFC8724"/>, and eventually <xref target="I-D.ietf-schc-architecture"/>.</t>

</section>
<section anchor="sec-schc-ipsec-integration"><name>Diet-ESP Integration into the IPsec Stack</name>

<t><xref target="fig-arch"/> depicts the incorporation of Diet-ESP within the IPsec framework.</t>

<t>IPsec necessitates that both endpoints agree on a shared context known as the Security Association (SA). This SA is established via IKEv2 and encompasses all Attributes for Rules Generation (AfRG) (refer to <xref target="sec-afrg"/>) essential for formulating the Rules for each compressor defined in <xref target="sec-3c"/>, specifically the Inner IP packet Compressor (IIPC), the Clear Text ESP Compressor (CTEC), and the Encrypted ESP Compressor (EEC).</t>

<t>When an Inner IP packet (IIP) is received, IPsec identifies the SA linked to that packet. The ESP then determines the IIPC Rule from the AfRG contained within the SA and compresses the IIP packet (IIPC: C {IIP}). Subsequently, ESP constructs the Clear Text ESP payload (CTE). The CTEC Rule is derived from the AfRG of the SA, allowing for the compression of the CTE (CTEC: C {C {IIP}, ET}, where ET represents the ESP Trailer). Then, ESP encrypts the payload, computes the Integrity Check Value (ICV), and forms the Encrypted ESP packet (EE). The EE Rule is derived from the AfRG of the SA, and then utilized to compress the EE (C {EH, C {C {IIP}, ET}},ICV}, where EH represents the ESP Header). The resulting compressed ESP extension is integrated into an IP packet and transmitted as outbound traffic.</t>

<t>For inbound traffic, the endpoint extracts the Security Parameter Index (SPI) from the compressed EE, along with any other selectors from the packet, to conduct a lookup for the SA. As outlined in <xref target="sec-sec"/>, since the SPI is derived from a potentially compressed ESP Header, there may be instances where the endpoint must explore multiple options, potentially leading to several lookups or, in the worst-case scenario, multiple signature verifications (see <xref target="sec-sec"/> for a more detailed discussion).
Once the SA is retrieved, the ESP accesses the AfRG to ascertain the EEC Rule and proceeds to decompress the EE. The ESP verifies the signature prior to decryption. Following this, the CTEC Rule is derived from the AfRG of the SA, allowing for the subsequent decompression. Finally, ESP extracts the Data Payload from the CTE packet, retrieves the IIPC Rule from the AfRG of the SA, and decompresses the IIP.</t>

<t>Note that implementations MAY differ from the architectural description but it is assumed that the outputs will be the same.</t>

<figure title="SCHC Integration into the IPsec Stack. Packets are described for IPsec in tunnel mode. C designates the Compressed header for the fields inside. IIP refers to the Inner IP packet, EH refers to the ESP Header, and ET refers to the ESP Trailer. IIPC, CTEC and EEC respectively designate the Inner IP Compress, the Clear Text ESP Compressor and the Encrypted ESP Compressor." anchor="fig-arch"><artwork align="center"><![CDATA[
Endpoint                                 Endpoint
+------------------------+               +------------------------+
| Inner IP packet        |               | Inner IP packet        | 
+------------------------+               +------------------------+
========|=================================================^========
IPsec   |                                                 |
+------------------------+                                |
| SA lookup              |                                |
+------------------------+                                |
========|=================================================|========
ESP     |                                                 |
        |       +-------------------------------------+   |
        |       | Security Association                |   |                           
        |       |   - Attributes for Rule Generations |   |
        |       +-------------------------------------+   | 
        |       |  Generation of the IIPC Rule,       |   |
        |       |   CTEC Rule and EEC Rule            |   |
        |       +-------------------------------------+   | 
        |                                                 |
        v                                                 |            
+------------------------+               +------------------------+
| IIPC: C{IIP}           |               | IIPC: D{IIP}           |
+------------------------+               +------------------------+ 
| Formation of           |               | Extraction of          |
| Clear Text ESP         |               | Data Payload           |
+------------------------+               +------------------------+
| CTEC:                  |               | CTEC:                  |
| C{C{IIP},ET}           |               | D{C{IIP},ET}           |     
+------------------------+               +------------------------+
| Encryption             |               | Decryption             |
+------------------------+               +------------------------+
| Formation of           |               | Parsing                |
| Encrypted ESP          |               | Encrypted ESP          |
+------------------------+               +------------------------+
| EEC:                   |               | EEC:                   |  
| C{EH,C{C{IIP},ET},ICV} |               | D{EH,C{C{IIP},ET},ICV} |
+------------------------+               +------------------------+
        |                                | SA lookup              |
        |                                +------------------------+
========|=================================================^========
        |                                                 |
        v                                                 | 
Outbound Traffic                                  Inbound Traffic 
]]></artwork></figure>

<section anchor="schc-parameters-for-diet-esp"><name>SCHC Parameters for Diet-ESP</name>

<t>The SCHC Payload <xref target="RFC8724"/> is always in the form:</t>

<figure title="SCHC Packet" anchor="tab-diet-esp-compressed-header-format"><artwork align="center"><![CDATA[
0 1 2 3 4 5 6 7
+-+-+-+-+-+-+-+---------...----------+~~~~~~~~~+---------------+
|   RuleID    | Compression Residue  | Payload | SCHC padding  | 
+-+-+-+-+-+-+-+---------...----------+~~~~~~~~~+---------------+
|-------- Compressed Header ---------|         |-- as needed --|
]]></artwork></figure>

<t>The RuleID is a unique identifier for each SCHC rule. It is included in packets to ensure the receiver applies the correct decompression rule, maintaining consistency in packet processing. Note that the Rule ID does not need to be explicitly agreed upon and can be defined independently by each party. The RuleID in Diet-ESP is expressed as 1 byte and is always elided as Rules are uniquely determined for compressors.</t>

<t>SCHC padding in SCHC serves the purpose of aligning data to a designated boundary, which is typically byte-aligned or aligned to 8 bits. This document presumes that this field is not utilized in IIPC, CET, and EEC. In the absence of SCHC padding, this document outlines the Byte Alignment Padding (BA Padding) as detailed in section <xref target="sec-byte-align"/> to guarantee the byte alignment of the CTE Payload Data. Such alignment is essential to ensure that encryption is applied to data that is byte-aligned. The rationale for employing a padding method other than SCHC Padding is to accommodate the length of the compressed ESP Payload Data</t>

<t>Other variables required for the C/D in Diet-ESP includes Maximum Packet Size (MAX_PACKET_SIZE) determined by the specific IPsec ESP configuration and the underlying transport, but it is typically aligned with the network’s MTU. The size constraints are optimized based on the available link capacity and negotiated parameters between endpoints.</t>

</section>
<section anchor="sec-afrg"><name>Attributes for Rules Generation</name>

<t>The list of attributes for the Rules Generation (AfRG) is shown in <xref target="tab-ehc-ctx-esp"/>. These attributes are used to express the various compressions that operate at the IIPC, CTEC, and EEC.</t>

<t>As outlined in <xref target="sec-schc-ipsec-integration"/>, this specification does not detail the process by which the AfRG are established between peers. Instead, such negotiations are addressed in <xref target="I-D.ietf-ipsecme-ikev2-diet-esp-extension"/>. However, the AfRG can be classified into two distinct categories. The first category encompasses AfRG that are negotiated through a specific IKEv2 extension tailored for the negotiation of AfRG linked to a particular profile, the Diet-ESP profile in this context. The AfRG referenced in <xref target="tab-ehc-ctx-esp"/> in this category are: the DSCP Compression/Decompression Action (CDA) dscp_cda, the ECN CDA ecn_cda, the Flow Label CDA flow_label_cda, the ESP alignment alignment, the ESP SPI Least Significant Bits (LSB) esp_spi_lsb, and the ESP Sequence Number LSB esp_sn_lsb.</t>

<t>The second category pertains to AfRG that are negotiated through IKEv2 exchanges or extensions that are not specifically designed for compression purposes. This category includes AfRG associated with TS, as identified in <xref target="tab-ehc-ctx-esp"/>, which are the TS IP Version ts_ip_version, the TS IP Source Start ts_ip_src_start, the TS IP Source End ts_ip_src_end, the TS IP Destination Start ts_ip_dst_start, the TS IP Destination End ts_ip_dst_end, the TS Protocol ts_proto, the TS Port Source Start ts_port_src_start, the TS Port Source End ts_port_src_end, the TS Port Destination Start ts_port_dst_start, and the  TS Port Destination End ts_port_dst_end. These AfRG are derived from the Traffic Selectors established through TSi/TSr payloads during the IKEv2 CREATE_CHILD_SA exchange, as described in <xref section="3.13" sectionFormat="comma" target="RFC7296"/>. The AfRG IPsec Mode designated as ipsec_mode in <xref target="tab-ehc-ctx-esp"/> is determined by the presence or absence of the USE_TRANSPORT_MODE Notify Payload during the CREATE_CHILD_SA exchange, as detailed in <xref section="1.3.1" sectionFormat="comma" target="RFC7296"/>. The AfRG Tunnel IP designated as tunnel_ip in <xref target="tab-ehc-ctx-esp"/> is obtained from the IP address of the IKE messages exchanged during the CREATE_CHILD_SA process, as noted in <xref section="1.1.3" sectionFormat="comma" target="RFC7296"/>. The AfRGs designated as ESP Encryption Algorithm esp_encr and ESP Security Parameter Index (SPI) esp_spi in <xref target="tab-ehc-ctx-esp"/> are established through the SAi2/SAr2 payloads during the CREATE_CHILD_SA exchange, while the AfRG designated as ESP Sequence Number esp_sn in <xref target="tab-ehc-ctx-esp"/> is initialized upon the creation of the Child SA and incremented for each subsequent ESP message. The DSCP values identified as dscp_list in <xref target="tab-ehc-ctx-esp"/> are established through the DSCP Notify Payload <xref target="I-D.mglt-ipsecme-dscp-np"/>.</t>

<t>The ability to derive the IPPC Rules for the IIPC from the agreed Traffic Selectors is indicated by the variable iipc_profile.</t>

<texttable title="Attributes for Rule Generation (AfRG) to generate IIPC, CTEC and EEC Rules in Diet-ESP" anchor="tab-ehc-ctx-esp">
      <ttcol align='left'>Variable</ttcol>
      <ttcol align='left'>Possible Values</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <ttcol align='left'>Compressor</ttcol>
      <c>iipc_profile</c>
      <c>"iipc_diet-esp", "iipc_uncompress"</c>
      <c>ThisRFC</c>
      <c>N/A</c>
      <c>dscp_cda</c>
      <c>"uncompress", "lower", "sa"</c>
      <c>ThisRFC</c>
      <c>IIPC</c>
      <c>ecn_cda</c>
      <c>"uncompress", "lower"</c>
      <c>ThisRFC</c>
      <c>IIPC</c>
      <c>flow_label_cda</c>
      <c>"uncompress", "lower", "generated", "zero"</c>
      <c>ThisRFC</c>
      <c>IIPC</c>
      <c>ts_ip_version</c>
      <c>"IPv4-only", "IPv6-only"</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_ip_src_start</c>
      <c>IPv4 or IPv6 address</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_ip_src_end</c>
      <c>IPv4 or IPv6 address</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_ip_dst_start</c>
      <c>IPv4 or IPv6 address</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_ip_dst_end</c>
      <c>IPv4 or IPv6 address</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_proto</c>
      <c>TCP, UDP, UDP-Lite, SCTP, ANY, ...</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_port_src_start</c>
      <c>Port number</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_port_src_end</c>
      <c>Port number</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_port_dst_start</c>
      <c>Port number</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>ts_port_dst_end</c>
      <c>Port number</c>
      <c>RFC7296</c>
      <c>IIPC</c>
      <c>dscp_list</c>
      <c>list of DSCP numbers</c>
      <c>RFCYYYY</c>
      <c>IIPC</c>
      <c>alignment</c>
      <c>"8 bit", "16 bit", "32 bit", "64 bit"</c>
      <c>ThisRFC</c>
      <c>CTEC</c>
      <c>ipsec_mode</c>
      <c>"Tunnel", "Transport"</c>
      <c>RFC4301</c>
      <c>CTEC</c>
      <c>tunnel_ip</c>
      <c>IPv4 or IPv6 address</c>
      <c>RFC4301</c>
      <c>CTEC</c>
      <c>esp_encr</c>
      <c>ESP Encryption Algorithm</c>
      <c>RFC4301</c>
      <c>CTEC</c>
      <c>esp_spi</c>
      <c>ESP SPI</c>
      <c>RFC4301</c>
      <c>EEC</c>
      <c>esp_spi_lsb</c>
      <c>0-32</c>
      <c>ThisRFC</c>
      <c>EEC</c>
      <c>esp_sn</c>
      <c>ESP Sequence Number</c>
      <c>RFC4301</c>
      <c>EEC</c>
      <c>esp_sn_lsb</c>
      <c>0-32</c>
      <c>ThisRFC</c>
      <c>EEC</c>
</texttable>

<t>Any variable starting with "ts_" is associated with the Traffic Selectors (TSi/TSr) of the SA. 
The notation is introduced by this specification but the definitions of the variables are in <xref target="RFC4301"/> and <xref target="RFC7296"/>.</t>

<t>The Traffic Selectors may result in a quite complex expression, and this specification restricts that complexity. 
This specification restricts the resulting TSi/TSr to a single type of IP address (IPv4 or IPv6), a single protocol (e.g., UDP, TCP, or ANY), a single port range for source and destination. This specification presumes that the Traffic Selectors can be articulated as a result of CREATE_CHILD_SA with only one Traffic Selector <xref section="3.13.1" sectionFormat="comma" target="RFC7296"/> in both TSi and TSr payloads (as described in <xref section="3.13" sectionFormat="comma" target="RFC7296"/>). The TS Type MUST be either TS_IPV4_ADDR_RANGE or TS_IPV6_ADDR_RANGE.</t>

<t>Let the resulting Traffic Selectors TSi/TSr be expressed via the Traffic Selector structure defined in <xref section="3.13.1" sectionFormat="comma" target="RFC7296"/>. We designate the local TS the TS - either TSi or TSr - sent by the local peer. Conversely we designate as remote TS the TS - either TSi or TSr - sent by the remote peer.</t>

<t>The details of each parameter are the following:</t>

<dl>
  <dt>iipc_profile:</dt>
  <dd>
    <t>designates the behavior of the IIPC layer. When set to "iipc_uncompress" IIPC is not performed. This specification describes IIPC that corresponds to the "iipc_diet-esp" profile.</t>
  </dd>
  <dt>flow_label_cda:</dt>
  <dd>
    <t>indicates the Flow Label CDA, that is how the Flow Label field of the inner IPv6 packet or the Identification field of the inner IPv4 packet is compressed / decompressed - See <xref target="sec-cda"/> for more information. In a nutshell, "uncompress" indicates that Flow Label (resp. Identification) are not compressed. "lower" indicates the value is read from the outer IP header - eventually with some adaptations when inner IP packet and outer IP packets have different versions. "generated" indicates that the field is generated by the receiving party. In that case, the decompressed value may take a different value compared to its original value. "zero" indicates the field is set to zero.</t>
  </dd>
  <dt>dscp_cda:</dt>
  <dd>
    <t>indicates the DSCP CDA, that is how the DSCP values of the inner IP packet are compressed / decompressed - See <xref target="sec-cda"/> for more information. In a nutshell, "uncompress" indicates that DSCP are not compressed. "lower" indicates the value is read from the outer IP header - eventually with some adaptations when inner IP packet and outer IP packets have different versions.  "sa" indicates, compression is performed according to the DSCP values agreed by the SA (dscp_list).</t>
  </dd>
  <dt>ecn_cda:</dt>
  <dd>
    <t>indicates ECN CDA, that is how the ECN values of the inner IP packet are compressed / decompressed - See <xref target="sec-cda"/> for more information. In a nutshell, "uncompress" indicates that DSCP are not compressed. "lower" indicates the value is read from the outer IP header - eventually with some adaptations when inner IP packet and outer IP packets have different versions.</t>
  </dd>
  <dt>ts_ip_version:</dt>
  <dd>
    <t>designates the TS IP version. Its value is set  to "IPv4-only" when only IPv4 IP addresses are considered and to "IPv6-only" when only IPv6 addresses are considered.
Practically, when IKEv2 is used, it means that the agreed TSi or TSr results only in a mutually exclusive combination of TS_IPV4_ADDR_RANGE or TS_IPV6_ADDR_RANGE payloads. If TS Type of the resulting TSi/TSr is set to TS_IPV4_ADDR_RANGE, ts_ip_version takes the value "IPv4-only". Respectively, if TS Type is set to TS_IPV6_ADDR_RANGE, ts_ip_version is set to "IPv6-only".</t>
  </dd>
  <dt>ts_ip_src_start:</dt>
  <dd>
    <t>designates the TS IP Source Start, that is the starting value range of source IP addresses of the inner packet and has the same meaning as the Starting Address field of the local TS.</t>
  </dd>
  <dt>ts_ip_src_end:</dt>
  <dd>
    <t>designates TS IP Source End that is the high end value range of source IP addresses of the inner packet and has the same meaning as the Ending Address field of the local TS.</t>
  </dd>
  <dt>ts_ip_dst_start:</dt>
  <dd>
    <t>designates the TS IP Destination Start, that is the starting value range of destination IP addresses of the inner packet and has the same meaning as the Starting Address field of the remote TS.</t>
  </dd>
  <dt>ts_ip_dst_end:</dt>
  <dd>
    <t>designates the TS IP Destination End, that is the high end value range of destination IP addresses of the inner packet and has the same meaning as the Ending Address field of the remote TS.</t>
  </dd>
  <dt>ts_proto:</dt>
  <dd>
    <t>designates the TS Protocol, that is the Protocol ID of the resulting TSi/TSr. This profile considers the specific protocol values "TCP", "UDP", "UDP-Lite", "SCTP" and "ANY". The representation of "ANY" is given in <xref section="4.4.4.2" sectionFormat="comma" target="RFC4301"/>.</t>
  </dd>
  <dt>ts_port_src_start:</dt>
  <dd>
    <t>designates the TS Port Source Start, that is the the starting value of the source port range of the inner packet and has the same meaning as the Start Port field of the local TS.</t>
  </dd>
  <dt>ts_port_src_end:</dt>
  <dd>
    <t>designates the TS Port Source End, that is the high end value range of the source port range of the inner packet and has the same meaning as the End Port field of the local TS.</t>
  </dd>
  <dt>ts_port_dst_start:</dt>
  <dd>
    <t>designates TS Port Destination Start, that is the starting value of the destination port range of the inner packet and has the same meaning as the Start Port field of the remote TS.</t>
  </dd>
  <dt>ts_port_dst_end:</dt>
  <dd>
    <t>designates TS Port Destination End, that is the high end value range of the destination port range of the inner packet and has the same meaning as the End Port field of the remote TS.</t>
  </dd>
</dl>

<t>IP addresses and ports are defined as a range and compressed using the Least Significant Bits (LSB).
For a range defined by start and end values, msb( start, end ) is defined as the function that returns the Most Significant Bits (MSB) that remains unchanged while the value evolves between start and end.
Similarly, lsb( start, end ) is defined as the function that returns the LSB that changes while the value evolves between start and end. 
Finally, len( x ) is defined as the function that returns the number of bits of the bit array x.</t>

<dl>
  <dt>dscp_list:</dt>
  <dd>
    <t>designates the list of DSCP values associated to the inner traffic - see for example <xref target="I-D.mglt-ipsecme-dscp-np"/>. These are not Traffic Selectors, but the compression mandates that the packets take one of these listed DSCP values.</t>
  </dd>
  <dt>alignment:</dt>
  <dd>
    <t>designates the ESP alignment as defined by <xref target="RFC4303"/>.</t>
  </dd>
  <dt>ipsec_mode:</dt>
  <dd>
    <t>designates the IPsec Mode defined in <xref target="RFC4301"/>. In this document, the possible values are "tunnel" for the Tunnel mode and "transport" for the Transport mode.</t>
  </dd>
  <dt>tunnel_ip:</dt>
  <dd>
    <t>designates the Tunnel IP address of the tunnel defined in <xref target="RFC4301"/>.
This field is only applicable when the Tunnel mode is used.
That IP address can be an IPv4 or IPv6 address.</t>
  </dd>
  <dt>esp_encr:</dt>
  <dd>
    <t>designates the ESP Encryption Algorithm - also designated as Transform 1 in <xref section="3.3.2" sectionFormat="comma" target="RFC7296"/>. The algorithm is needed to determine whether the ESP Payload Data needs to be aligned to some predefined block size and if the ESP Pad Length and Padding fields can be compressed.  For the purpose of compression it is RECOMMENDED to use algorithms that already compressed their IV <xref target="RFC8750"/>.</t>
  </dd>
  <dt>esp_spi:</dt>
  <dd>
    <t>designates the Security Parameter Index defined in <xref target="RFC4301"/>.</t>
  </dd>
  <dt>esp_spi_lsb:</dt>
  <dd>
    <t>designates the LSB to be considered for the compressed SPI. A value of 32 for esp_spi_lsb will leave the SPI unchanged.</t>
  </dd>
  <dt>esp_sn:</dt>
  <dd>
    <t>designates the ESP Sequence Number (SN) field defined in <xref target="RFC4301"/>.</t>
  </dd>
  <dt>esp_sn_lsb:</dt>
  <dd>
    <t>designates the LSB to be considered for the compressed SN. It works similarly to ESP SPI LSB (see esp_spi_lsb).</t>
  </dd>
</dl>

<section anchor="sec-cda"><name>Compression/Decompression Actions in Diet-ESP</name>

<t>In addition to the Compression/Decompression Actions (CDAs) defined in <xref section="7.4" sectionFormat="comma" target="RFC8724"/>, this specification uses the CDAs presented in <xref target="tab-cda"/>. These CDAs are either a refinement of the compute- * CDA or the result of a combined CDA.</t>

<texttable title="Specific compute-* CDAs used in Diet-ESP" anchor="tab-cda">
      <ttcol align='left'>Action</ttcol>
      <ttcol align='left'>Compression</ttcol>
      <ttcol align='left'>Decompression</ttcol>
      <c>lower</c>
      <c>elided</c>
      <c>Get from lower layer</c>
      <c>generated (Flow Label)</c>
      <c>elided</c>
      <c>Compute flow label</c>
      <c>checksum</c>
      <c>elided</c>
      <c>Compute checksum</c>
      <c>ESP padding</c>
      <c>elided</c>
      <c>Compute padding</c>
      <c>hop limit</c>
      <c>elided</c>
      <c>Get from lower layer</c>
      <c>Byte Alignment</c>
      <c>send</c>
      <c>Compute padding</c>
</texttable>

<dl>
  <dt>lower:</dt>
  <dd>
    <t>is only used in a Tunnel Mode and indicates that the fields of the inner IP packet header are generated from the corresponding fields of the Tunnel IP header fields. This CDA can be used for the DSCP, ECN, and IPv6 Flow Label (resp. IPv4 identification) fields.</t>
  </dd>
  <dt>generated:</dt>
  <dd>
    <t>indicates that a brand new Flow Label/Identification field is generated following <xref target="RFC6437"/>, <xref target="RFC6864"/>.</t>
  </dd>
  <dt>checksum:</dt>
  <dd>
    <t>indicates that a checksum is computed accordingly. Typically, the checksum CDA has a different implementation for IPv4, UDP, TCP,...</t>
  </dd>
  <dt>ESP padding:</dt>
  <dd>
    <t>indicates that the ESP padding bytes are generated accordingly.</t>
  </dd>
  <dt>hop limit:</dt>
  <dd>
    <t>indicates that the hop limit is derived from the outer IPv6 header.</t>
  </dd>
  <dt>Byte Alignment:</dt>
  <dd>
    <t>indicates that the the SCHC Byte Alignment bits are generated accordingly.</t>
  </dd>
</dl>

</section>
</section>
</section>
<section anchor="schc-compression-for-ipsec-in-tunnel-mode"><name>SCHC Compression for IPsec in Tunnel mode</name>

<section anchor="sec-iipc"><name>Inner IP Compression (IIPC)</name>

<t>When iipc_profile is set to "iipc_uncompress", the packet is uncompressed. 
When iipc_profile is set to "iipc_diet-esp", IIPC proceeds to the compression of the inner IP Packet composed of an IP Header and an IP Payload.
The compression of the inner IP Payload is described in <xref target="sec-payload"/>.<br />
The IP Header is compressed when ipsec_mode is set to "Tunnel" and left uncompressed otherwise. ts_ip_version determines how the IPv6 Header (resp. the IPv4 header) is compressed - see <xref target="sec-inner-ip6"/> (resp. <xref target="sec-inner-ip4"/>).</t>

<section anchor="sec-payload"><name>Inner IP Payload Compression</name>

<t>The compression only affects UDP, UDP-Lite, TCP or SCTP packets and the type of packet is determined by the IP header.</t>

<t>For UDP, UDP-Lite, TCP and SCTP packets, source ports, destination ports, and checksums are compressed. 
For source port (resp. destination port) only the least significant bits are sent. FL is set to 16 bits,  TV is set to msb( ts_port_src_start, ts_port_src_end ) ( resp. ts_port_dst_start, ts_port_dst_end ), MO is set to "MSB" and CDA to "LSB". 
The checksum is elided, FL is set to 16 bits, TV is not set, MO is set to "ignore" and CDA is set to "checksum". 
This may result in decompressing a zero-checksum UDP packet with a valid checksum, but this has no impact as a valid checksum is universally accepted.</t>

<t>For UDP or UDP-Lite the length field is elided. FL is set to 16, TV is not set, MO is set to "ignore".</t>

</section>
<section anchor="sec-inner-ip6"><name>Inner IPv6 Header Compression</name>

<t>The version field is elided, FL is set to 3, TV is set to ts_ipversion, MO is set to "equal" and CDA is set to "not-sent".</t>

<t>Traffic Class is composed of the 6 bit DSCP and 2 bit ECN.
The compression of DSCP and ECN are defined independently.</t>

<t>DSCP values are compressed according to the dscp_cda value:</t>

<t><list style="symbols">
  <t>If dscp_cda is set to "uncompress", the DSCP values are included in the inner IP header. FL is set to 6 bits, TV is not set, MO is set to "ignore", CDA is set to "sent-value".</t>
  <t>If dscp_cda is set to "lower", the DSCP field is elided and its value is copied from the Tunnel IP header. FL is set to 6 bits, TV is not set, MO is set to "ignore", CDA is set to "lower".</t>
  <t>If dscp_cda is set to "sa", DSCP is compressed according to the DSCP values of the SA. If dscp_list contains a single element, the DSCP is elided, FL is set to 6 bits, TV is set to dscp_list[0], MO is set to "equal" and CDA is set to "not-sent". If dscp_list contains more than one DSCP value, FL is set to 6 bits, TV is set to dscp_list, MO is set to "match-mapping" and the CDA is set to "mapping-sent". 
For ECN, FL is set to 2 bits, TV is not set, MO is set to ignore and CDA is set to "value-sent".</t>
</list></t>

<t>ECN values are compressed according to the ecn_cda value:</t>

<t><list style="symbols">
  <t>If ecn_cda is set to "uncompress", the ECN field is included in the inner IP header. FL is set to 2 bits, TV is not set, MO is set to "ignore", CDA is set to "sent-value".</t>
  <t>If ecn_cda is set to "lower", the ECN value is elided and the ECN value is copied in the outer IP header. FL is set to 2 bits, TV is not set, MO is set to "ignore", CDA is set to "lower".</t>
</list></t>

<t>Flow label is compressed according to the flow_label_cda value:</t>

<t><list style="symbols">
  <t>If flow_label_cda is set to "uncompress", the Flow label is included in the IPv6 Header. FL is set to 20 bits, TV is not set, MO is set to "ignore", and CDA is set to "sent-value".</t>
  <t>If flow_label_cda is set to "lower", the Flow Label is elided and read from the outer IP Header (See <xref target="sec-cda"/>). FL is set to 20 bits, TV is not set, MO is set to "ignore", and CDA is set to "lower". If the outer IP header is an IPv4 header, only the 16 LSB of the Flow Label are inserted into the IPv4 Header. At the decompression, the 4 MSB of the Flow Label are set to 0.</t>
  <t>If flow_label_cda is set to "generated", the Flow Label is elided and the Flow Label is then re-generated at the decompression (See <xref target="sec-cda"/>). The resulting Flow Label differs from the initial value. FL is set to 20, TV is not set, MO is set to "ignore" and CDA is set to "generated".</t>
  <t>If flow_label_cda is set to "zero", the Flow Label is elided and set to 0 at decompression. A 0 value indicates no flow label is present. Fl is set to 20 bits, TV is set to 0, MO is set to "equal" and CDA is set to "not-sent".</t>
</list></t>

<t>Payload Length is elided and determined from the Tunnel IP Header Payload Length as well as the decompressed Payload. FL is set to 16 bits, TV is not set, MO is set to "ignore", CDA is set to "lower".</t>

<t>Next Header is compressed according to ts_proto:</t>

<t><list style="symbols">
  <t>If ts_proto is the single value 0, Next Header is not compressed. FL is set to 8 bits, TV is not set, MO is set to "ignore", CDA is set to "sent-value".</t>
  <t>If ts_proto is a single non zero value, Next Header is compressed. FL is set to 8 bits, TV is set to ts_proto, MO is set to "equal" and CDA is set to "not-sent".</t>
</list></t>

<t>The IPv6 Hop Limit is read from the Tunnel IP Header Hop Limit. FL is set to 8 bits, TV is not set, MO is set to "ignore" and CDA is set to "lower."</t>

<t>The source and destination IPv6 addresses are compressed using MSB. 
In both cases, FL is set to 128, TV is respectively set to  msb(ts_ip_src_start, ts_ip_src_ed) or msb(ts_ip_dst_start, ts_ip_dst_end), the MO is set to "MSB," and the CDA is set to "LSB."</t>

</section>
<section anchor="sec-inner-ip4"><name>Inner IPv4 Header Compression</name>

<t>The fields Version, DSCP, ECN, Source Address and Destination Address are compressed as described for IPv6 in <xref target="sec-inner-ip6"/>.
The field Total Length (16 bits) is compressed similarly to the IPv6 field Payload Length. The field Identification (16 bits) is compressed similarly to the IPv6 field Flow Label. If the tunnel IP Header is an IPv6 Header, the Identification is placed as the LSB of the IPv6 Header and the 4 remaining MSB are set to 0.  The field Time to Live is compressed similarly to the IPv6 Hop Limit field. The Protocol field is compressed similarly to the last IPv6 Next Header field.</t>

<t>The Internet Header Length (IHL) is uncompressed, FL is set to 4 bits, TV is not set, MO is set to ignore and CDA is set to "value-sent".</t>

<t>The IPv4 Header checksum is elided.
FL is set to 16, TV is omitted, MO is set to "ignore," and CDA is set to "checksum."</t>

</section>
</section>
<section anchor="sec-byte-align"><name>ESP Payload Data Byte Alignment</name>

<t>SCHC operates on bits, and the compression performed by SCHC may result in a bit payload that is not aligned to a byte boundary. Protocols such as ESP expect payloads to be aligned to byte boundaries (8-bit alignment). To ensure this, we apply a padding by appending the Byte Alignment bits and the Byte Alignment Length field. The Byte Alignment Length is encoded over 3 bits to indicate the number of bits that will compose the Byte Alignment field. As a result, the Byte Alignment field has between 0 and 7 bits, depending on the required alignment. The total additional overhead can be up to 10 bits (3-bit length field + 0-7 bits padding). If the complementing bits are less than or equal to 2 bits, the padding will result in adding an extra byte.</t>

<t>This Byte Alignment field is distinct from ESP Padding and is required to ensure proper decryption without requiring additional shifting operations in hardware. If the expected length of the compressed residue is statically determinable based on the SA, the padding length can be inferred, and the field may be omitted. Otherwise, when the residue length depends on dynamic fields, the length must be explicitly provided.</t>

<t>When the Byte Alignment is applied, it is performed only after the IIPC stage and before the ESP Padding is added. The ESP Padding is only compressed when alignment is explicitly set to 8 bits.</t>

<t>This ensures that in both transport and tunnel mode, the Payload Data later encrypted by ESP results in an integer number of bytes.</t>

</section>
<section anchor="sec-ctec"><name>Clear Text ESP Compression (CTEC)</name>

<t>Once the Inner IP Packet has undergone compression as outlined in <xref target="sec-iipc"/>, followed by the ESP Byte Alignment detailed in <xref target="sec-byte-align"/>, the resulting compressed inner packet comprises a specific number of bytes. To construct the Clear Text ESP Packet, it is necessary to ascertain the ESP Payload Data, the Next Header, the Pad Length, and the Padding fields.</t>

<t>In transport mode, the IP header of the inner packet remains uncompressed during the IIPC phase, and the ESP Payload Data is derived from the inner packet. Conversely, in tunnel mode, the Payload Data encompasses the entirety of the inner packet.</t>

<t>In transport mode, the Next Header field is obtained from either the inner IP Header or the Security Association, as specified in <xref target="sec-inner-ip4"/> or <xref target="sec-inner-ip6"/>. In tunnel mode, the Next Header is elided, as it is determined by ts_ip_version. FL is set to 8 bit, TV is set to IPv4 or IPv6 depending on ts_ip_version, MO is set to "equal" and CDA is set to "not-sent".</t>

<t>The ESP Pad Length and Padding fields are omitted only when ESP alignment has been selected to "8bit" and esp_encr does not necessitate a specific block size alignment, or if that block size is one byte. This is represented by setting FL to (Pad Length + 1) * 8 bits, leaving TV unset, configuring MO to "ignore," and designating CDA as padding. The ESP Padding and Pad Length may vary from their decompressed counterparts. However, since the IPsec process removes the padding, these variations do not affect packet processing. When esp_encr requires a specific block size, the ESP Pad Length and Padding fields remain uncompressed.</t>

</section>
<section anchor="sec-eec"><name>Encrypted ESP Compression (EEC)</name>

<t>SPI is compressed to its LSB.
FL is set to 32 bits, TV is not set, MO is set to "MSB( 4 - esp_spi_lsb)" and CDA is set to "LSB".</t>

<t>SN is compressed to their LSB, similarly to the SPI. 
FL is set to 32 bits, TV is not set, MO is set to "MSB( 4 - esp_sn_lsb)" and CDA is set to "LSB".</t>

</section>
</section>
<section anchor="schc-compression-for-ipsec-in-transport-mode"><name>SCHC Compression for IPsec in Transport mode</name>

<t>The transport mode mostly differs from the Tunnel mode in that the IP header of the packet is not encrypted. As a result, the IP Payload is compressed as described in <xref target="sec-payload"/>. The IP header is not compressed. The byte alignment of the Compressed Payload is performed as described in <xref target="sec-byte-align"/>. The Clear Text ESP Compression is performed as described in <xref target="sec-ctec"/> except for the Next Header Field, which is compressed as described in <xref target="sec-inner-ip6"/>.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>We request the IANA to create a new registry for the IIPC Profile</t>

<figure><artwork><![CDATA[
| IIPC Profile value | Reference |
+--------------------+-----------+
| "iipc_uncompress" | ThisRFC   |
| "iipc_diet-esp"   | ThisRFC   |
]]></artwork></figure>

<t>We request IANA to create the following registries for the "diet-esp" IIPC Profile.</t>

<figure><artwork><![CDATA[
| Flow Label CDA Value | Reference |
+----------------------+-----------+
| "uncompress"         | ThisRFC   |
| "generated"          | ThisRFC   |
| "lower"              | ThisRFC   |
| "zero"               | ThisRFC   |
]]></artwork></figure>

<figure><artwork><![CDATA[
| DSCP CDA Value       | Reference |
+----------------------+-----------+
| "uncompress"         | ThisRFC   |
| "lower"              | ThisRFC   |
| "sa"                 | ThisRFC   |
]]></artwork></figure>

<figure><artwork><![CDATA[
| ECN CDA Value       | Reference |
+----------------------+-----------+
| "uncompress"         | ThisRFC   |
| "lower"              | ThisRFC   |
]]></artwork></figure>

<figure><artwork><![CDATA[
| Alignment            | Reference |
+----------------------+-----------+
| "8 bit"              | ThisRFC   |
| "16 bit"             | ThisRFC   |
| "32 bit"             | ThisRFC   |
| "64 bit"             | ThisRFC   |
]]></artwork></figure>

<figure><artwork><![CDATA[
| IPsec mode Value     | Reference |
+----------------------+-----------+
| "Tunnel"             | ThisRFC   |
| "Transport"          | ThisRFC   |
]]></artwork></figure>

</section>
<section anchor="sec-sec"><name>Security Considerations</name>

<t>The security considerations encompass those outlined in ESP <xref target="RFC4303"/> as well as those pertaining to SCHC <xref target="RFC8724"/>.</t>

<t>When employing ESP <xref target="RFC4303"/> in Tunnel Mode, the complete inner IP packet is safeguarded against man-in-the-middle attacks through cryptographic means, rendering it virtually impossible for an attacker to alter any fields associated with either the inner IP header or the inner IP payload. This level of protection is achieved by configuring the Flow Label CDA Value to "uncompress," the DSCP CDA Value to either "uncompress" or "sa," and the ECN CDA Value to "uncompress."</t>

<t>However, this protection is compromised if the Flow Label CDA Value, DSCP CDA Value, or ECN CDA Values are set to "lower." In such cases, the values from the inner packet for the respective fields will be derived from the outer IP header, leaving these fields unprotected. It is important to note that even the Authentication Header <xref target="RFC4302"/> does not provide protection for these fields. When associated with a CDA value of "lower," the level of protection is akin to that provided in Transport mode. This vulnerability could be exploited by an attacker within an untrusted domain, potentially disrupting load balancing strategies that rely on the Flow Label <xref target="RFC6438"/><xref target="RFC6437"/>. More broadly, when the Flow Label CDA Value is set to "lower," the relevant Flow Label Security Considerations from <xref target="RFC6437"/> apply. Additionally, an attacker may manipulate the DSCP values to diminish the priority of specific packets, resulting in packets from the same flow having varying priorities, traversing different paths, and introducing additional latency to applications, thereby facilitating DDoS attacks. Consequently, these fields remain unprotected and are susceptible to modification during transmission, which may also be regarded as an acceptable risk.</t>

<t>When the Flow Label CDA Value is designated as "generated" or "zero," an attacker is unable to exploit the Flow Label field in any manner. The inner packet received is anticipated to possess a Flow Label distinct from that of the original encapsulated packet. However, the Flow Label is assigned by the receiving gateway. When the value is set to "zero," it is known, whereas when it is designated as "generated," it must be produced in accordance with the specifications outlined in <xref target="RFC6437"/>.</t>

<t>The DSCP CDA Value is assigned as "sa" when DSCP values are linked to Security Associations (SAs), but it should not be utilized when all DSCP values are encompassed within a single SA. In such instances, "uncompress" is recommended.</t>

<t>The encryption algorithm must adhere to the guidelines provided in <xref target="RFC8221"/> to guarantee contemporary cryptographic protection.</t>

<t>The least significant bits (LSB) of the ESP Security Parameter Index (SPI) determine the number of bits allocated to the SPI. An acceptable quantity of LSB must ensure that the peer possesses a sufficient number of SPIs, which is contingent upon the implementation of the SA lookup employed. If a peer relies solely on the SPI fields for SA lookup, then the number of LSB to consider must be sufficiently large to include the number of SPIs. 
A peer may compress its SPIs differently, in which case a incoming packet may have its SPI compressed to X bits while another packet may have its SPI compressed to Y bits. The operator must be cognizant that if multiple LSB values are permissible for each type of SA lookup, then multiple SA lookups and signature verifications may be required. It is advisable for a peer to ascertain the LSB associated with an incoming packet in a deterministic manner.</t>

<t>The ESP SN LSB must be established in a manner that allows the receiving peer to clearly ascertain the sequence number of the IPsec packet. If this requirement is not met, it will lead to an invalid signature verification, resulting in the rejection of the packet. Furthermore, the LSB should have the capacity to accommodate the maximum number of packets that may be in transit simultaneously. This approach will guarantee that the last packet received is correctly linked to the corresponding sequence number.</t>

<t>The ESP extension for IPv6 (and similarly for IPv4) requires a 64-bit (or 32-bit) alignment. Choosing alternative alignment values may result in a packet that fails to comply with this alignment requirement, potentially leading to rejection. The necessity for such alignment in IPv6 extensions arises from the fact that the length field in an IPv6 header extension is defined in terms of 64-bit words, making proper alignment essential for accurate packet parsing. Parsing of ESP does not present complications, as it is compatible with IPv6; the ESP extension is processed exclusively by the terminal IPsec peers and not by intermediary nodes. Furthermore, the ESP extension lacks a dedicated length field. Instead, its length is determined by the IPv6 Header Length field, which is measured in bytes, along with the starting position of the ESP header extension. Consequently, it remains entirely feasible to parse an ESP extension that is not aligned to 64 bits. The same principle is applicable to IPv4.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

<t>We would like to thank Laurent Toutain, Ana Caroline Minaburo and Pascla Thubert for his guidance on SCHC. Robert Moskowitz for inspiring the name "Diet-ESP" from Diet-HIP, Samita Chakrabart, Tero Kivinen, Michael Richarson and Valery Smyslov for their long time support. The authors would like to acknowledge the support from Mitacs through the Mitacs Accelerate program.</t>

</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">

&RFC2119;
&RFC8174;
&RFC4303;
&RFC4301;
&RFC8724;
&RFC7296;
&I-D.ietf-ipsecme-ikev2-diet-esp-extension;
&I-D.mglt-ipsecme-dscp-np;
&RFC8750;
&RFC6437;
&RFC6864;
&RFC8221;


    </references>

    <references title='Informative References' anchor="sec-informative-references">

<reference anchor="OpenSCHC" target="https://github.com/openschc">
  <front>
    <title>OpenSCHC a Python open-source implementation of SCHC (Static Context Header Compression)</title>
    <author >
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
&RFC9333;
&I-D.ietf-schc-architecture;
&RFC8376;
&RFC4302;
&RFC6438;


    </references>

</references>


<?line 622?>

<section anchor="appendix"><name>Appendix</name>

<t>This appendix provides the details of the SCHC rules defined for Diet-ESP compression, alongside an explanation and illustrative examples for both Tunnel and Transport modes.</t>

<section anchor="illustrative-examples-of-diet-esp-in-tunnel-mode"><name>Illustrative Examples of Diet-ESP in Tunnel Mode</name>

<t>This section provides a structured example of how Diet-ESP operates in Tunnel Mode. The example includes Attributes for Rule Generation (AfRG), SCHC rules, the Inner IP packet (IIP), the compression process, and the decompression process.</t>

<section anchor="json-representation-in-tunnel-mode"><name>Json representation in Tunnel mode</name>

<t>In Tunnel Mode, the full inner IP packet is compressed before encryption, making it more efficient for VPN scenarios. The "iipc_diet-esp" profile is used to indicate compression of the inner packet. The IPv6 Source and Destination Addresses are compressed using "MSB", sending only the variable parts while keeping the most significant bits. UDP Source and Destination Ports are compressed with "LSB", reducing their size. "compute-length" removes the UDP Length field, and "checksum" omits the UDP checksum, which is recalculated at decompression. ESP SPI and Sequence Number are compressed using "LSB" with an MSB mask. The "not-sent" CDA is used for Next Header fields in both IPv6 and ESP, as their values are predictable.</t>

<figure><sourcecode type="json"><![CDATA[
{
  "compressed": [
    {
      "FID": "IPv6.SourceAddress",
      "FL": 128,
      "TV": "2001:db8::1234",
      "MO": "MSB",
      "CDA": "LSB"
    },
    {
      "FID": "IPv6.DestinationAddress",
      "FL": 128,
      "TV": "2001:db8::5678",
      "MO": "MSB",
      "CDA": "LSB"
    },
    {
      "FID": "IPv6.NextHeader",
      "FL": 8,
      "TV": 17,
      "MO": "equal",
      "CDA": "not-sent"
    },
    {
      "FID": "UDP.SourcePort",
      "FL": 16,
      "TV": 5001,
      "MO": "MSB",
      "CDA": "LSB"
    },
    {
      "FID": "UDP.DestinationPort",
      "FL": 16,
      "TV": 4500,
      "MO": "MSB",
      "CDA": "LSB"
    },
    {
      "FID": "UDP.Length",
      "FL": 16,
      "TV": null,
      "MO": "ignore",
      "CDA": "compute-length"
    },
    {
      "FID": "UDP.Checksum",
      "FL": 16,
      "TV": null,
      "MO": "ignore",
      "CDA": "compute-checksum"
    },
    {
      "FID": "ESP.SPI",
      "FL": 32,
      "TV": null,
      "MO": "MSB(4 - esp_spi_lsb)",
      "CDA": "LSB"
    },
    {
      "FID": "ESP.SequenceNumber",
      "FL": 32,
      "TV": null,
      "MO": "MSB(4 - esp_sn_lsb)",
      "CDA": "LSB"
    },
    {
      "FID": "ESP.Padding",
      "FL": 8,
      "TV": null,
      "MO": "ignore",
      "CDA": "padding"
    }
  ]
}
]]></sourcecode></figure>

</section>
<section anchor="attributes-for-rule-generation-afrg"><name>Attributes for Rule Generation (AfRG)</name>

<t>The SCHC rules for Tunnel Mode are derived from the following AfRG:</t>

<t><list style="symbols">
  <t>IPsec Mode: Tunnel</t>
  <t>Traffic Selector IP Version: IPv6-only</t>
  <t>Traffic Selector Source Address: 2001:db8::1234</t>
  <t>Traffic Selector Destination Address: 2001:db8::5678</t>
  <t>DSCP CDA: Lower</t>
  <t>ECN CDA: Lower</t>
  <t>ESP SPI Compression: LSB</t>
  <t>ESP SN Compression: LSB</t>
</list></t>

</section>
<section anchor="diet-esp-compression"><name>Diet-ESP Compression</name>

<t>The SCHC rules for the IIPC, CTEC, and EEC layers are defined as IIPC to compresses IPv6 headers and UDP headers, CTEC to compresses ESP Trailer fields and EEC to compresses ESP SPI and Sequence Number.</t>

<t>The IIPC original packet before compression consists of:</t>

<t><list style="symbols">
  <t>IPv6 Source Address: 2001:db8::1234</t>
  <t>IPv6 Destination Address: 2001:db8::5678</t>
  <t>UDP Source Port: 5001</t>
  <t>UDP Destination Port: 4500</t>
  <t>UDP Length: 16 bytes</t>
  <t>ESP Payload Data</t>
</list></t>

<t>The compression process applies SCHC rules as follows:</t>

<t><list style="numbers" type="1">
  <t>IIPC: UDP Header Compression
  <list style="symbols">
      <t>UDP ports are compressed using the LSB technique.</t>
      <t>UDP Length is removed (computed at decompression).</t>
      <t>UDP Checksum is omitted.</t>
    </list></t>
  <t>IIPC: IPv6 Header Compression
  <list style="symbols">
      <t>Source and Destination Addresses are compressed using MSB.</t>
      <t>Next Header field is omitted.</t>
    </list></t>
  <t>CTEC: ESP Trailer Compression
  <list style="symbols">
      <t>Pad Length and Padding are omitted.</t>
      <t>Next Header is omitted.</t>
    </list></t>
  <t>EEC: ESP Header Compression
  <list style="symbols">
      <t>SPI and SN are compressed using LSB.</t>
      <t>Compressed Packet Output</t>
    </list></t>
</list></t>

<t>The final compressed packet consists of the compressed ESP header, IIPC compressed data, and payload.</t>

</section>
<section anchor="diet-esp-decompression"><name>Diet-ESP Decompression</name>

<t>The decompression process reverses these steps:</t>

<t><list style="numbers" type="1">
  <t>EEC: ESP Header Decompression
  <list style="symbols">
      <t>SPI and SN are reconstructed using the LSB values.</t>
    </list></t>
  <t>CTEC: ESP Trailer Decompression (Optional)</t>
  <t>IIPC: IPv6 Header Decompression
  <list style="symbols">
      <t>ESP Next Header and Padding fields are restored.</t>
      <t>IPv6 Source and Destination Addresses are restored.</t>
    </list></t>
  <t>IIPC: UDP Header Decompression
  <list style="symbols">
      <t>UDP ports are restored using the decompressed LSB values.</t>
      <t>UDP Length and Checksum are recalculated.</t>
    </list></t>
</list></t>

</section>
</section>
<section anchor="illustrative-examples-of-diet-esp-in-transport-mode"><name>Illustrative Examples of Diet-ESP in Transport Mode</name>

<t>This section follows the same structure as Tunnel Mode but applies to Transport Mode, where the IP header remains uncompressed.</t>

<section anchor="json-representation-in-transport-mode"><name>Json representation in Transport mode</name>

<t>In Transport Mode, since the IP header remains uncompressed, only the UDP payload and ESP fields are compressed. The new IANA-defined CDAs are applied as follows: "checksum" is used for the UDP checksum, meaning it is recalculated at decompression rather than transmitted. "compute-length" eliminates the UDP Length field, as it can be inferred from the payload size. "padding" ensures ESP padding aligns with 8-bit boundaries. "not-sent" is applied to the IPv6 and ESP Next Header fields because their values are predictable. The UDP Source and Destination Ports use "LSB" compression, reducing overhead by sending only the least significant bits. The ESP SPI and Sequence Number are compressed similarly using "LSB" with an MSB mask. Since the IP header is retained, the Source and Destination IPv6 Addresses are fully transmitted using "sent-value".</t>

<figure><sourcecode type="json"><![CDATA[
[
  {
  "ipsec_mode": "Transport",
  "ts_ip_version": "IPv6-only",
  "compressed_fields": [
    {
      "FID": "IPv6.SourceAddress",
      "FL": 128,
      "TV": "2001:db8::1001",
      "MO": "equal",
      "CDA": "sent-value"
    },
    {
      "FID": "IPv6.DestinationAddress",
      "FL": 128,
      "TV": "2001:db8::2002",
      "MO": "equal",
      "CDA": "sent-value"
    },
    {
      "FID": "IPv6.NextHeader",
      "FL": 8,
      "TV": 17,
      "MO": "equal",
      "CDA": "not-sent"
    },
    {
      "FID": "UDP.SourcePort",
      "FL": 16,
      "TV": 1234,
      "MO": "MSB",
      "CDA": "LSB"
    },
    {
      "FID": "UDP.DestinationPort",
      "FL": 16,
      "TV": 5678,
      "MO": "MSB",
      "CDA": "LSB"
    },
    {
      "FID": "UDP.Length",
      "FL": 16,
      "TV": null,
      "MO": "ignore",
      "CDA": "compute-length"
    },
    {
      "FID": "UDP.Checksum",
      "FL": 16,
      "TV": null,
      "MO": "ignore",
      "CDA": "checksum"
    },
    {
      "FID": "ESP.SPI",
      "FL": 32,
      "TV": null,
      "MO": "MSB(4 - esp_spi_lsb)",
      "CDA": "LSB"
    },
    {
      "FID": "ESP.SequenceNumber",
      "FL": 32,
      "TV": null,
      "MO": "MSB(4 - esp_sn_lsb)",
      "CDA": "LSB"
    },
    {
      "FID": "ESP.Padding",
      "FL": 8,
      "TV": null,
      "MO": "ignore",
      "CDA": "padding"
    },
    {
      "FID": "ESP.NextHeader",
      "FL": 8,
      "TV": 17,
      "MO": "equal",
      "CDA": "not-sent"
    }

]
  }
    ]
]]></sourcecode></figure>

</section>
<section anchor="attributes-for-rule-generation-afrg-1"><name>Attributes for Rule Generation (AfRG)</name>

<t>The SCHC rules for Transport Mode are derived from the following AfRG:</t>

<t><list style="symbols">
  <t>IPsec Mode: Transport</t>
  <t>Traffic Selector IP Version: IPv6-only</t>
  <t>Traffic Selector Source Address: 2001:db8::1001</t>
  <t>Traffic Selector Destination Address: 2001:db8::2002</t>
  <t>DSCP CDA: Lower</t>
  <t>ECN CDA: Lower</t>
  <t>ESP SPI Compression: LSB</t>
  <t>ESP SN Compression: LSB</t>
</list></t>

</section>
<section anchor="inner-ip-packet-iip"><name>Inner IP Packet (IIP)</name>

<t>The original packet before compression consists of:</t>

<t><list style="symbols">
  <t>IPv6 Source Address: 2001:db8::1001</t>
  <t>IPv6 Destination Address: 2001:db8::2002</t>
  <t>UDP Source Port: 1234</t>
  <t>UDP Destination Port: 5678</t>
  <t>UDP Length: 18 bytes</t>
  <t>ESP Payload Data</t>
</list></t>

</section>
<section anchor="diet-esp-compression-1"><name>Diet-ESP Compression</name>

<t><list style="numbers" type="1">
  <t>IIPC: UDP Header Compression
  <list style="symbols">
      <t>UDP ports are compressed using the LSB technique.</t>
      <t>UDP Length is removed (computed at decompression).</t>
      <t>UDP Checksum is omitted.</t>
    </list></t>
  <t>CTEC: ESP Trailer Compression
  <list style="symbols">
      <t>Pad Length and Padding are omitted.</t>
      <t>Next Header is omitted.</t>
    </list></t>
  <t>EEC: ESP Header Compression
  <list style="symbols">
      <t>SPI and SN are compressed using LSB.</t>
    </list></t>
  <t>Compressed Packet Output</t>
</list></t>

<t>The final compressed packet consists of the compressed ESP header, IIPC compressed data, and payload.</t>

</section>
<section anchor="diet-esp-decompression-1"><name>Diet-ESP Decompression</name>

<t>The decompression process mirrors the compression steps, restoring SPI, SN, UDP headers, ESP Next Header, and Padding fields.</t>

</section>
<section anchor="github-repository-diet-esp-schc-implementation"><name>GitHub Repository: Diet-ESP SCHC Implementation</name>

<t>The source code for the implementation of the Diet-ESP profile, including the compression and decompression logic using the SCHC rules, is available on GitHub. Access the code at the following link:</t>

<t>GitHub Repository: <eref target="https://github.com/mglt/pyesp/tree/master/examples/draft-diet-esp.py">Diet-ESP SCHC Implementation</eref></t>

<t>This repository contains the rule definitions, examples, and source code for implementing and testing the Diet-ESP profile. Refer to the README file for setup instructions and usage guidelines.</t>

</section>
</section>
</section>


  </back>

<!-- ##markdown-source:
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
OpLNVk+i/wuJbeormOoAAA==

-->

</rfc>

